{"version":3,"file":"BigImageCarousel-H-rAuVYl-HXIhBUUc.js","sources":["../../assets/BigImageCarousel-H-rAuVYl.js"],"sourcesContent":["import { c as createLucideIcon, C as ChevronRight, X } from \"./SectionReveal-CANcsaBd.js\";\r\nimport { r as reactExports, j as jsxRuntimeExports, a as reactDomExports } from \"./index-C4ZJcCGv.js\";\r\n/**\r\n * @license lucide-react v0.462.0 - ISC\r\n *\r\n * This source code is licensed under the ISC license.\r\n * See the LICENSE file in the root directory of this source tree.\r\n */\r\nconst ArrowLeft = createLucideIcon(\"ArrowLeft\", [\r\n  [\"path\", { d: \"m12 19-7-7 7-7\", key: \"1l729n\" }],\r\n  [\"path\", { d: \"M19 12H5\", key: \"x3x0zl\" }]\r\n]);\r\n/**\r\n * @license lucide-react v0.462.0 - ISC\r\n *\r\n * This source code is licensed under the ISC license.\r\n * See the LICENSE file in the root directory of this source tree.\r\n */\r\nconst ChevronLeft = createLucideIcon(\"ChevronLeft\", [\r\n  [\"path\", { d: \"m15 18-6-6 6-6\", key: \"1wnfg3\" }]\r\n]);\r\n/**\r\n * @license lucide-react v0.462.0 - ISC\r\n *\r\n * This source code is licensed under the ISC license.\r\n * See the LICENSE file in the root directory of this source tree.\r\n */\r\nconst Maximize2 = createLucideIcon(\"Maximize2\", [\r\n  [\"polyline\", { points: \"15 3 21 3 21 9\", key: \"mznyad\" }],\r\n  [\"polyline\", { points: \"9 21 3 21 3 15\", key: \"1avn1i\" }],\r\n  [\"line\", { x1: \"21\", x2: \"14\", y1: \"3\", y2: \"10\", key: \"ota7mn\" }],\r\n  [\"line\", { x1: \"3\", x2: \"10\", y1: \"21\", y2: \"14\", key: \"1atl0r\" }]\r\n]);\r\nfunction isObject$1(subject) {\r\n  return Object.prototype.toString.call(subject) === \"[object Object]\";\r\n}\r\nfunction isRecord(subject) {\r\n  return isObject$1(subject) || Array.isArray(subject);\r\n}\r\nfunction canUseDOM() {\r\n  return !!(typeof window !== \"undefined\" && window.document && window.document.createElement);\r\n}\r\nfunction areOptionsEqual(optionsA, optionsB) {\r\n  const optionsAKeys = Object.keys(optionsA);\r\n  const optionsBKeys = Object.keys(optionsB);\r\n  if (optionsAKeys.length !== optionsBKeys.length) return false;\r\n  const breakpointsA = JSON.stringify(Object.keys(optionsA.breakpoints || {}));\r\n  const breakpointsB = JSON.stringify(Object.keys(optionsB.breakpoints || {}));\r\n  if (breakpointsA !== breakpointsB) return false;\r\n  return optionsAKeys.every((key) => {\r\n    const valueA = optionsA[key];\r\n    const valueB = optionsB[key];\r\n    if (typeof valueA === \"function\") return `${valueA}` === `${valueB}`;\r\n    if (!isRecord(valueA) || !isRecord(valueB)) return valueA === valueB;\r\n    return areOptionsEqual(valueA, valueB);\r\n  });\r\n}\r\nfunction sortAndMapPluginToOptions(plugins) {\r\n  return plugins.concat().sort((a, b) => a.name > b.name ? 1 : -1).map((plugin) => plugin.options);\r\n}\r\nfunction arePluginsEqual(pluginsA, pluginsB) {\r\n  if (pluginsA.length !== pluginsB.length) return false;\r\n  const optionsA = sortAndMapPluginToOptions(pluginsA);\r\n  const optionsB = sortAndMapPluginToOptions(pluginsB);\r\n  return optionsA.every((optionA, index) => {\r\n    const optionB = optionsB[index];\r\n    return areOptionsEqual(optionA, optionB);\r\n  });\r\n}\r\nfunction isNumber(subject) {\r\n  return typeof subject === \"number\";\r\n}\r\nfunction isString(subject) {\r\n  return typeof subject === \"string\";\r\n}\r\nfunction isBoolean(subject) {\r\n  return typeof subject === \"boolean\";\r\n}\r\nfunction isObject(subject) {\r\n  return Object.prototype.toString.call(subject) === \"[object Object]\";\r\n}\r\nfunction mathAbs(n) {\r\n  return Math.abs(n);\r\n}\r\nfunction mathSign(n) {\r\n  return Math.sign(n);\r\n}\r\nfunction deltaAbs(valueB, valueA) {\r\n  return mathAbs(valueB - valueA);\r\n}\r\nfunction factorAbs(valueB, valueA) {\r\n  if (valueB === 0 || valueA === 0) return 0;\r\n  if (mathAbs(valueB) <= mathAbs(valueA)) return 0;\r\n  const diff = deltaAbs(mathAbs(valueB), mathAbs(valueA));\r\n  return mathAbs(diff / valueB);\r\n}\r\nfunction roundToTwoDecimals(num) {\r\n  return Math.round(num * 100) / 100;\r\n}\r\nfunction arrayKeys(array) {\r\n  return objectKeys(array).map(Number);\r\n}\r\nfunction arrayLast(array) {\r\n  return array[arrayLastIndex(array)];\r\n}\r\nfunction arrayLastIndex(array) {\r\n  return Math.max(0, array.length - 1);\r\n}\r\nfunction arrayIsLastIndex(array, index) {\r\n  return index === arrayLastIndex(array);\r\n}\r\nfunction arrayFromNumber(n, startAt = 0) {\r\n  return Array.from(Array(n), (_, i) => startAt + i);\r\n}\r\nfunction objectKeys(object) {\r\n  return Object.keys(object);\r\n}\r\nfunction objectsMergeDeep(objectA, objectB) {\r\n  return [objectA, objectB].reduce((mergedObjects, currentObject) => {\r\n    objectKeys(currentObject).forEach((key) => {\r\n      const valueA = mergedObjects[key];\r\n      const valueB = currentObject[key];\r\n      const areObjects = isObject(valueA) && isObject(valueB);\r\n      mergedObjects[key] = areObjects ? objectsMergeDeep(valueA, valueB) : valueB;\r\n    });\r\n    return mergedObjects;\r\n  }, {});\r\n}\r\nfunction isMouseEvent(evt, ownerWindow) {\r\n  return typeof ownerWindow.MouseEvent !== \"undefined\" && evt instanceof ownerWindow.MouseEvent;\r\n}\r\nfunction Alignment(align, viewSize) {\r\n  const predefined = {\r\n    start,\r\n    center,\r\n    end\r\n  };\r\n  function start() {\r\n    return 0;\r\n  }\r\n  function center(n) {\r\n    return end(n) / 2;\r\n  }\r\n  function end(n) {\r\n    return viewSize - n;\r\n  }\r\n  function measure(n, index) {\r\n    if (isString(align)) return predefined[align](n);\r\n    return align(viewSize, n, index);\r\n  }\r\n  const self = {\r\n    measure\r\n  };\r\n  return self;\r\n}\r\nfunction EventStore() {\r\n  let listeners = [];\r\n  function add(node, type, handler, options = {\r\n    passive: true\r\n  }) {\r\n    let removeListener;\r\n    if (\"addEventListener\" in node) {\r\n      node.addEventListener(type, handler, options);\r\n      removeListener = () => node.removeEventListener(type, handler, options);\r\n    } else {\r\n      const legacyMediaQueryList = node;\r\n      legacyMediaQueryList.addListener(handler);\r\n      removeListener = () => legacyMediaQueryList.removeListener(handler);\r\n    }\r\n    listeners.push(removeListener);\r\n    return self;\r\n  }\r\n  function clear() {\r\n    listeners = listeners.filter((remove) => remove());\r\n  }\r\n  const self = {\r\n    add,\r\n    clear\r\n  };\r\n  return self;\r\n}\r\nfunction Animations(ownerDocument, ownerWindow, update, render) {\r\n  const documentVisibleHandler = EventStore();\r\n  const fixedTimeStep = 1e3 / 60;\r\n  let lastTimeStamp = null;\r\n  let accumulatedTime = 0;\r\n  let animationId = 0;\r\n  function init() {\r\n    documentVisibleHandler.add(ownerDocument, \"visibilitychange\", () => {\r\n      if (ownerDocument.hidden) reset();\r\n    });\r\n  }\r\n  function destroy() {\r\n    stop();\r\n    documentVisibleHandler.clear();\r\n  }\r\n  function animate(timeStamp) {\r\n    if (!animationId) return;\r\n    if (!lastTimeStamp) {\r\n      lastTimeStamp = timeStamp;\r\n      update();\r\n      update();\r\n    }\r\n    const timeElapsed = timeStamp - lastTimeStamp;\r\n    lastTimeStamp = timeStamp;\r\n    accumulatedTime += timeElapsed;\r\n    while (accumulatedTime >= fixedTimeStep) {\r\n      update();\r\n      accumulatedTime -= fixedTimeStep;\r\n    }\r\n    const alpha = accumulatedTime / fixedTimeStep;\r\n    render(alpha);\r\n    if (animationId) {\r\n      animationId = ownerWindow.requestAnimationFrame(animate);\r\n    }\r\n  }\r\n  function start() {\r\n    if (animationId) return;\r\n    animationId = ownerWindow.requestAnimationFrame(animate);\r\n  }\r\n  function stop() {\r\n    ownerWindow.cancelAnimationFrame(animationId);\r\n    lastTimeStamp = null;\r\n    accumulatedTime = 0;\r\n    animationId = 0;\r\n  }\r\n  function reset() {\r\n    lastTimeStamp = null;\r\n    accumulatedTime = 0;\r\n  }\r\n  const self = {\r\n    init,\r\n    destroy,\r\n    start,\r\n    stop,\r\n    update,\r\n    render\r\n  };\r\n  return self;\r\n}\r\nfunction Axis(axis, contentDirection) {\r\n  const isRightToLeft = contentDirection === \"rtl\";\r\n  const isVertical = axis === \"y\";\r\n  const scroll = isVertical ? \"y\" : \"x\";\r\n  const cross = isVertical ? \"x\" : \"y\";\r\n  const sign = !isVertical && isRightToLeft ? -1 : 1;\r\n  const startEdge = getStartEdge();\r\n  const endEdge = getEndEdge();\r\n  function measureSize(nodeRect) {\r\n    const {\r\n      height,\r\n      width\r\n    } = nodeRect;\r\n    return isVertical ? height : width;\r\n  }\r\n  function getStartEdge() {\r\n    if (isVertical) return \"top\";\r\n    return isRightToLeft ? \"right\" : \"left\";\r\n  }\r\n  function getEndEdge() {\r\n    if (isVertical) return \"bottom\";\r\n    return isRightToLeft ? \"left\" : \"right\";\r\n  }\r\n  function direction(n) {\r\n    return n * sign;\r\n  }\r\n  const self = {\r\n    scroll,\r\n    cross,\r\n    startEdge,\r\n    endEdge,\r\n    measureSize,\r\n    direction\r\n  };\r\n  return self;\r\n}\r\nfunction Limit(min = 0, max = 0) {\r\n  const length = mathAbs(min - max);\r\n  function reachedMin(n) {\r\n    return n < min;\r\n  }\r\n  function reachedMax(n) {\r\n    return n > max;\r\n  }\r\n  function reachedAny(n) {\r\n    return reachedMin(n) || reachedMax(n);\r\n  }\r\n  function constrain(n) {\r\n    if (!reachedAny(n)) return n;\r\n    return reachedMin(n) ? min : max;\r\n  }\r\n  function removeOffset(n) {\r\n    if (!length) return n;\r\n    return n - length * Math.ceil((n - max) / length);\r\n  }\r\n  const self = {\r\n    length,\r\n    max,\r\n    min,\r\n    constrain,\r\n    reachedAny,\r\n    reachedMax,\r\n    reachedMin,\r\n    removeOffset\r\n  };\r\n  return self;\r\n}\r\nfunction Counter(max, start, loop) {\r\n  const {\r\n    constrain\r\n  } = Limit(0, max);\r\n  const loopEnd = max + 1;\r\n  let counter = withinLimit(start);\r\n  function withinLimit(n) {\r\n    return !loop ? constrain(n) : mathAbs((loopEnd + n) % loopEnd);\r\n  }\r\n  function get() {\r\n    return counter;\r\n  }\r\n  function set(n) {\r\n    counter = withinLimit(n);\r\n    return self;\r\n  }\r\n  function add(n) {\r\n    return clone().set(get() + n);\r\n  }\r\n  function clone() {\r\n    return Counter(max, get(), loop);\r\n  }\r\n  const self = {\r\n    get,\r\n    set,\r\n    add,\r\n    clone\r\n  };\r\n  return self;\r\n}\r\nfunction DragHandler(axis, rootNode, ownerDocument, ownerWindow, target, dragTracker, location, animation, scrollTo, scrollBody, scrollTarget, index, eventHandler, percentOfView, dragFree, dragThreshold, skipSnaps, baseFriction, watchDrag) {\r\n  const {\r\n    cross: crossAxis,\r\n    direction\r\n  } = axis;\r\n  const focusNodes = [\"INPUT\", \"SELECT\", \"TEXTAREA\"];\r\n  const nonPassiveEvent = {\r\n    passive: false\r\n  };\r\n  const initEvents = EventStore();\r\n  const dragEvents = EventStore();\r\n  const goToNextThreshold = Limit(50, 225).constrain(percentOfView.measure(20));\r\n  const snapForceBoost = {\r\n    mouse: 300,\r\n    touch: 400\r\n  };\r\n  const freeForceBoost = {\r\n    mouse: 500,\r\n    touch: 600\r\n  };\r\n  const baseSpeed = dragFree ? 43 : 25;\r\n  let isMoving = false;\r\n  let startScroll = 0;\r\n  let startCross = 0;\r\n  let pointerIsDown = false;\r\n  let preventScroll = false;\r\n  let preventClick = false;\r\n  let isMouse = false;\r\n  function init(emblaApi) {\r\n    if (!watchDrag) return;\r\n    function downIfAllowed(evt) {\r\n      if (isBoolean(watchDrag) || watchDrag(emblaApi, evt)) down(evt);\r\n    }\r\n    const node = rootNode;\r\n    initEvents.add(node, \"dragstart\", (evt) => evt.preventDefault(), nonPassiveEvent).add(node, \"touchmove\", () => void 0, nonPassiveEvent).add(node, \"touchend\", () => void 0).add(node, \"touchstart\", downIfAllowed).add(node, \"mousedown\", downIfAllowed).add(node, \"touchcancel\", up).add(node, \"contextmenu\", up).add(node, \"click\", click, true);\r\n  }\r\n  function destroy() {\r\n    initEvents.clear();\r\n    dragEvents.clear();\r\n  }\r\n  function addDragEvents() {\r\n    const node = isMouse ? ownerDocument : rootNode;\r\n    dragEvents.add(node, \"touchmove\", move, nonPassiveEvent).add(node, \"touchend\", up).add(node, \"mousemove\", move, nonPassiveEvent).add(node, \"mouseup\", up);\r\n  }\r\n  function isFocusNode(node) {\r\n    const nodeName = node.nodeName || \"\";\r\n    return focusNodes.includes(nodeName);\r\n  }\r\n  function forceBoost() {\r\n    const boost = dragFree ? freeForceBoost : snapForceBoost;\r\n    const type = isMouse ? \"mouse\" : \"touch\";\r\n    return boost[type];\r\n  }\r\n  function allowedForce(force, targetChanged) {\r\n    const next = index.add(mathSign(force) * -1);\r\n    const baseForce = scrollTarget.byDistance(force, !dragFree).distance;\r\n    if (dragFree || mathAbs(force) < goToNextThreshold) return baseForce;\r\n    if (skipSnaps && targetChanged) return baseForce * 0.5;\r\n    return scrollTarget.byIndex(next.get(), 0).distance;\r\n  }\r\n  function down(evt) {\r\n    const isMouseEvt = isMouseEvent(evt, ownerWindow);\r\n    isMouse = isMouseEvt;\r\n    preventClick = dragFree && isMouseEvt && !evt.buttons && isMoving;\r\n    isMoving = deltaAbs(target.get(), location.get()) >= 2;\r\n    if (isMouseEvt && evt.button !== 0) return;\r\n    if (isFocusNode(evt.target)) return;\r\n    pointerIsDown = true;\r\n    dragTracker.pointerDown(evt);\r\n    scrollBody.useFriction(0).useDuration(0);\r\n    target.set(location);\r\n    addDragEvents();\r\n    startScroll = dragTracker.readPoint(evt);\r\n    startCross = dragTracker.readPoint(evt, crossAxis);\r\n    eventHandler.emit(\"pointerDown\");\r\n  }\r\n  function move(evt) {\r\n    const isTouchEvt = !isMouseEvent(evt, ownerWindow);\r\n    if (isTouchEvt && evt.touches.length >= 2) return up(evt);\r\n    const lastScroll = dragTracker.readPoint(evt);\r\n    const lastCross = dragTracker.readPoint(evt, crossAxis);\r\n    const diffScroll = deltaAbs(lastScroll, startScroll);\r\n    const diffCross = deltaAbs(lastCross, startCross);\r\n    if (!preventScroll && !isMouse) {\r\n      if (!evt.cancelable) return up(evt);\r\n      preventScroll = diffScroll > diffCross;\r\n      if (!preventScroll) return up(evt);\r\n    }\r\n    const diff = dragTracker.pointerMove(evt);\r\n    if (diffScroll > dragThreshold) preventClick = true;\r\n    scrollBody.useFriction(0.3).useDuration(0.75);\r\n    animation.start();\r\n    target.add(direction(diff));\r\n    evt.preventDefault();\r\n  }\r\n  function up(evt) {\r\n    const currentLocation = scrollTarget.byDistance(0, false);\r\n    const targetChanged = currentLocation.index !== index.get();\r\n    const rawForce = dragTracker.pointerUp(evt) * forceBoost();\r\n    const force = allowedForce(direction(rawForce), targetChanged);\r\n    const forceFactor = factorAbs(rawForce, force);\r\n    const speed = baseSpeed - 10 * forceFactor;\r\n    const friction = baseFriction + forceFactor / 50;\r\n    preventScroll = false;\r\n    pointerIsDown = false;\r\n    dragEvents.clear();\r\n    scrollBody.useDuration(speed).useFriction(friction);\r\n    scrollTo.distance(force, !dragFree);\r\n    isMouse = false;\r\n    eventHandler.emit(\"pointerUp\");\r\n  }\r\n  function click(evt) {\r\n    if (preventClick) {\r\n      evt.stopPropagation();\r\n      evt.preventDefault();\r\n      preventClick = false;\r\n    }\r\n  }\r\n  function pointerDown() {\r\n    return pointerIsDown;\r\n  }\r\n  const self = {\r\n    init,\r\n    destroy,\r\n    pointerDown\r\n  };\r\n  return self;\r\n}\r\nfunction DragTracker(axis, ownerWindow) {\r\n  const logInterval = 170;\r\n  let startEvent;\r\n  let lastEvent;\r\n  function readTime(evt) {\r\n    return evt.timeStamp;\r\n  }\r\n  function readPoint(evt, evtAxis) {\r\n    const property = evtAxis || axis.scroll;\r\n    const coord = `client${property === \"x\" ? \"X\" : \"Y\"}`;\r\n    return (isMouseEvent(evt, ownerWindow) ? evt : evt.touches[0])[coord];\r\n  }\r\n  function pointerDown(evt) {\r\n    startEvent = evt;\r\n    lastEvent = evt;\r\n    return readPoint(evt);\r\n  }\r\n  function pointerMove(evt) {\r\n    const diff = readPoint(evt) - readPoint(lastEvent);\r\n    const expired = readTime(evt) - readTime(startEvent) > logInterval;\r\n    lastEvent = evt;\r\n    if (expired) startEvent = evt;\r\n    return diff;\r\n  }\r\n  function pointerUp(evt) {\r\n    if (!startEvent || !lastEvent) return 0;\r\n    const diffDrag = readPoint(lastEvent) - readPoint(startEvent);\r\n    const diffTime = readTime(evt) - readTime(startEvent);\r\n    const expired = readTime(evt) - readTime(lastEvent) > logInterval;\r\n    const force = diffDrag / diffTime;\r\n    const isFlick = diffTime && !expired && mathAbs(force) > 0.1;\r\n    return isFlick ? force : 0;\r\n  }\r\n  const self = {\r\n    pointerDown,\r\n    pointerMove,\r\n    pointerUp,\r\n    readPoint\r\n  };\r\n  return self;\r\n}\r\nfunction NodeRects() {\r\n  function measure(node) {\r\n    const {\r\n      offsetTop,\r\n      offsetLeft,\r\n      offsetWidth,\r\n      offsetHeight\r\n    } = node;\r\n    const offset = {\r\n      top: offsetTop,\r\n      right: offsetLeft + offsetWidth,\r\n      bottom: offsetTop + offsetHeight,\r\n      left: offsetLeft,\r\n      width: offsetWidth,\r\n      height: offsetHeight\r\n    };\r\n    return offset;\r\n  }\r\n  const self = {\r\n    measure\r\n  };\r\n  return self;\r\n}\r\nfunction PercentOfView(viewSize) {\r\n  function measure(n) {\r\n    return viewSize * (n / 100);\r\n  }\r\n  const self = {\r\n    measure\r\n  };\r\n  return self;\r\n}\r\nfunction ResizeHandler(container, eventHandler, ownerWindow, slides, axis, watchResize, nodeRects) {\r\n  const observeNodes = [container].concat(slides);\r\n  let resizeObserver;\r\n  let containerSize;\r\n  let slideSizes = [];\r\n  let destroyed = false;\r\n  function readSize(node) {\r\n    return axis.measureSize(nodeRects.measure(node));\r\n  }\r\n  function init(emblaApi) {\r\n    if (!watchResize) return;\r\n    containerSize = readSize(container);\r\n    slideSizes = slides.map(readSize);\r\n    function defaultCallback(entries) {\r\n      for (const entry of entries) {\r\n        if (destroyed) return;\r\n        const isContainer = entry.target === container;\r\n        const slideIndex = slides.indexOf(entry.target);\r\n        const lastSize = isContainer ? containerSize : slideSizes[slideIndex];\r\n        const newSize = readSize(isContainer ? container : slides[slideIndex]);\r\n        const diffSize = mathAbs(newSize - lastSize);\r\n        if (diffSize >= 0.5) {\r\n          emblaApi.reInit();\r\n          eventHandler.emit(\"resize\");\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    resizeObserver = new ResizeObserver((entries) => {\r\n      if (isBoolean(watchResize) || watchResize(emblaApi, entries)) {\r\n        defaultCallback(entries);\r\n      }\r\n    });\r\n    ownerWindow.requestAnimationFrame(() => {\r\n      observeNodes.forEach((node) => resizeObserver.observe(node));\r\n    });\r\n  }\r\n  function destroy() {\r\n    destroyed = true;\r\n    if (resizeObserver) resizeObserver.disconnect();\r\n  }\r\n  const self = {\r\n    init,\r\n    destroy\r\n  };\r\n  return self;\r\n}\r\nfunction ScrollBody(location, offsetLocation, previousLocation, target, baseDuration, baseFriction) {\r\n  let scrollVelocity = 0;\r\n  let scrollDirection = 0;\r\n  let scrollDuration = baseDuration;\r\n  let scrollFriction = baseFriction;\r\n  let rawLocation = location.get();\r\n  let rawLocationPrevious = 0;\r\n  function seek() {\r\n    const displacement = target.get() - location.get();\r\n    const isInstant = !scrollDuration;\r\n    let scrollDistance = 0;\r\n    if (isInstant) {\r\n      scrollVelocity = 0;\r\n      previousLocation.set(target);\r\n      location.set(target);\r\n      scrollDistance = displacement;\r\n    } else {\r\n      previousLocation.set(location);\r\n      scrollVelocity += displacement / scrollDuration;\r\n      scrollVelocity *= scrollFriction;\r\n      rawLocation += scrollVelocity;\r\n      location.add(scrollVelocity);\r\n      scrollDistance = rawLocation - rawLocationPrevious;\r\n    }\r\n    scrollDirection = mathSign(scrollDistance);\r\n    rawLocationPrevious = rawLocation;\r\n    return self;\r\n  }\r\n  function settled() {\r\n    const diff = target.get() - offsetLocation.get();\r\n    return mathAbs(diff) < 1e-3;\r\n  }\r\n  function duration() {\r\n    return scrollDuration;\r\n  }\r\n  function direction() {\r\n    return scrollDirection;\r\n  }\r\n  function velocity() {\r\n    return scrollVelocity;\r\n  }\r\n  function useBaseDuration() {\r\n    return useDuration(baseDuration);\r\n  }\r\n  function useBaseFriction() {\r\n    return useFriction(baseFriction);\r\n  }\r\n  function useDuration(n) {\r\n    scrollDuration = n;\r\n    return self;\r\n  }\r\n  function useFriction(n) {\r\n    scrollFriction = n;\r\n    return self;\r\n  }\r\n  const self = {\r\n    direction,\r\n    duration,\r\n    velocity,\r\n    seek,\r\n    settled,\r\n    useBaseFriction,\r\n    useBaseDuration,\r\n    useFriction,\r\n    useDuration\r\n  };\r\n  return self;\r\n}\r\nfunction ScrollBounds(limit, location, target, scrollBody, percentOfView) {\r\n  const pullBackThreshold = percentOfView.measure(10);\r\n  const edgeOffsetTolerance = percentOfView.measure(50);\r\n  const frictionLimit = Limit(0.1, 0.99);\r\n  let disabled = false;\r\n  function shouldConstrain() {\r\n    if (disabled) return false;\r\n    if (!limit.reachedAny(target.get())) return false;\r\n    if (!limit.reachedAny(location.get())) return false;\r\n    return true;\r\n  }\r\n  function constrain(pointerDown) {\r\n    if (!shouldConstrain()) return;\r\n    const edge = limit.reachedMin(location.get()) ? \"min\" : \"max\";\r\n    const diffToEdge = mathAbs(limit[edge] - location.get());\r\n    const diffToTarget = target.get() - location.get();\r\n    const friction = frictionLimit.constrain(diffToEdge / edgeOffsetTolerance);\r\n    target.subtract(diffToTarget * friction);\r\n    if (!pointerDown && mathAbs(diffToTarget) < pullBackThreshold) {\r\n      target.set(limit.constrain(target.get()));\r\n      scrollBody.useDuration(25).useBaseFriction();\r\n    }\r\n  }\r\n  function toggleActive(active) {\r\n    disabled = !active;\r\n  }\r\n  const self = {\r\n    shouldConstrain,\r\n    constrain,\r\n    toggleActive\r\n  };\r\n  return self;\r\n}\r\nfunction ScrollContain(viewSize, contentSize, snapsAligned, containScroll, pixelTolerance) {\r\n  const scrollBounds = Limit(-contentSize + viewSize, 0);\r\n  const snapsBounded = measureBounded();\r\n  const scrollContainLimit = findScrollContainLimit();\r\n  const snapsContained = measureContained();\r\n  function usePixelTolerance(bound, snap) {\r\n    return deltaAbs(bound, snap) <= 1;\r\n  }\r\n  function findScrollContainLimit() {\r\n    const startSnap = snapsBounded[0];\r\n    const endSnap = arrayLast(snapsBounded);\r\n    const min = snapsBounded.lastIndexOf(startSnap);\r\n    const max = snapsBounded.indexOf(endSnap) + 1;\r\n    return Limit(min, max);\r\n  }\r\n  function measureBounded() {\r\n    return snapsAligned.map((snapAligned, index) => {\r\n      const {\r\n        min,\r\n        max\r\n      } = scrollBounds;\r\n      const snap = scrollBounds.constrain(snapAligned);\r\n      const isFirst = !index;\r\n      const isLast = arrayIsLastIndex(snapsAligned, index);\r\n      if (isFirst) return max;\r\n      if (isLast) return min;\r\n      if (usePixelTolerance(min, snap)) return min;\r\n      if (usePixelTolerance(max, snap)) return max;\r\n      return snap;\r\n    }).map((scrollBound) => parseFloat(scrollBound.toFixed(3)));\r\n  }\r\n  function measureContained() {\r\n    if (contentSize <= viewSize + pixelTolerance) return [scrollBounds.max];\r\n    if (containScroll === \"keepSnaps\") return snapsBounded;\r\n    const {\r\n      min,\r\n      max\r\n    } = scrollContainLimit;\r\n    return snapsBounded.slice(min, max);\r\n  }\r\n  const self = {\r\n    snapsContained,\r\n    scrollContainLimit\r\n  };\r\n  return self;\r\n}\r\nfunction ScrollLimit(contentSize, scrollSnaps, loop) {\r\n  const max = scrollSnaps[0];\r\n  const min = loop ? max - contentSize : arrayLast(scrollSnaps);\r\n  const limit = Limit(min, max);\r\n  const self = {\r\n    limit\r\n  };\r\n  return self;\r\n}\r\nfunction ScrollLooper(contentSize, limit, location, vectors) {\r\n  const jointSafety = 0.1;\r\n  const min = limit.min + jointSafety;\r\n  const max = limit.max + jointSafety;\r\n  const {\r\n    reachedMin,\r\n    reachedMax\r\n  } = Limit(min, max);\r\n  function shouldLoop(direction) {\r\n    if (direction === 1) return reachedMax(location.get());\r\n    if (direction === -1) return reachedMin(location.get());\r\n    return false;\r\n  }\r\n  function loop(direction) {\r\n    if (!shouldLoop(direction)) return;\r\n    const loopDistance = contentSize * (direction * -1);\r\n    vectors.forEach((v) => v.add(loopDistance));\r\n  }\r\n  const self = {\r\n    loop\r\n  };\r\n  return self;\r\n}\r\nfunction ScrollProgress(limit) {\r\n  const {\r\n    max,\r\n    length\r\n  } = limit;\r\n  function get(n) {\r\n    const currentLocation = n - max;\r\n    return length ? currentLocation / -length : 0;\r\n  }\r\n  const self = {\r\n    get\r\n  };\r\n  return self;\r\n}\r\nfunction ScrollSnaps(axis, alignment, containerRect, slideRects, slidesToScroll) {\r\n  const {\r\n    startEdge,\r\n    endEdge\r\n  } = axis;\r\n  const {\r\n    groupSlides\r\n  } = slidesToScroll;\r\n  const alignments = measureSizes().map(alignment.measure);\r\n  const snaps = measureUnaligned();\r\n  const snapsAligned = measureAligned();\r\n  function measureSizes() {\r\n    return groupSlides(slideRects).map((rects) => arrayLast(rects)[endEdge] - rects[0][startEdge]).map(mathAbs);\r\n  }\r\n  function measureUnaligned() {\r\n    return slideRects.map((rect) => containerRect[startEdge] - rect[startEdge]).map((snap) => -mathAbs(snap));\r\n  }\r\n  function measureAligned() {\r\n    return groupSlides(snaps).map((g) => g[0]).map((snap, index) => snap + alignments[index]);\r\n  }\r\n  const self = {\r\n    snaps,\r\n    snapsAligned\r\n  };\r\n  return self;\r\n}\r\nfunction SlideRegistry(containSnaps, containScroll, scrollSnaps, scrollContainLimit, slidesToScroll, slideIndexes) {\r\n  const {\r\n    groupSlides\r\n  } = slidesToScroll;\r\n  const {\r\n    min,\r\n    max\r\n  } = scrollContainLimit;\r\n  const slideRegistry = createSlideRegistry();\r\n  function createSlideRegistry() {\r\n    const groupedSlideIndexes = groupSlides(slideIndexes);\r\n    const doNotContain = !containSnaps || containScroll === \"keepSnaps\";\r\n    if (scrollSnaps.length === 1) return [slideIndexes];\r\n    if (doNotContain) return groupedSlideIndexes;\r\n    return groupedSlideIndexes.slice(min, max).map((group, index, groups) => {\r\n      const isFirst = !index;\r\n      const isLast = arrayIsLastIndex(groups, index);\r\n      if (isFirst) {\r\n        const range = arrayLast(groups[0]) + 1;\r\n        return arrayFromNumber(range);\r\n      }\r\n      if (isLast) {\r\n        const range = arrayLastIndex(slideIndexes) - arrayLast(groups)[0] + 1;\r\n        return arrayFromNumber(range, arrayLast(groups)[0]);\r\n      }\r\n      return group;\r\n    });\r\n  }\r\n  const self = {\r\n    slideRegistry\r\n  };\r\n  return self;\r\n}\r\nfunction ScrollTarget(loop, scrollSnaps, contentSize, limit, targetVector) {\r\n  const {\r\n    reachedAny,\r\n    removeOffset,\r\n    constrain\r\n  } = limit;\r\n  function minDistance(distances) {\r\n    return distances.concat().sort((a, b) => mathAbs(a) - mathAbs(b))[0];\r\n  }\r\n  function findTargetSnap(target) {\r\n    const distance = loop ? removeOffset(target) : constrain(target);\r\n    const ascDiffsToSnaps = scrollSnaps.map((snap, index2) => ({\r\n      diff: shortcut(snap - distance, 0),\r\n      index: index2\r\n    })).sort((d1, d2) => mathAbs(d1.diff) - mathAbs(d2.diff));\r\n    const {\r\n      index\r\n    } = ascDiffsToSnaps[0];\r\n    return {\r\n      index,\r\n      distance\r\n    };\r\n  }\r\n  function shortcut(target, direction) {\r\n    const targets = [target, target + contentSize, target - contentSize];\r\n    if (!loop) return target;\r\n    if (!direction) return minDistance(targets);\r\n    const matchingTargets = targets.filter((t) => mathSign(t) === direction);\r\n    if (matchingTargets.length) return minDistance(matchingTargets);\r\n    return arrayLast(targets) - contentSize;\r\n  }\r\n  function byIndex(index, direction) {\r\n    const diffToSnap = scrollSnaps[index] - targetVector.get();\r\n    const distance = shortcut(diffToSnap, direction);\r\n    return {\r\n      index,\r\n      distance\r\n    };\r\n  }\r\n  function byDistance(distance, snap) {\r\n    const target = targetVector.get() + distance;\r\n    const {\r\n      index,\r\n      distance: targetSnapDistance\r\n    } = findTargetSnap(target);\r\n    const reachedBound = !loop && reachedAny(target);\r\n    if (!snap || reachedBound) return {\r\n      index,\r\n      distance\r\n    };\r\n    const diffToSnap = scrollSnaps[index] - targetSnapDistance;\r\n    const snapDistance = distance + shortcut(diffToSnap, 0);\r\n    return {\r\n      index,\r\n      distance: snapDistance\r\n    };\r\n  }\r\n  const self = {\r\n    byDistance,\r\n    byIndex,\r\n    shortcut\r\n  };\r\n  return self;\r\n}\r\nfunction ScrollTo(animation, indexCurrent, indexPrevious, scrollBody, scrollTarget, targetVector, eventHandler) {\r\n  function scrollTo(target) {\r\n    const distanceDiff = target.distance;\r\n    const indexDiff = target.index !== indexCurrent.get();\r\n    targetVector.add(distanceDiff);\r\n    if (distanceDiff) {\r\n      if (scrollBody.duration()) {\r\n        animation.start();\r\n      } else {\r\n        animation.update();\r\n        animation.render(1);\r\n        animation.update();\r\n      }\r\n    }\r\n    if (indexDiff) {\r\n      indexPrevious.set(indexCurrent.get());\r\n      indexCurrent.set(target.index);\r\n      eventHandler.emit(\"select\");\r\n    }\r\n  }\r\n  function distance(n, snap) {\r\n    const target = scrollTarget.byDistance(n, snap);\r\n    scrollTo(target);\r\n  }\r\n  function index(n, direction) {\r\n    const targetIndex = indexCurrent.clone().set(n);\r\n    const target = scrollTarget.byIndex(targetIndex.get(), direction);\r\n    scrollTo(target);\r\n  }\r\n  const self = {\r\n    distance,\r\n    index\r\n  };\r\n  return self;\r\n}\r\nfunction SlideFocus(root, slides, slideRegistry, scrollTo, scrollBody, eventStore, eventHandler, watchFocus) {\r\n  const focusListenerOptions = {\r\n    passive: true,\r\n    capture: true\r\n  };\r\n  let lastTabPressTime = 0;\r\n  function init(emblaApi) {\r\n    if (!watchFocus) return;\r\n    function defaultCallback(index) {\r\n      const nowTime = (/* @__PURE__ */ new Date()).getTime();\r\n      const diffTime = nowTime - lastTabPressTime;\r\n      if (diffTime > 10) return;\r\n      eventHandler.emit(\"slideFocusStart\");\r\n      root.scrollLeft = 0;\r\n      const group = slideRegistry.findIndex((group2) => group2.includes(index));\r\n      if (!isNumber(group)) return;\r\n      scrollBody.useDuration(0);\r\n      scrollTo.index(group, 0);\r\n      eventHandler.emit(\"slideFocus\");\r\n    }\r\n    eventStore.add(document, \"keydown\", registerTabPress, false);\r\n    slides.forEach((slide, slideIndex) => {\r\n      eventStore.add(slide, \"focus\", (evt) => {\r\n        if (isBoolean(watchFocus) || watchFocus(emblaApi, evt)) {\r\n          defaultCallback(slideIndex);\r\n        }\r\n      }, focusListenerOptions);\r\n    });\r\n  }\r\n  function registerTabPress(event) {\r\n    if (event.code === \"Tab\") lastTabPressTime = (/* @__PURE__ */ new Date()).getTime();\r\n  }\r\n  const self = {\r\n    init\r\n  };\r\n  return self;\r\n}\r\nfunction Vector1D(initialValue) {\r\n  let value = initialValue;\r\n  function get() {\r\n    return value;\r\n  }\r\n  function set(n) {\r\n    value = normalizeInput(n);\r\n  }\r\n  function add(n) {\r\n    value += normalizeInput(n);\r\n  }\r\n  function subtract(n) {\r\n    value -= normalizeInput(n);\r\n  }\r\n  function normalizeInput(n) {\r\n    return isNumber(n) ? n : n.get();\r\n  }\r\n  const self = {\r\n    get,\r\n    set,\r\n    add,\r\n    subtract\r\n  };\r\n  return self;\r\n}\r\nfunction Translate(axis, container) {\r\n  const translate = axis.scroll === \"x\" ? x : y;\r\n  const containerStyle = container.style;\r\n  let previousTarget = null;\r\n  let disabled = false;\r\n  function x(n) {\r\n    return `translate3d(${n}px,0px,0px)`;\r\n  }\r\n  function y(n) {\r\n    return `translate3d(0px,${n}px,0px)`;\r\n  }\r\n  function to(target) {\r\n    if (disabled) return;\r\n    const newTarget = roundToTwoDecimals(axis.direction(target));\r\n    if (newTarget === previousTarget) return;\r\n    containerStyle.transform = translate(newTarget);\r\n    previousTarget = newTarget;\r\n  }\r\n  function toggleActive(active) {\r\n    disabled = !active;\r\n  }\r\n  function clear() {\r\n    if (disabled) return;\r\n    containerStyle.transform = \"\";\r\n    if (!container.getAttribute(\"style\")) container.removeAttribute(\"style\");\r\n  }\r\n  const self = {\r\n    clear,\r\n    to,\r\n    toggleActive\r\n  };\r\n  return self;\r\n}\r\nfunction SlideLooper(axis, viewSize, contentSize, slideSizes, slideSizesWithGaps, snaps, scrollSnaps, location, slides) {\r\n  const roundingSafety = 0.5;\r\n  const ascItems = arrayKeys(slideSizesWithGaps);\r\n  const descItems = arrayKeys(slideSizesWithGaps).reverse();\r\n  const loopPoints = startPoints().concat(endPoints());\r\n  function removeSlideSizes(indexes, from) {\r\n    return indexes.reduce((a, i) => {\r\n      return a - slideSizesWithGaps[i];\r\n    }, from);\r\n  }\r\n  function slidesInGap(indexes, gap) {\r\n    return indexes.reduce((a, i) => {\r\n      const remainingGap = removeSlideSizes(a, gap);\r\n      return remainingGap > 0 ? a.concat([i]) : a;\r\n    }, []);\r\n  }\r\n  function findSlideBounds(offset) {\r\n    return snaps.map((snap, index) => ({\r\n      start: snap - slideSizes[index] + roundingSafety + offset,\r\n      end: snap + viewSize - roundingSafety + offset\r\n    }));\r\n  }\r\n  function findLoopPoints(indexes, offset, isEndEdge) {\r\n    const slideBounds = findSlideBounds(offset);\r\n    return indexes.map((index) => {\r\n      const initial = isEndEdge ? 0 : -contentSize;\r\n      const altered = isEndEdge ? contentSize : 0;\r\n      const boundEdge = isEndEdge ? \"end\" : \"start\";\r\n      const loopPoint = slideBounds[index][boundEdge];\r\n      return {\r\n        index,\r\n        loopPoint,\r\n        slideLocation: Vector1D(-1),\r\n        translate: Translate(axis, slides[index]),\r\n        target: () => location.get() > loopPoint ? initial : altered\r\n      };\r\n    });\r\n  }\r\n  function startPoints() {\r\n    const gap = scrollSnaps[0];\r\n    const indexes = slidesInGap(descItems, gap);\r\n    return findLoopPoints(indexes, contentSize, false);\r\n  }\r\n  function endPoints() {\r\n    const gap = viewSize - scrollSnaps[0] - 1;\r\n    const indexes = slidesInGap(ascItems, gap);\r\n    return findLoopPoints(indexes, -contentSize, true);\r\n  }\r\n  function canLoop() {\r\n    return loopPoints.every(({\r\n      index\r\n    }) => {\r\n      const otherIndexes = ascItems.filter((i) => i !== index);\r\n      return removeSlideSizes(otherIndexes, viewSize) <= 0.1;\r\n    });\r\n  }\r\n  function loop() {\r\n    loopPoints.forEach((loopPoint) => {\r\n      const {\r\n        target,\r\n        translate,\r\n        slideLocation\r\n      } = loopPoint;\r\n      const shiftLocation = target();\r\n      if (shiftLocation === slideLocation.get()) return;\r\n      translate.to(shiftLocation);\r\n      slideLocation.set(shiftLocation);\r\n    });\r\n  }\r\n  function clear() {\r\n    loopPoints.forEach((loopPoint) => loopPoint.translate.clear());\r\n  }\r\n  const self = {\r\n    canLoop,\r\n    clear,\r\n    loop,\r\n    loopPoints\r\n  };\r\n  return self;\r\n}\r\nfunction SlidesHandler(container, eventHandler, watchSlides) {\r\n  let mutationObserver;\r\n  let destroyed = false;\r\n  function init(emblaApi) {\r\n    if (!watchSlides) return;\r\n    function defaultCallback(mutations) {\r\n      for (const mutation of mutations) {\r\n        if (mutation.type === \"childList\") {\r\n          emblaApi.reInit();\r\n          eventHandler.emit(\"slidesChanged\");\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    mutationObserver = new MutationObserver((mutations) => {\r\n      if (destroyed) return;\r\n      if (isBoolean(watchSlides) || watchSlides(emblaApi, mutations)) {\r\n        defaultCallback(mutations);\r\n      }\r\n    });\r\n    mutationObserver.observe(container, {\r\n      childList: true\r\n    });\r\n  }\r\n  function destroy() {\r\n    if (mutationObserver) mutationObserver.disconnect();\r\n    destroyed = true;\r\n  }\r\n  const self = {\r\n    init,\r\n    destroy\r\n  };\r\n  return self;\r\n}\r\nfunction SlidesInView(container, slides, eventHandler, threshold) {\r\n  const intersectionEntryMap = {};\r\n  let inViewCache = null;\r\n  let notInViewCache = null;\r\n  let intersectionObserver;\r\n  let destroyed = false;\r\n  function init() {\r\n    intersectionObserver = new IntersectionObserver((entries) => {\r\n      if (destroyed) return;\r\n      entries.forEach((entry) => {\r\n        const index = slides.indexOf(entry.target);\r\n        intersectionEntryMap[index] = entry;\r\n      });\r\n      inViewCache = null;\r\n      notInViewCache = null;\r\n      eventHandler.emit(\"slidesInView\");\r\n    }, {\r\n      root: container.parentElement,\r\n      threshold\r\n    });\r\n    slides.forEach((slide) => intersectionObserver.observe(slide));\r\n  }\r\n  function destroy() {\r\n    if (intersectionObserver) intersectionObserver.disconnect();\r\n    destroyed = true;\r\n  }\r\n  function createInViewList(inView) {\r\n    return objectKeys(intersectionEntryMap).reduce((list, slideIndex) => {\r\n      const index = parseInt(slideIndex);\r\n      const {\r\n        isIntersecting\r\n      } = intersectionEntryMap[index];\r\n      const inViewMatch = inView && isIntersecting;\r\n      const notInViewMatch = !inView && !isIntersecting;\r\n      if (inViewMatch || notInViewMatch) list.push(index);\r\n      return list;\r\n    }, []);\r\n  }\r\n  function get(inView = true) {\r\n    if (inView && inViewCache) return inViewCache;\r\n    if (!inView && notInViewCache) return notInViewCache;\r\n    const slideIndexes = createInViewList(inView);\r\n    if (inView) inViewCache = slideIndexes;\r\n    if (!inView) notInViewCache = slideIndexes;\r\n    return slideIndexes;\r\n  }\r\n  const self = {\r\n    init,\r\n    destroy,\r\n    get\r\n  };\r\n  return self;\r\n}\r\nfunction SlideSizes(axis, containerRect, slideRects, slides, readEdgeGap, ownerWindow) {\r\n  const {\r\n    measureSize,\r\n    startEdge,\r\n    endEdge\r\n  } = axis;\r\n  const withEdgeGap = slideRects[0] && readEdgeGap;\r\n  const startGap = measureStartGap();\r\n  const endGap = measureEndGap();\r\n  const slideSizes = slideRects.map(measureSize);\r\n  const slideSizesWithGaps = measureWithGaps();\r\n  function measureStartGap() {\r\n    if (!withEdgeGap) return 0;\r\n    const slideRect = slideRects[0];\r\n    return mathAbs(containerRect[startEdge] - slideRect[startEdge]);\r\n  }\r\n  function measureEndGap() {\r\n    if (!withEdgeGap) return 0;\r\n    const style = ownerWindow.getComputedStyle(arrayLast(slides));\r\n    return parseFloat(style.getPropertyValue(`margin-${endEdge}`));\r\n  }\r\n  function measureWithGaps() {\r\n    return slideRects.map((rect, index, rects) => {\r\n      const isFirst = !index;\r\n      const isLast = arrayIsLastIndex(rects, index);\r\n      if (isFirst) return slideSizes[index] + startGap;\r\n      if (isLast) return slideSizes[index] + endGap;\r\n      return rects[index + 1][startEdge] - rect[startEdge];\r\n    }).map(mathAbs);\r\n  }\r\n  const self = {\r\n    slideSizes,\r\n    slideSizesWithGaps,\r\n    startGap,\r\n    endGap\r\n  };\r\n  return self;\r\n}\r\nfunction SlidesToScroll(axis, viewSize, slidesToScroll, loop, containerRect, slideRects, startGap, endGap, pixelTolerance) {\r\n  const {\r\n    startEdge,\r\n    endEdge,\r\n    direction\r\n  } = axis;\r\n  const groupByNumber = isNumber(slidesToScroll);\r\n  function byNumber(array, groupSize) {\r\n    return arrayKeys(array).filter((i) => i % groupSize === 0).map((i) => array.slice(i, i + groupSize));\r\n  }\r\n  function bySize(array) {\r\n    if (!array.length) return [];\r\n    return arrayKeys(array).reduce((groups, rectB, index) => {\r\n      const rectA = arrayLast(groups) || 0;\r\n      const isFirst = rectA === 0;\r\n      const isLast = rectB === arrayLastIndex(array);\r\n      const edgeA = containerRect[startEdge] - slideRects[rectA][startEdge];\r\n      const edgeB = containerRect[startEdge] - slideRects[rectB][endEdge];\r\n      const gapA = !loop && isFirst ? direction(startGap) : 0;\r\n      const gapB = !loop && isLast ? direction(endGap) : 0;\r\n      const chunkSize = mathAbs(edgeB - gapB - (edgeA + gapA));\r\n      if (index && chunkSize > viewSize + pixelTolerance) groups.push(rectB);\r\n      if (isLast) groups.push(array.length);\r\n      return groups;\r\n    }, []).map((currentSize, index, groups) => {\r\n      const previousSize = Math.max(groups[index - 1] || 0);\r\n      return array.slice(previousSize, currentSize);\r\n    });\r\n  }\r\n  function groupSlides(array) {\r\n    return groupByNumber ? byNumber(array, slidesToScroll) : bySize(array);\r\n  }\r\n  const self = {\r\n    groupSlides\r\n  };\r\n  return self;\r\n}\r\nfunction Engine(root, container, slides, ownerDocument, ownerWindow, options, eventHandler) {\r\n  const {\r\n    align,\r\n    axis: scrollAxis,\r\n    direction,\r\n    startIndex,\r\n    loop,\r\n    duration,\r\n    dragFree,\r\n    dragThreshold,\r\n    inViewThreshold,\r\n    slidesToScroll: groupSlides,\r\n    skipSnaps,\r\n    containScroll,\r\n    watchResize,\r\n    watchSlides,\r\n    watchDrag,\r\n    watchFocus\r\n  } = options;\r\n  const pixelTolerance = 2;\r\n  const nodeRects = NodeRects();\r\n  const containerRect = nodeRects.measure(container);\r\n  const slideRects = slides.map(nodeRects.measure);\r\n  const axis = Axis(scrollAxis, direction);\r\n  const viewSize = axis.measureSize(containerRect);\r\n  const percentOfView = PercentOfView(viewSize);\r\n  const alignment = Alignment(align, viewSize);\r\n  const containSnaps = !loop && !!containScroll;\r\n  const readEdgeGap = loop || !!containScroll;\r\n  const {\r\n    slideSizes,\r\n    slideSizesWithGaps,\r\n    startGap,\r\n    endGap\r\n  } = SlideSizes(axis, containerRect, slideRects, slides, readEdgeGap, ownerWindow);\r\n  const slidesToScroll = SlidesToScroll(axis, viewSize, groupSlides, loop, containerRect, slideRects, startGap, endGap, pixelTolerance);\r\n  const {\r\n    snaps,\r\n    snapsAligned\r\n  } = ScrollSnaps(axis, alignment, containerRect, slideRects, slidesToScroll);\r\n  const contentSize = -arrayLast(snaps) + arrayLast(slideSizesWithGaps);\r\n  const {\r\n    snapsContained,\r\n    scrollContainLimit\r\n  } = ScrollContain(viewSize, contentSize, snapsAligned, containScroll, pixelTolerance);\r\n  const scrollSnaps = containSnaps ? snapsContained : snapsAligned;\r\n  const {\r\n    limit\r\n  } = ScrollLimit(contentSize, scrollSnaps, loop);\r\n  const index = Counter(arrayLastIndex(scrollSnaps), startIndex, loop);\r\n  const indexPrevious = index.clone();\r\n  const slideIndexes = arrayKeys(slides);\r\n  const update = ({\r\n    dragHandler,\r\n    scrollBody: scrollBody2,\r\n    scrollBounds,\r\n    options: {\r\n      loop: loop2\r\n    }\r\n  }) => {\r\n    if (!loop2) scrollBounds.constrain(dragHandler.pointerDown());\r\n    scrollBody2.seek();\r\n  };\r\n  const render = ({\r\n    scrollBody: scrollBody2,\r\n    translate,\r\n    location: location2,\r\n    offsetLocation: offsetLocation2,\r\n    previousLocation: previousLocation2,\r\n    scrollLooper,\r\n    slideLooper,\r\n    dragHandler,\r\n    animation: animation2,\r\n    eventHandler: eventHandler2,\r\n    scrollBounds,\r\n    options: {\r\n      loop: loop2\r\n    }\r\n  }, alpha) => {\r\n    const shouldSettle = scrollBody2.settled();\r\n    const withinBounds = !scrollBounds.shouldConstrain();\r\n    const hasSettled = loop2 ? shouldSettle : shouldSettle && withinBounds;\r\n    const hasSettledAndIdle = hasSettled && !dragHandler.pointerDown();\r\n    if (hasSettledAndIdle) animation2.stop();\r\n    const interpolatedLocation = location2.get() * alpha + previousLocation2.get() * (1 - alpha);\r\n    offsetLocation2.set(interpolatedLocation);\r\n    if (loop2) {\r\n      scrollLooper.loop(scrollBody2.direction());\r\n      slideLooper.loop();\r\n    }\r\n    translate.to(offsetLocation2.get());\r\n    if (hasSettledAndIdle) eventHandler2.emit(\"settle\");\r\n    if (!hasSettled) eventHandler2.emit(\"scroll\");\r\n  };\r\n  const animation = Animations(ownerDocument, ownerWindow, () => update(engine), (alpha) => render(engine, alpha));\r\n  const friction = 0.68;\r\n  const startLocation = scrollSnaps[index.get()];\r\n  const location = Vector1D(startLocation);\r\n  const previousLocation = Vector1D(startLocation);\r\n  const offsetLocation = Vector1D(startLocation);\r\n  const target = Vector1D(startLocation);\r\n  const scrollBody = ScrollBody(location, offsetLocation, previousLocation, target, duration, friction);\r\n  const scrollTarget = ScrollTarget(loop, scrollSnaps, contentSize, limit, target);\r\n  const scrollTo = ScrollTo(animation, index, indexPrevious, scrollBody, scrollTarget, target, eventHandler);\r\n  const scrollProgress = ScrollProgress(limit);\r\n  const eventStore = EventStore();\r\n  const slidesInView = SlidesInView(container, slides, eventHandler, inViewThreshold);\r\n  const {\r\n    slideRegistry\r\n  } = SlideRegistry(containSnaps, containScroll, scrollSnaps, scrollContainLimit, slidesToScroll, slideIndexes);\r\n  const slideFocus = SlideFocus(root, slides, slideRegistry, scrollTo, scrollBody, eventStore, eventHandler, watchFocus);\r\n  const engine = {\r\n    ownerDocument,\r\n    ownerWindow,\r\n    eventHandler,\r\n    containerRect,\r\n    slideRects,\r\n    animation,\r\n    axis,\r\n    dragHandler: DragHandler(axis, root, ownerDocument, ownerWindow, target, DragTracker(axis, ownerWindow), location, animation, scrollTo, scrollBody, scrollTarget, index, eventHandler, percentOfView, dragFree, dragThreshold, skipSnaps, friction, watchDrag),\r\n    eventStore,\r\n    percentOfView,\r\n    index,\r\n    indexPrevious,\r\n    limit,\r\n    location,\r\n    offsetLocation,\r\n    previousLocation,\r\n    options,\r\n    resizeHandler: ResizeHandler(container, eventHandler, ownerWindow, slides, axis, watchResize, nodeRects),\r\n    scrollBody,\r\n    scrollBounds: ScrollBounds(limit, offsetLocation, target, scrollBody, percentOfView),\r\n    scrollLooper: ScrollLooper(contentSize, limit, offsetLocation, [location, offsetLocation, previousLocation, target]),\r\n    scrollProgress,\r\n    scrollSnapList: scrollSnaps.map(scrollProgress.get),\r\n    scrollSnaps,\r\n    scrollTarget,\r\n    scrollTo,\r\n    slideLooper: SlideLooper(axis, viewSize, contentSize, slideSizes, slideSizesWithGaps, snaps, scrollSnaps, offsetLocation, slides),\r\n    slideFocus,\r\n    slidesHandler: SlidesHandler(container, eventHandler, watchSlides),\r\n    slidesInView,\r\n    slideIndexes,\r\n    slideRegistry,\r\n    slidesToScroll,\r\n    target,\r\n    translate: Translate(axis, container)\r\n  };\r\n  return engine;\r\n}\r\nfunction EventHandler() {\r\n  let listeners = {};\r\n  let api;\r\n  function init(emblaApi) {\r\n    api = emblaApi;\r\n  }\r\n  function getListeners(evt) {\r\n    return listeners[evt] || [];\r\n  }\r\n  function emit(evt) {\r\n    getListeners(evt).forEach((e) => e(api, evt));\r\n    return self;\r\n  }\r\n  function on(evt, cb) {\r\n    listeners[evt] = getListeners(evt).concat([cb]);\r\n    return self;\r\n  }\r\n  function off(evt, cb) {\r\n    listeners[evt] = getListeners(evt).filter((e) => e !== cb);\r\n    return self;\r\n  }\r\n  function clear() {\r\n    listeners = {};\r\n  }\r\n  const self = {\r\n    init,\r\n    emit,\r\n    off,\r\n    on,\r\n    clear\r\n  };\r\n  return self;\r\n}\r\nconst defaultOptions = {\r\n  align: \"center\",\r\n  axis: \"x\",\r\n  container: null,\r\n  slides: null,\r\n  containScroll: \"trimSnaps\",\r\n  direction: \"ltr\",\r\n  slidesToScroll: 1,\r\n  inViewThreshold: 0,\r\n  breakpoints: {},\r\n  dragFree: false,\r\n  dragThreshold: 10,\r\n  loop: false,\r\n  skipSnaps: false,\r\n  duration: 25,\r\n  startIndex: 0,\r\n  active: true,\r\n  watchDrag: true,\r\n  watchResize: true,\r\n  watchSlides: true,\r\n  watchFocus: true\r\n};\r\nfunction OptionsHandler(ownerWindow) {\r\n  function mergeOptions(optionsA, optionsB) {\r\n    return objectsMergeDeep(optionsA, optionsB || {});\r\n  }\r\n  function optionsAtMedia(options) {\r\n    const optionsAtMedia2 = options.breakpoints || {};\r\n    const matchedMediaOptions = objectKeys(optionsAtMedia2).filter((media) => ownerWindow.matchMedia(media).matches).map((media) => optionsAtMedia2[media]).reduce((a, mediaOption) => mergeOptions(a, mediaOption), {});\r\n    return mergeOptions(options, matchedMediaOptions);\r\n  }\r\n  function optionsMediaQueries(optionsList) {\r\n    return optionsList.map((options) => objectKeys(options.breakpoints || {})).reduce((acc, mediaQueries) => acc.concat(mediaQueries), []).map(ownerWindow.matchMedia);\r\n  }\r\n  const self = {\r\n    mergeOptions,\r\n    optionsAtMedia,\r\n    optionsMediaQueries\r\n  };\r\n  return self;\r\n}\r\nfunction PluginsHandler(optionsHandler) {\r\n  let activePlugins = [];\r\n  function init(emblaApi, plugins) {\r\n    activePlugins = plugins.filter(({\r\n      options\r\n    }) => optionsHandler.optionsAtMedia(options).active !== false);\r\n    activePlugins.forEach((plugin) => plugin.init(emblaApi, optionsHandler));\r\n    return plugins.reduce((map, plugin) => Object.assign(map, {\r\n      [plugin.name]: plugin\r\n    }), {});\r\n  }\r\n  function destroy() {\r\n    activePlugins = activePlugins.filter((plugin) => plugin.destroy());\r\n  }\r\n  const self = {\r\n    init,\r\n    destroy\r\n  };\r\n  return self;\r\n}\r\nfunction EmblaCarousel(root, userOptions, userPlugins) {\r\n  const ownerDocument = root.ownerDocument;\r\n  const ownerWindow = ownerDocument.defaultView;\r\n  const optionsHandler = OptionsHandler(ownerWindow);\r\n  const pluginsHandler = PluginsHandler(optionsHandler);\r\n  const mediaHandlers = EventStore();\r\n  const eventHandler = EventHandler();\r\n  const {\r\n    mergeOptions,\r\n    optionsAtMedia,\r\n    optionsMediaQueries\r\n  } = optionsHandler;\r\n  const {\r\n    on,\r\n    off,\r\n    emit\r\n  } = eventHandler;\r\n  const reInit = reActivate;\r\n  let destroyed = false;\r\n  let engine;\r\n  let optionsBase = mergeOptions(defaultOptions, EmblaCarousel.globalOptions);\r\n  let options = mergeOptions(optionsBase);\r\n  let pluginList = [];\r\n  let pluginApis;\r\n  let container;\r\n  let slides;\r\n  function storeElements() {\r\n    const {\r\n      container: userContainer,\r\n      slides: userSlides\r\n    } = options;\r\n    const customContainer = isString(userContainer) ? root.querySelector(userContainer) : userContainer;\r\n    container = customContainer || root.children[0];\r\n    const customSlides = isString(userSlides) ? container.querySelectorAll(userSlides) : userSlides;\r\n    slides = [].slice.call(customSlides || container.children);\r\n  }\r\n  function createEngine(options2) {\r\n    const engine2 = Engine(root, container, slides, ownerDocument, ownerWindow, options2, eventHandler);\r\n    if (options2.loop && !engine2.slideLooper.canLoop()) {\r\n      const optionsWithoutLoop = Object.assign({}, options2, {\r\n        loop: false\r\n      });\r\n      return createEngine(optionsWithoutLoop);\r\n    }\r\n    return engine2;\r\n  }\r\n  function activate(withOptions, withPlugins) {\r\n    if (destroyed) return;\r\n    optionsBase = mergeOptions(optionsBase, withOptions);\r\n    options = optionsAtMedia(optionsBase);\r\n    pluginList = withPlugins || pluginList;\r\n    storeElements();\r\n    engine = createEngine(options);\r\n    optionsMediaQueries([optionsBase, ...pluginList.map(({\r\n      options: options2\r\n    }) => options2)]).forEach((query) => mediaHandlers.add(query, \"change\", reActivate));\r\n    if (!options.active) return;\r\n    engine.translate.to(engine.location.get());\r\n    engine.animation.init();\r\n    engine.slidesInView.init();\r\n    engine.slideFocus.init(self);\r\n    engine.eventHandler.init(self);\r\n    engine.resizeHandler.init(self);\r\n    engine.slidesHandler.init(self);\r\n    if (engine.options.loop) engine.slideLooper.loop();\r\n    if (container.offsetParent && slides.length) engine.dragHandler.init(self);\r\n    pluginApis = pluginsHandler.init(self, pluginList);\r\n  }\r\n  function reActivate(withOptions, withPlugins) {\r\n    const startIndex = selectedScrollSnap();\r\n    deActivate();\r\n    activate(mergeOptions({\r\n      startIndex\r\n    }, withOptions), withPlugins);\r\n    eventHandler.emit(\"reInit\");\r\n  }\r\n  function deActivate() {\r\n    engine.dragHandler.destroy();\r\n    engine.eventStore.clear();\r\n    engine.translate.clear();\r\n    engine.slideLooper.clear();\r\n    engine.resizeHandler.destroy();\r\n    engine.slidesHandler.destroy();\r\n    engine.slidesInView.destroy();\r\n    engine.animation.destroy();\r\n    pluginsHandler.destroy();\r\n    mediaHandlers.clear();\r\n  }\r\n  function destroy() {\r\n    if (destroyed) return;\r\n    destroyed = true;\r\n    mediaHandlers.clear();\r\n    deActivate();\r\n    eventHandler.emit(\"destroy\");\r\n    eventHandler.clear();\r\n  }\r\n  function scrollTo(index, jump, direction) {\r\n    if (!options.active || destroyed) return;\r\n    engine.scrollBody.useBaseFriction().useDuration(jump === true ? 0 : options.duration);\r\n    engine.scrollTo.index(index, direction || 0);\r\n  }\r\n  function scrollNext(jump) {\r\n    const next = engine.index.add(1).get();\r\n    scrollTo(next, jump, -1);\r\n  }\r\n  function scrollPrev(jump) {\r\n    const prev = engine.index.add(-1).get();\r\n    scrollTo(prev, jump, 1);\r\n  }\r\n  function canScrollNext() {\r\n    const next = engine.index.add(1).get();\r\n    return next !== selectedScrollSnap();\r\n  }\r\n  function canScrollPrev() {\r\n    const prev = engine.index.add(-1).get();\r\n    return prev !== selectedScrollSnap();\r\n  }\r\n  function scrollSnapList() {\r\n    return engine.scrollSnapList;\r\n  }\r\n  function scrollProgress() {\r\n    return engine.scrollProgress.get(engine.offsetLocation.get());\r\n  }\r\n  function selectedScrollSnap() {\r\n    return engine.index.get();\r\n  }\r\n  function previousScrollSnap() {\r\n    return engine.indexPrevious.get();\r\n  }\r\n  function slidesInView() {\r\n    return engine.slidesInView.get();\r\n  }\r\n  function slidesNotInView() {\r\n    return engine.slidesInView.get(false);\r\n  }\r\n  function plugins() {\r\n    return pluginApis;\r\n  }\r\n  function internalEngine() {\r\n    return engine;\r\n  }\r\n  function rootNode() {\r\n    return root;\r\n  }\r\n  function containerNode() {\r\n    return container;\r\n  }\r\n  function slideNodes() {\r\n    return slides;\r\n  }\r\n  const self = {\r\n    canScrollNext,\r\n    canScrollPrev,\r\n    containerNode,\r\n    internalEngine,\r\n    destroy,\r\n    off,\r\n    on,\r\n    emit,\r\n    plugins,\r\n    previousScrollSnap,\r\n    reInit,\r\n    rootNode,\r\n    scrollNext,\r\n    scrollPrev,\r\n    scrollProgress,\r\n    scrollSnapList,\r\n    scrollTo,\r\n    selectedScrollSnap,\r\n    slideNodes,\r\n    slidesInView,\r\n    slidesNotInView\r\n  };\r\n  activate(userOptions, userPlugins);\r\n  setTimeout(() => eventHandler.emit(\"init\"), 0);\r\n  return self;\r\n}\r\nEmblaCarousel.globalOptions = void 0;\r\nfunction useEmblaCarousel(options = {}, plugins = []) {\r\n  const storedOptions = reactExports.useRef(options);\r\n  const storedPlugins = reactExports.useRef(plugins);\r\n  const [emblaApi, setEmblaApi] = reactExports.useState();\r\n  const [viewport, setViewport] = reactExports.useState();\r\n  const reInit = reactExports.useCallback(() => {\r\n    if (emblaApi) emblaApi.reInit(storedOptions.current, storedPlugins.current);\r\n  }, [emblaApi]);\r\n  reactExports.useEffect(() => {\r\n    if (areOptionsEqual(storedOptions.current, options)) return;\r\n    storedOptions.current = options;\r\n    reInit();\r\n  }, [options, reInit]);\r\n  reactExports.useEffect(() => {\r\n    if (arePluginsEqual(storedPlugins.current, plugins)) return;\r\n    storedPlugins.current = plugins;\r\n    reInit();\r\n  }, [plugins, reInit]);\r\n  reactExports.useEffect(() => {\r\n    if (canUseDOM() && viewport) {\r\n      EmblaCarousel.globalOptions = useEmblaCarousel.globalOptions;\r\n      const newEmblaApi = EmblaCarousel(viewport, storedOptions.current, storedPlugins.current);\r\n      setEmblaApi(newEmblaApi);\r\n      return () => newEmblaApi.destroy();\r\n    } else {\r\n      setEmblaApi(void 0);\r\n    }\r\n  }, [viewport, setEmblaApi]);\r\n  return [setViewport, emblaApi];\r\n}\r\nuseEmblaCarousel.globalOptions = void 0;\r\nconst PlaceholderSVG = ({ width = 800, height = 450, text = \"UX Design Mockup\" }) => /* @__PURE__ */ jsxRuntimeExports.jsxs(\"svg\", { width, height, viewBox: `0 0 ${width} ${height}`, xmlns: \"http://www.w3.org/2000/svg\", children: [\r\n  /* @__PURE__ */ jsxRuntimeExports.jsx(\"rect\", { width, height, rx: \"32\", className: \"fill-slate-100 dark:fill-slate-800\" }),\r\n  /* @__PURE__ */ jsxRuntimeExports.jsx(\"rect\", { x: \"40\", y: \"40\", width: width - 80, height: \"60\", rx: \"8\", className: \"fill-brand-primary dark:fill-brand-primary/70\" }),\r\n  /* @__PURE__ */ jsxRuntimeExports.jsx(\"rect\", { x: \"60\", y: \"55\", width: \"120\", height: \"12\", rx: \"6\", className: \"fill-white dark:fill-slate-300\", opacity: \"0.9\" }),\r\n  /* @__PURE__ */ jsxRuntimeExports.jsx(\"rect\", { x: width - 160, y: \"55\", width: \"80\", height: \"12\", rx: \"6\", className: \"fill-white dark:fill-slate-300\", opacity: \"0.7\" }),\r\n  /* @__PURE__ */ jsxRuntimeExports.jsx(\"rect\", { x: \"40\", y: \"120\", width: (width - 80) * 0.7, height: \"20\", rx: \"4\", className: \"fill-slate-400 dark:fill-slate-500\" }),\r\n  /* @__PURE__ */ jsxRuntimeExports.jsx(\"rect\", { x: \"40\", y: \"150\", width: (width - 80) * 0.5, height: \"20\", rx: \"4\", className: \"fill-slate-300 dark:fill-slate-600\" }),\r\n  /* @__PURE__ */ jsxRuntimeExports.jsx(\"rect\", { x: \"40\", y: \"200\", width: width - 80, height: \"200\", rx: \"12\", className: \"fill-white dark:fill-slate-700 stroke-slate-200 dark:stroke-slate-600\", strokeWidth: \"2\" }),\r\n  /* @__PURE__ */ jsxRuntimeExports.jsx(\"circle\", { cx: width / 2 - 60, cy: 280, r: \"25\", className: \"fill-brand-secondary dark:fill-brand-secondary/70\", opacity: \"0.8\" }),\r\n  /* @__PURE__ */ jsxRuntimeExports.jsx(\"circle\", { cx: width / 2 + 60, cy: 280, r: \"25\", className: \"fill-brand-primary dark:fill-brand-primary/70\", opacity: \"0.6\" }),\r\n  /* @__PURE__ */ jsxRuntimeExports.jsx(\"rect\", { x: width / 2 - 40, y: \"320\", width: \"80\", height: \"8\", rx: \"4\", className: \"fill-slate-400 dark:fill-slate-500\" }),\r\n  /* @__PURE__ */ jsxRuntimeExports.jsx(\"rect\", { x: width / 2 - 60, y: \"340\", width: \"120\", height: \"6\", rx: \"3\", className: \"fill-slate-300 dark:fill-slate-600\" }),\r\n  /* @__PURE__ */ jsxRuntimeExports.jsx(\"rect\", { x: \"40\", y: height - 60, width: width - 80, height: \"40\", rx: \"8\", className: \"fill-white dark:fill-slate-700 stroke-slate-200 dark:stroke-slate-600\", strokeWidth: \"1\" }),\r\n  /* @__PURE__ */ jsxRuntimeExports.jsx(\"text\", { x: \"50%\", y: \"50%\", textAnchor: \"middle\", dy: \".3em\", fontSize: \"24\", fontWeight: \"600\", className: \"fill-brand-secondary dark:fill-brand-secondary/70\", children: text }),\r\n  /* @__PURE__ */ jsxRuntimeExports.jsx(\"path\", { d: `M${width - 100} 30 L${width - 80} 30 L${width - 90} 20 Z`, className: \"fill-brand-primary/50 dark:fill-brand-primary/30\", opacity: \"0.5\" }),\r\n  /* @__PURE__ */ jsxRuntimeExports.jsx(\"path\", { d: `M${width - 70} 30 L${width - 50} 30 L${width - 60} 20 Z`, className: \"fill-brand-secondary/50 dark:fill-brand-secondary/30\", opacity: \"0.5\" })\r\n] });\r\nconst BigImageCarousel = ({ images, options }) => {\r\n  const [emblaRef, emblaApi] = useEmblaCarousel({\r\n    loop: images.length > 1,\r\n    align: \"center\",\r\n    containScroll: \"trimSnaps\",\r\n    ...options\r\n  });\r\n  const [selectedIndex, setSelectedIndex] = reactExports.useState(0);\r\n  const [isFullscreen, setIsFullscreen] = reactExports.useState(false);\r\n  const [canScrollPrev, setCanScrollPrev] = reactExports.useState(false);\r\n  const [canScrollNext, setCanScrollNext] = reactExports.useState(false);\r\n  const scrollPrev = reactExports.useCallback(() => emblaApi && emblaApi.scrollPrev(), [emblaApi]);\r\n  const scrollNext = reactExports.useCallback(() => emblaApi && emblaApi.scrollNext(), [emblaApi]);\r\n  const onSelect = reactExports.useCallback(() => {\r\n    if (!emblaApi) return;\r\n    setSelectedIndex(emblaApi.selectedScrollSnap());\r\n    setCanScrollPrev(emblaApi.canScrollPrev());\r\n    setCanScrollNext(emblaApi.canScrollNext());\r\n  }, [emblaApi]);\r\n  reactExports.useEffect(() => {\r\n    if (!emblaApi) return;\r\n    onSelect();\r\n    emblaApi.on(\"select\", onSelect);\r\n    emblaApi.on(\"reInit\", onSelect);\r\n    return () => {\r\n    };\r\n  }, [emblaApi, onSelect]);\r\n  const handleImageClick = () => {\r\n    setIsFullscreen(true);\r\n    document.body.style.overflow = \"hidden\";\r\n  };\r\n  const handleCloseFullscreen = () => {\r\n    setIsFullscreen(false);\r\n    document.body.style.overflow = \"unset\";\r\n  };\r\n  reactExports.useEffect(() => {\r\n    const handleEscape = (e) => {\r\n      if (e.key === \"Escape\" && isFullscreen) {\r\n        handleCloseFullscreen();\r\n      }\r\n    };\r\n    if (isFullscreen) {\r\n      document.addEventListener(\"keydown\", handleEscape);\r\n      return () => {\r\n        document.removeEventListener(\"keydown\", handleEscape);\r\n        document.body.style.overflow = \"unset\";\r\n      };\r\n    }\r\n  }, [isFullscreen]);\r\n  return /* @__PURE__ */ jsxRuntimeExports.jsxs(\"div\", { className: \"relative w-full\", children: [\r\n    /* @__PURE__ */ jsxRuntimeExports.jsx(\"div\", { className: \"overflow-hidden rounded-xl\", ref: emblaRef, children: /* @__PURE__ */ jsxRuntimeExports.jsx(\"div\", { className: \"flex\", children: images.map((img, idx) => /* @__PURE__ */ jsxRuntimeExports.jsxs(\"div\", { className: \"min-w-0 flex-[0_0_100%] flex justify-center items-center relative\", children: [\r\n      /* @__PURE__ */ jsxRuntimeExports.jsx(\"div\", { className: \"w-full cursor-pointer\", onClick: handleImageClick, children: img.svgPlaceholder ? /* @__PURE__ */ jsxRuntimeExports.jsx(PlaceholderSVG, {}) : /* @__PURE__ */ jsxRuntimeExports.jsx(\"img\", { src: img.src, alt: img.alt || `Image ${idx + 1}`, className: \"w-full h-auto object-contain aspect-video rounded-xl shadow-md\", loading: \"lazy\" }) }),\r\n      /* @__PURE__ */ jsxRuntimeExports.jsx(\r\n        \"button\",\r\n        {\r\n          className: \"absolute top-2 right-2 bg-white/80 dark:bg-slate-700/80 hover:bg-white dark:hover:bg-slate-600 rounded-full p-1.5 shadow-md hover:shadow-lg transition-all z-10\",\r\n          onClick: (e) => {\r\n            e.stopPropagation();\r\n            handleImageClick();\r\n          },\r\n          \"aria-label\": \"Full screen view\",\r\n          children: /* @__PURE__ */ jsxRuntimeExports.jsx(Maximize2, { className: \"w-4 h-4 text-brand-primary\" })\r\n        }\r\n      )\r\n    ] }, idx)) }) }),\r\n    images.length > 1 && /* @__PURE__ */ jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, { children: [\r\n      /* @__PURE__ */ jsxRuntimeExports.jsx(\r\n        \"button\",\r\n        {\r\n          onClick: scrollPrev,\r\n          disabled: !canScrollPrev,\r\n          className: \"absolute left-2 top-1/2 transform -translate-y-1/2 bg-white/80 dark:bg-slate-700/80 hover:bg-white dark:hover:bg-slate-600 text-brand-primary p-2 rounded-full shadow-md hover:shadow-lg transition-all z-10 disabled:opacity-50 disabled:cursor-not-allowed\",\r\n          \"aria-label\": \"Previous image\",\r\n          children: /* @__PURE__ */ jsxRuntimeExports.jsx(ChevronLeft, { className: \"w-5 h-5\" })\r\n        }\r\n      ),\r\n      /* @__PURE__ */ jsxRuntimeExports.jsx(\r\n        \"button\",\r\n        {\r\n          onClick: scrollNext,\r\n          disabled: !canScrollNext,\r\n          className: \"absolute right-2 top-1/2 transform -translate-y-1/2 bg-white/80 dark:bg-slate-700/80 hover:bg-white dark:hover:bg-slate-600 text-brand-primary p-2 rounded-full shadow-md hover:shadow-lg transition-all z-10 disabled:opacity-50 disabled:cursor-not-allowed\",\r\n          \"aria-label\": \"Next image\",\r\n          children: /* @__PURE__ */ jsxRuntimeExports.jsx(ChevronRight, { className: \"w-5 h-5\" })\r\n        }\r\n      )\r\n    ] }),\r\n    images.length > 1 && /* @__PURE__ */ jsxRuntimeExports.jsx(\"div\", { className: \"absolute bottom-4 left-1/2 transform -translate-x-1/2 flex space-x-2 bg-black/20 backdrop-blur-sm rounded-full px-3 py-2\", children: images.map((_, index) => /* @__PURE__ */ jsxRuntimeExports.jsx(\r\n      \"button\",\r\n      {\r\n        onClick: () => emblaApi && emblaApi.scrollTo(index),\r\n        className: `w-2 h-2 rounded-full transition-all duration-300 ${index === selectedIndex ? \"bg-white scale-125\" : \"bg-white/50 hover:bg-white/75\"}`,\r\n        \"aria-label\": `Go to image ${index + 1}`,\r\n        \"aria-current\": index === selectedIndex ? \"true\" : \"false\"\r\n      },\r\n      index\r\n    )) }),\r\n    isFullscreen && reactDomExports.createPortal(\r\n      /* @__PURE__ */ jsxRuntimeExports.jsxs(\r\n        \"div\",\r\n        {\r\n          className: \"fixed inset-0 bg-black/95 flex items-center justify-center p-4 backdrop-blur-sm z-[10000]\",\r\n          style: { position: \"fixed\", top: 0, left: 0, width: \"100vw\", height: \"100vh\" },\r\n          onClick: handleCloseFullscreen,\r\n          children: [\r\n            /* @__PURE__ */ jsxRuntimeExports.jsx(\r\n              \"button\",\r\n              {\r\n                className: \"absolute top-4 right-4 z-[10001] text-white hover:text-gray-300 transition-colors bg-black/50 rounded-full p-3 backdrop-blur-sm\",\r\n                onClick: handleCloseFullscreen,\r\n                \"aria-label\": \"Close full screen (Press Escape)\",\r\n                children: /* @__PURE__ */ jsxRuntimeExports.jsx(X, { className: \"w-6 h-6\" })\r\n              }\r\n            ),\r\n            images.length > 1 && /* @__PURE__ */ jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, { children: [\r\n              /* @__PURE__ */ jsxRuntimeExports.jsx(\r\n                \"button\",\r\n                {\r\n                  onClick: (e) => {\r\n                    e.stopPropagation();\r\n                    scrollPrev();\r\n                  },\r\n                  className: \"absolute left-4 top-1/2 transform -translate-y-1/2 bg-black/50 hover:bg-black/70 text-white p-3 rounded-full transition-colors backdrop-blur-sm z-[10001]\",\r\n                  \"aria-label\": \"Previous image\",\r\n                  children: /* @__PURE__ */ jsxRuntimeExports.jsx(ChevronLeft, { className: \"w-6 h-6\" })\r\n                }\r\n              ),\r\n              /* @__PURE__ */ jsxRuntimeExports.jsx(\r\n                \"button\",\r\n                {\r\n                  onClick: (e) => {\r\n                    e.stopPropagation();\r\n                    scrollNext();\r\n                  },\r\n                  className: \"absolute right-4 top-1/2 transform -translate-y-1/2 bg-black/50 hover:bg-black/70 text-white p-3 rounded-full transition-colors backdrop-blur-sm z-[10001]\",\r\n                  \"aria-label\": \"Next image\",\r\n                  children: /* @__PURE__ */ jsxRuntimeExports.jsx(ChevronRight, { className: \"w-6 h-6\" })\r\n                }\r\n              )\r\n            ] }),\r\n            /* @__PURE__ */ jsxRuntimeExports.jsx(\"div\", { className: \"relative max-w-[95vw] max-h-[95vh] flex items-center justify-center\", children: images[selectedIndex].svgPlaceholder ? /* @__PURE__ */ jsxRuntimeExports.jsx(PlaceholderSVG, { width: 1200, height: 700, text: \"Full Page Design Mockup\" }) : /* @__PURE__ */ jsxRuntimeExports.jsx(\r\n              \"img\",\r\n              {\r\n                src: images[selectedIndex].src,\r\n                alt: images[selectedIndex].alt || `Image ${selectedIndex + 1}`,\r\n                className: \"max-w-full max-h-full object-contain shadow-2xl\",\r\n                onClick: (e) => e.stopPropagation(),\r\n                style: { maxWidth: \"95vw\", maxHeight: \"95vh\" }\r\n              }\r\n            ) }),\r\n            /* @__PURE__ */ jsxRuntimeExports.jsxs(\"div\", { className: \"absolute bottom-4 left-1/2 transform -translate-x-1/2 text-white text-sm bg-black/50 px-4 py-2 rounded-full backdrop-blur-sm flex items-center space-x-4\", children: [\r\n              images.length > 1 && /* @__PURE__ */ jsxRuntimeExports.jsxs(\"span\", { children: [\r\n                selectedIndex + 1,\r\n                \" / \",\r\n                images.length\r\n              ] }),\r\n              /* @__PURE__ */ jsxRuntimeExports.jsx(\"span\", { children: \"Click outside or press Escape to close\" })\r\n            ] })\r\n          ]\r\n        }\r\n      ),\r\n      document.body\r\n    )\r\n  ] });\r\n};\r\nexport {\r\n  ArrowLeft as A,\r\n  BigImageCarousel as B,\r\n  ChevronLeft as C,\r\n  Maximize2 as M,\r\n  useEmblaCarousel as u\r\n};\r\n//# sourceMappingURL=BigImageCarousel-H-rAuVYl.js.map\r\n"],"names":[],"mappings":"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"}