{"version":3,"file":"ZoomableImage-CB4rZeAn.js","sources":["../../node_modules/motion/dist/es/framer-motion/dist/es/context/LayoutGroupContext.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/utils/use-constant.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/utils/is-browser.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/context/PresenceContext.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/context/MotionConfigContext.mjs","../../node_modules/motion/dist/es/motion-utils/dist/es/is-object.mjs","../../node_modules/motion/dist/es/motion-dom/dist/es/utils/is-html-element.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/components/AnimatePresence/utils.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/components/AnimatePresence/index.mjs","../../node_modules/motion/dist/es/motion-dom/dist/es/frameloop/order.mjs","../../node_modules/motion/dist/es/motion-dom/dist/es/stats/buffer.mjs","../../node_modules/motion/dist/es/motion-dom/dist/es/frameloop/render-step.mjs","../../node_modules/motion/dist/es/motion-utils/dist/es/global-config.mjs","../../node_modules/motion/dist/es/motion-dom/dist/es/frameloop/batcher.mjs","../../node_modules/motion/dist/es/motion-utils/dist/es/noop.mjs","../../node_modules/motion/dist/es/motion-dom/dist/es/frameloop/frame.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/context/LazyContext.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/motion/features/definitions.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/motion/features/load-features.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/motion/utils/valid-prop.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/render/components/create-proxy.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/context/MotionContext/index.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/render/utils/is-variant-label.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/render/utils/variant-props.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/context/MotionContext/utils.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/context/MotionContext/create.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/motion/utils/symbol.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/utils/is-ref-object.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../../node_modules/motion/dist/es/motion-dom/dist/es/frameloop/microtask.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../../node_modules/motion/dist/es/motion-utils/dist/es/errors.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/motion/index.mjs","../../node_modules/motion/dist/es/motion-dom/dist/es/animation/utils/is-css-variable.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/projection/styles/scale-correction.mjs","../../node_modules/motion/dist/es/motion-dom/dist/es/render/utils/keys-transform.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../../node_modules/motion/dist/es/motion-dom/dist/es/value/types/utils/get-as-type.mjs","../../node_modules/motion/dist/es/motion-utils/dist/es/clamp.mjs","../../node_modules/motion/dist/es/motion-dom/dist/es/value/types/numbers/index.mjs","../../node_modules/motion/dist/es/motion-dom/dist/es/value/types/int.mjs","../../node_modules/motion/dist/es/motion-dom/dist/es/value/types/numbers/units.mjs","../../node_modules/motion/dist/es/motion-dom/dist/es/value/types/maps/transform.mjs","../../node_modules/motion/dist/es/motion-dom/dist/es/value/types/maps/number.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/render/html/utils/build-transform.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/render/html/utils/build-styles.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../../node_modules/motion/dist/es/motion-dom/dist/es/value/utils/is-motion-value.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/render/html/use-props.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/render/svg/utils/path.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/render/svg/use-props.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/render/dom/use-render.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/render/utils/resolve-variants.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/render/html/config-motion.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/render/svg/config-motion.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/render/components/create-factory.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../../node_modules/motion/dist/es/motion-dom/dist/es/frameloop/sync-time.mjs","../../node_modules/motion/dist/es/motion-utils/dist/es/array.mjs","../../node_modules/motion/dist/es/motion-utils/dist/es/subscription-manager.mjs","../../node_modules/motion/dist/es/motion-utils/dist/es/velocity-per-second.mjs","../../node_modules/motion/dist/es/motion-dom/dist/es/value/index.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/render/utils/setters.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/value/use-will-change/is.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/animation/utils/default-transitions.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","../../node_modules/motion/dist/es/motion-dom/dist/es/animation/utils/get-value-transition.mjs","../../node_modules/motion/dist/es/motion-utils/dist/es/time-conversion.mjs","../../node_modules/motion/dist/es/motion-dom/dist/es/value/types/utils/sanitize.mjs","../../node_modules/motion/dist/es/motion-dom/dist/es/value/types/utils/float-regex.mjs","../../node_modules/motion/dist/es/motion-dom/dist/es/value/types/utils/is-nullish.mjs","../../node_modules/motion/dist/es/motion-dom/dist/es/value/types/utils/single-color-regex.mjs","../../node_modules/motion/dist/es/motion-dom/dist/es/value/types/color/utils.mjs","../../node_modules/motion/dist/es/motion-dom/dist/es/value/types/color/rgba.mjs","../../node_modules/motion/dist/es/motion-dom/dist/es/value/types/color/hex.mjs","../../node_modules/motion/dist/es/motion-dom/dist/es/value/types/color/hsla.mjs","../../node_modules/motion/dist/es/motion-dom/dist/es/value/types/color/index.mjs","../../node_modules/motion/dist/es/motion-dom/dist/es/value/types/utils/color-regex.mjs","../../node_modules/motion/dist/es/motion-dom/dist/es/value/types/complex/index.mjs","../../node_modules/motion/dist/es/motion-dom/dist/es/value/types/color/hsla-to-rgba.mjs","../../node_modules/motion/dist/es/motion-dom/dist/es/utils/mix/immediate.mjs","../../node_modules/motion/dist/es/motion-dom/dist/es/utils/mix/number.mjs","../../node_modules/motion/dist/es/motion-dom/dist/es/utils/mix/color.mjs","../../node_modules/motion/dist/es/motion-dom/dist/es/utils/mix/visibility.mjs","../../node_modules/motion/dist/es/motion-utils/dist/es/pipe.mjs","../../node_modules/motion/dist/es/motion-dom/dist/es/utils/mix/complex.mjs","../../node_modules/motion/dist/es/motion-dom/dist/es/utils/mix/index.mjs","../../node_modules/motion/dist/es/motion-dom/dist/es/animation/drivers/frame.mjs","../../node_modules/motion/dist/es/motion-dom/dist/es/animation/waapi/utils/linear.mjs","../../node_modules/motion/dist/es/motion-dom/dist/es/animation/generators/utils/calc-duration.mjs","../../node_modules/motion/dist/es/motion-dom/dist/es/animation/generators/utils/create-generator-easing.mjs","../../node_modules/motion/dist/es/motion-dom/dist/es/animation/generators/utils/velocity.mjs","../../node_modules/motion/dist/es/motion-dom/dist/es/animation/generators/spring/defaults.mjs","../../node_modules/motion/dist/es/motion-dom/dist/es/animation/generators/spring/find.mjs","../../node_modules/motion/dist/es/motion-dom/dist/es/animation/generators/spring/index.mjs","../../node_modules/motion/dist/es/motion-dom/dist/es/animation/generators/inertia.mjs","../../node_modules/motion/dist/es/motion-utils/dist/es/progress.mjs","../../node_modules/motion/dist/es/motion-dom/dist/es/utils/interpolate.mjs","../../node_modules/motion/dist/es/motion-dom/dist/es/animation/keyframes/offsets/fill.mjs","../../node_modules/motion/dist/es/motion-dom/dist/es/animation/keyframes/offsets/default.mjs","../../node_modules/motion/dist/es/motion-dom/dist/es/animation/keyframes/offsets/time.mjs","../../node_modules/motion/dist/es/motion-utils/dist/es/easing/cubic-bezier.mjs","../../node_modules/motion/dist/es/motion-utils/dist/es/easing/ease.mjs","../../node_modules/motion/dist/es/motion-utils/dist/es/easing/utils/is-easing-array.mjs","../../node_modules/motion/dist/es/motion-utils/dist/es/easing/modifiers/mirror.mjs","../../node_modules/motion/dist/es/motion-utils/dist/es/easing/modifiers/reverse.mjs","../../node_modules/motion/dist/es/motion-utils/dist/es/easing/back.mjs","../../node_modules/motion/dist/es/motion-utils/dist/es/easing/anticipate.mjs","../../node_modules/motion/dist/es/motion-utils/dist/es/easing/circ.mjs","../../node_modules/motion/dist/es/motion-utils/dist/es/easing/utils/is-bezier-definition.mjs","../../node_modules/motion/dist/es/motion-utils/dist/es/easing/utils/map.mjs","../../node_modules/motion/dist/es/motion-dom/dist/es/animation/generators/keyframes.mjs","../../node_modules/motion/dist/es/motion-dom/dist/es/animation/keyframes/get-final.mjs","../../node_modules/motion/dist/es/motion-dom/dist/es/animation/utils/replace-transition-type.mjs","../../node_modules/motion/dist/es/motion-dom/dist/es/animation/utils/WithPromise.mjs","../../node_modules/motion/dist/es/motion-dom/dist/es/animation/JSAnimation.mjs","../../node_modules/motion/dist/es/motion-dom/dist/es/animation/keyframes/utils/fill-wildcards.mjs","../../node_modules/motion/dist/es/motion-dom/dist/es/render/dom/parse-transform.mjs","../../node_modules/motion/dist/es/motion-dom/dist/es/animation/keyframes/utils/unit-conversion.mjs","../../node_modules/motion/dist/es/motion-dom/dist/es/animation/keyframes/KeyframesResolver.mjs","../../node_modules/motion/dist/es/motion-dom/dist/es/render/dom/is-css-var.mjs","../../node_modules/motion/dist/es/motion-dom/dist/es/render/dom/style-set.mjs","../../node_modules/motion/dist/es/motion-utils/dist/es/memo.mjs","../../node_modules/motion/dist/es/motion-dom/dist/es/utils/supports/scroll-timeline.mjs","../../node_modules/motion/dist/es/motion-dom/dist/es/utils/supports/flags.mjs","../../node_modules/motion/dist/es/motion-dom/dist/es/utils/supports/memo.mjs","../../node_modules/motion/dist/es/motion-dom/dist/es/utils/supports/linear-easing.mjs","../../node_modules/motion/dist/es/motion-dom/dist/es/animation/waapi/easing/cubic-bezier.mjs","../../node_modules/motion/dist/es/motion-dom/dist/es/animation/waapi/easing/supported.mjs","../../node_modules/motion/dist/es/motion-dom/dist/es/animation/waapi/easing/map-easing.mjs","../../node_modules/motion/dist/es/motion-dom/dist/es/animation/waapi/start-waapi-animation.mjs","../../node_modules/motion/dist/es/motion-dom/dist/es/animation/generators/utils/is-generator.mjs","../../node_modules/motion/dist/es/motion-dom/dist/es/animation/waapi/utils/apply-generator.mjs","../../node_modules/motion/dist/es/motion-dom/dist/es/animation/NativeAnimation.mjs","../../node_modules/motion/dist/es/motion-dom/dist/es/animation/waapi/utils/unsupported-easing.mjs","../../node_modules/motion/dist/es/motion-dom/dist/es/animation/NativeAnimationExtended.mjs","../../node_modules/motion/dist/es/motion-dom/dist/es/animation/utils/is-animatable.mjs","../../node_modules/motion/dist/es/motion-dom/dist/es/animation/utils/can-animate.mjs","../../node_modules/motion/dist/es/motion-dom/dist/es/animation/waapi/supports/waapi.mjs","../../node_modules/motion/dist/es/motion-dom/dist/es/animation/AsyncMotionValueAnimation.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../../node_modules/motion/dist/es/motion-dom/dist/es/render/utils/keys-position.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/utils/shallow-compare.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/render/utils/get-variant-context.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/render/utils/animation-state.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/motion/features/Feature.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/motion/features/animation/index.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/motion/features/animation/exit.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/motion/features/animations.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/events/add-dom-event.mjs","../../node_modules/motion/dist/es/motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/events/event-info.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/events/add-pointer-event.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/projection/geometry/conversion.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/projection/geometry/models.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/projection/utils/each-axis.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/projection/utils/has-transform.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/projection/utils/measure.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/utils/get-context-window.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/utils/distance.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/gestures/pan/PanSession.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../../node_modules/motion/dist/es/motion-dom/dist/es/gestures/drag/state/is-active.mjs","../../node_modules/motion/dist/es/motion-dom/dist/es/gestures/drag/state/set-active.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/gestures/drag/index.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/gestures/pan/index.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/projection/node/state.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/animation/animate/single-value.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/render/utils/flat-tree.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/utils/delay.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/projection/animation/mix-values.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/projection/geometry/copy.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/projection/geometry/utils.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/projection/shared/stack.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/projection/styles/transform.mjs","../../node_modules/motion/dist/es/motion-dom/dist/es/utils/is-svg-element.mjs","../../node_modules/motion/dist/es/motion-dom/dist/es/utils/is-svg-svg-element.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/projection/node/create-projection-node.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/motion/features/drag.mjs","../../node_modules/motion/dist/es/motion-dom/dist/es/utils/resolve-elements.mjs","../../node_modules/motion/dist/es/motion-dom/dist/es/gestures/utils/setup.mjs","../../node_modules/motion/dist/es/motion-dom/dist/es/gestures/hover.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/gestures/hover.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/gestures/focus.mjs","../../node_modules/motion/dist/es/motion-dom/dist/es/gestures/utils/is-node-or-child.mjs","../../node_modules/motion/dist/es/motion-dom/dist/es/gestures/press/utils/is-keyboard-accessible.mjs","../../node_modules/motion/dist/es/motion-dom/dist/es/gestures/press/utils/state.mjs","../../node_modules/motion/dist/es/motion-dom/dist/es/gestures/press/utils/keyboard.mjs","../../node_modules/motion/dist/es/motion-dom/dist/es/gestures/press/index.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/gestures/press.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/motion/features/viewport/observers.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/motion/features/viewport/index.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/motion/features/gestures.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/motion/features/layout.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/utils/reduced-motion/state.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/utils/reduced-motion/index.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/render/store.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/render/utils/motion-values.mjs","../../node_modules/motion/dist/es/motion-utils/dist/es/is-numerical-string.mjs","../../node_modules/motion/dist/es/motion-utils/dist/es/is-zero-value-string.mjs","../../node_modules/motion/dist/es/motion-dom/dist/es/value/types/auto.mjs","../../node_modules/motion/dist/es/motion-dom/dist/es/value/types/test.mjs","../../node_modules/motion/dist/es/motion-dom/dist/es/value/types/dimensions.mjs","../../node_modules/motion/dist/es/motion-dom/dist/es/value/types/utils/find.mjs","../../node_modules/motion/dist/es/motion-dom/dist/es/value/types/complex/filter.mjs","../../node_modules/motion/dist/es/motion-dom/dist/es/value/types/maps/defaults.mjs","../../node_modules/motion/dist/es/motion-dom/dist/es/value/types/utils/animatable-none.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/render/VisualElement.mjs","../../node_modules/motion/dist/es/motion-dom/dist/es/animation/utils/css-variables-conversion.mjs","../../node_modules/motion/dist/es/motion-dom/dist/es/animation/keyframes/utils/is-none.mjs","../../node_modules/motion/dist/es/motion-dom/dist/es/animation/keyframes/utils/make-none-animatable.mjs","../../node_modules/motion/dist/es/motion-dom/dist/es/animation/keyframes/DOMKeyframesResolver.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/render/html/utils/render.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/render/svg/utils/render.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/render/dom/create-visual-element.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/render/components/motion/create.mjs","../../node_modules/motion/dist/es/framer-motion/dist/es/render/components/motion/proxy.mjs","../../src/components/ui/ZoomableImage.tsx"],"sourcesContent":["\"use client\";\r\nimport { createContext } from 'react';\r\n\r\nconst LayoutGroupContext = createContext({});\r\n\r\nexport { LayoutGroupContext };\r\n","import { useRef } from 'react';\r\n\r\n/**\r\n * Creates a constant value over the lifecycle of a component.\r\n *\r\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\r\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\r\n * you can ensure that initialisers don't execute twice or more.\r\n */\r\nfunction useConstant(init) {\r\n    const ref = useRef(null);\r\n    if (ref.current === null) {\r\n        ref.current = init();\r\n    }\r\n    return ref.current;\r\n}\r\n\r\nexport { useConstant };\r\n","const isBrowser = typeof window !== \"undefined\";\r\n\r\nexport { isBrowser };\r\n","import { useLayoutEffect, useEffect } from 'react';\r\nimport { isBrowser } from './is-browser.mjs';\r\n\r\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\r\n\r\nexport { useIsomorphicLayoutEffect };\r\n","\"use client\";\r\nimport { createContext } from 'react';\r\n\r\n/**\r\n * @public\r\n */\r\nconst PresenceContext = \r\n/* @__PURE__ */ createContext(null);\r\n\r\nexport { PresenceContext };\r\n","\"use client\";\r\nimport { createContext } from 'react';\r\n\r\n/**\r\n * @public\r\n */\r\nconst MotionConfigContext = createContext({\r\n    transformPagePoint: (p) => p,\r\n    isStatic: false,\r\n    reducedMotion: \"never\",\r\n});\r\n\r\nexport { MotionConfigContext };\r\n","function isObject(value) {\r\n    return typeof value === \"object\" && value !== null;\r\n}\r\n\r\nexport { isObject };\r\n","import { isObject } from '../../../../motion-utils/dist/es/is-object.mjs';\r\n\r\n/**\r\n * Checks if an element is an HTML element in a way\r\n * that works across iframes\r\n */\r\nfunction isHTMLElement(element) {\r\n    return isObject(element) && \"offsetHeight\" in element;\r\n}\r\n\r\nexport { isHTMLElement };\r\n","\"use client\";\r\nimport { jsx } from 'react/jsx-runtime';\r\nimport * as React from 'react';\r\nimport { useId, useRef, useContext, useInsertionEffect } from 'react';\r\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\r\nimport { isHTMLElement } from '../../../../../motion-dom/dist/es/utils/is-html-element.mjs';\r\n\r\n/**\r\n * Measurement functionality has to be within a separate component\r\n * to leverage snapshot lifecycle.\r\n */\r\nclass PopChildMeasure extends React.Component {\r\n    getSnapshotBeforeUpdate(prevProps) {\r\n        const element = this.props.childRef.current;\r\n        if (element && prevProps.isPresent && !this.props.isPresent) {\r\n            const parent = element.offsetParent;\r\n            const parentWidth = isHTMLElement(parent)\r\n                ? parent.offsetWidth || 0\r\n                : 0;\r\n            const size = this.props.sizeRef.current;\r\n            size.height = element.offsetHeight || 0;\r\n            size.width = element.offsetWidth || 0;\r\n            size.top = element.offsetTop;\r\n            size.left = element.offsetLeft;\r\n            size.right = parentWidth - size.width - size.left;\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\r\n     */\r\n    componentDidUpdate() { }\r\n    render() {\r\n        return this.props.children;\r\n    }\r\n}\r\nfunction PopChild({ children, isPresent, anchorX }) {\r\n    const id = useId();\r\n    const ref = useRef(null);\r\n    const size = useRef({\r\n        width: 0,\r\n        height: 0,\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n    });\r\n    const { nonce } = useContext(MotionConfigContext);\r\n    /**\r\n     * We create and inject a style block so we can apply this explicit\r\n     * sizing in a non-destructive manner by just deleting the style block.\r\n     *\r\n     * We can't apply size via render as the measurement happens\r\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\r\n     * styles directly on the DOM node, we might be overwriting\r\n     * styles set via the style prop.\r\n     */\r\n    useInsertionEffect(() => {\r\n        const { width, height, top, left, right } = size.current;\r\n        if (isPresent || !ref.current || !width || !height)\r\n            return;\r\n        const x = anchorX === \"left\" ? `left: ${left}` : `right: ${right}`;\r\n        ref.current.dataset.motionPopId = id;\r\n        const style = document.createElement(\"style\");\r\n        if (nonce)\r\n            style.nonce = nonce;\r\n        document.head.appendChild(style);\r\n        if (style.sheet) {\r\n            style.sheet.insertRule(`\r\n          [data-motion-pop-id=\"${id}\"] {\r\n            position: absolute !important;\r\n            width: ${width}px !important;\r\n            height: ${height}px !important;\r\n            ${x}px !important;\r\n            top: ${top}px !important;\r\n          }\r\n        `);\r\n        }\r\n        return () => {\r\n            if (document.head.contains(style)) {\r\n                document.head.removeChild(style);\r\n            }\r\n        };\r\n    }, [isPresent]);\r\n    return (jsx(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size, children: React.cloneElement(children, { ref }) }));\r\n}\r\n\r\nexport { PopChild };\r\n","\"use client\";\r\nimport { jsx } from 'react/jsx-runtime';\r\nimport * as React from 'react';\r\nimport { useId, useMemo } from 'react';\r\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\r\nimport { useConstant } from '../../utils/use-constant.mjs';\r\nimport { PopChild } from './PopChild.mjs';\r\n\r\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, anchorX, }) => {\r\n    const presenceChildren = useConstant(newChildrenMap);\r\n    const id = useId();\r\n    let isReusedContext = true;\r\n    let context = useMemo(() => {\r\n        isReusedContext = false;\r\n        return {\r\n            id,\r\n            initial,\r\n            isPresent,\r\n            custom,\r\n            onExitComplete: (childId) => {\r\n                presenceChildren.set(childId, true);\r\n                for (const isComplete of presenceChildren.values()) {\r\n                    if (!isComplete)\r\n                        return; // can stop searching when any is incomplete\r\n                }\r\n                onExitComplete && onExitComplete();\r\n            },\r\n            register: (childId) => {\r\n                presenceChildren.set(childId, false);\r\n                return () => presenceChildren.delete(childId);\r\n            },\r\n        };\r\n    }, [isPresent, presenceChildren, onExitComplete]);\r\n    /**\r\n     * If the presence of a child affects the layout of the components around it,\r\n     * we want to make a new context value to ensure they get re-rendered\r\n     * so they can detect that layout change.\r\n     */\r\n    if (presenceAffectsLayout && isReusedContext) {\r\n        context = { ...context };\r\n    }\r\n    useMemo(() => {\r\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\r\n    }, [isPresent]);\r\n    /**\r\n     * If there's no `motion` components to fire exit animations, we want to remove this\r\n     * component immediately.\r\n     */\r\n    React.useEffect(() => {\r\n        !isPresent &&\r\n            !presenceChildren.size &&\r\n            onExitComplete &&\r\n            onExitComplete();\r\n    }, [isPresent]);\r\n    if (mode === \"popLayout\") {\r\n        children = (jsx(PopChild, { isPresent: isPresent, anchorX: anchorX, children: children }));\r\n    }\r\n    return (jsx(PresenceContext.Provider, { value: context, children: children }));\r\n};\r\nfunction newChildrenMap() {\r\n    return new Map();\r\n}\r\n\r\nexport { PresenceChild };\r\n","import { useContext, useId, useEffect, useCallback } from 'react';\r\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\r\n\r\n/**\r\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\r\n * to access information about whether it's still present in the React tree.\r\n *\r\n * ```jsx\r\n * import { usePresence } from \"framer-motion\"\r\n *\r\n * export const Component = () => {\r\n *   const [isPresent, safeToRemove] = usePresence()\r\n *\r\n *   useEffect(() => {\r\n *     !isPresent && setTimeout(safeToRemove, 1000)\r\n *   }, [isPresent])\r\n *\r\n *   return <div />\r\n * }\r\n * ```\r\n *\r\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\r\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\r\n *\r\n * @public\r\n */\r\nfunction usePresence(subscribe = true) {\r\n    const context = useContext(PresenceContext);\r\n    if (context === null)\r\n        return [true, null];\r\n    const { isPresent, onExitComplete, register } = context;\r\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\r\n    // either be null or non-null for the lifespan of the component.\r\n    const id = useId();\r\n    useEffect(() => {\r\n        if (subscribe) {\r\n            return register(id);\r\n        }\r\n    }, [subscribe]);\r\n    const safeToRemove = useCallback(() => subscribe && onExitComplete && onExitComplete(id), [id, onExitComplete, subscribe]);\r\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\r\n}\r\n/**\r\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\r\n * There is no `safeToRemove` function.\r\n *\r\n * ```jsx\r\n * import { useIsPresent } from \"framer-motion\"\r\n *\r\n * export const Component = () => {\r\n *   const isPresent = useIsPresent()\r\n *\r\n *   useEffect(() => {\r\n *     !isPresent && console.log(\"I've been removed!\")\r\n *   }, [isPresent])\r\n *\r\n *   return <div />\r\n * }\r\n * ```\r\n *\r\n * @public\r\n */\r\nfunction useIsPresent() {\r\n    return isPresent(useContext(PresenceContext));\r\n}\r\nfunction isPresent(context) {\r\n    return context === null ? true : context.isPresent;\r\n}\r\n\r\nexport { isPresent, useIsPresent, usePresence };\r\n","import { Children, isValidElement } from 'react';\r\n\r\nconst getChildKey = (child) => child.key || \"\";\r\nfunction onlyElements(children) {\r\n    const filtered = [];\r\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\r\n    Children.forEach(children, (child) => {\r\n        if (isValidElement(child))\r\n            filtered.push(child);\r\n    });\r\n    return filtered;\r\n}\r\n\r\nexport { getChildKey, onlyElements };\r\n","\"use client\";\r\nimport { jsx, Fragment } from 'react/jsx-runtime';\r\nimport { useMemo, useRef, useState, useContext } from 'react';\r\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\r\nimport { useConstant } from '../../utils/use-constant.mjs';\r\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\r\nimport { PresenceChild } from './PresenceChild.mjs';\r\nimport { usePresence } from './use-presence.mjs';\r\nimport { onlyElements, getChildKey } from './utils.mjs';\r\n\r\n/**\r\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\r\n *\r\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\r\n *\r\n * Any `motion` components that have an `exit` property defined will animate out when removed from\r\n * the tree.\r\n *\r\n * ```jsx\r\n * import { motion, AnimatePresence } from 'framer-motion'\r\n *\r\n * export const Items = ({ items }) => (\r\n *   <AnimatePresence>\r\n *     {items.map(item => (\r\n *       <motion.div\r\n *         key={item.id}\r\n *         initial={{ opacity: 0 }}\r\n *         animate={{ opacity: 1 }}\r\n *         exit={{ opacity: 0 }}\r\n *       />\r\n *     ))}\r\n *   </AnimatePresence>\r\n * )\r\n * ```\r\n *\r\n * You can sequence exit animations throughout a tree using variants.\r\n *\r\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\r\n * once all `motion` components have finished animating out. Likewise, any components using\r\n * `usePresence` all need to call `safeToRemove`.\r\n *\r\n * @public\r\n */\r\nconst AnimatePresence = ({ children, custom, initial = true, onExitComplete, presenceAffectsLayout = true, mode = \"sync\", propagate = false, anchorX = \"left\", }) => {\r\n    const [isParentPresent, safeToRemove] = usePresence(propagate);\r\n    /**\r\n     * Filter any children that aren't ReactElements. We can only track components\r\n     * between renders with a props.key.\r\n     */\r\n    const presentChildren = useMemo(() => onlyElements(children), [children]);\r\n    /**\r\n     * Track the keys of the currently rendered children. This is used to\r\n     * determine which children are exiting.\r\n     */\r\n    const presentKeys = propagate && !isParentPresent ? [] : presentChildren.map(getChildKey);\r\n    /**\r\n     * If `initial={false}` we only want to pass this to components in the first render.\r\n     */\r\n    const isInitialRender = useRef(true);\r\n    /**\r\n     * A ref containing the currently present children. When all exit animations\r\n     * are complete, we use this to re-render the component with the latest children\r\n     * *committed* rather than the latest children *rendered*.\r\n     */\r\n    const pendingPresentChildren = useRef(presentChildren);\r\n    /**\r\n     * Track which exiting children have finished animating out.\r\n     */\r\n    const exitComplete = useConstant(() => new Map());\r\n    /**\r\n     * Save children to render as React state. To ensure this component is concurrent-safe,\r\n     * we check for exiting children via an effect.\r\n     */\r\n    const [diffedChildren, setDiffedChildren] = useState(presentChildren);\r\n    const [renderedChildren, setRenderedChildren] = useState(presentChildren);\r\n    useIsomorphicLayoutEffect(() => {\r\n        isInitialRender.current = false;\r\n        pendingPresentChildren.current = presentChildren;\r\n        /**\r\n         * Update complete status of exiting children.\r\n         */\r\n        for (let i = 0; i < renderedChildren.length; i++) {\r\n            const key = getChildKey(renderedChildren[i]);\r\n            if (!presentKeys.includes(key)) {\r\n                if (exitComplete.get(key) !== true) {\r\n                    exitComplete.set(key, false);\r\n                }\r\n            }\r\n            else {\r\n                exitComplete.delete(key);\r\n            }\r\n        }\r\n    }, [renderedChildren, presentKeys.length, presentKeys.join(\"-\")]);\r\n    const exitingChildren = [];\r\n    if (presentChildren !== diffedChildren) {\r\n        let nextChildren = [...presentChildren];\r\n        /**\r\n         * Loop through all the currently rendered components and decide which\r\n         * are exiting.\r\n         */\r\n        for (let i = 0; i < renderedChildren.length; i++) {\r\n            const child = renderedChildren[i];\r\n            const key = getChildKey(child);\r\n            if (!presentKeys.includes(key)) {\r\n                nextChildren.splice(i, 0, child);\r\n                exitingChildren.push(child);\r\n            }\r\n        }\r\n        /**\r\n         * If we're in \"wait\" mode, and we have exiting children, we want to\r\n         * only render these until they've all exited.\r\n         */\r\n        if (mode === \"wait\" && exitingChildren.length) {\r\n            nextChildren = exitingChildren;\r\n        }\r\n        setRenderedChildren(onlyElements(nextChildren));\r\n        setDiffedChildren(presentChildren);\r\n        /**\r\n         * Early return to ensure once we've set state with the latest diffed\r\n         * children, we can immediately re-render.\r\n         */\r\n        return null;\r\n    }\r\n    if (process.env.NODE_ENV !== \"production\" &&\r\n        mode === \"wait\" &&\r\n        renderedChildren.length > 1) {\r\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\r\n    }\r\n    /**\r\n     * If we've been provided a forceRender function by the LayoutGroupContext,\r\n     * we can use it to force a re-render amongst all surrounding components once\r\n     * all components have finished animating out.\r\n     */\r\n    const { forceRender } = useContext(LayoutGroupContext);\r\n    return (jsx(Fragment, { children: renderedChildren.map((child) => {\r\n            const key = getChildKey(child);\r\n            const isPresent = propagate && !isParentPresent\r\n                ? false\r\n                : presentChildren === renderedChildren ||\r\n                    presentKeys.includes(key);\r\n            const onExit = () => {\r\n                if (exitComplete.has(key)) {\r\n                    exitComplete.set(key, true);\r\n                }\r\n                else {\r\n                    return;\r\n                }\r\n                let isEveryExitComplete = true;\r\n                exitComplete.forEach((isExitComplete) => {\r\n                    if (!isExitComplete)\r\n                        isEveryExitComplete = false;\r\n                });\r\n                if (isEveryExitComplete) {\r\n                    forceRender?.();\r\n                    setRenderedChildren(pendingPresentChildren.current);\r\n                    propagate && safeToRemove?.();\r\n                    onExitComplete && onExitComplete();\r\n                }\r\n            };\r\n            return (jsx(PresenceChild, { isPresent: isPresent, initial: !isInitialRender.current || initial\r\n                    ? undefined\r\n                    : false, custom: custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode, onExitComplete: isPresent ? undefined : onExit, anchorX: anchorX, children: child }, key));\r\n        }) }));\r\n};\r\n\r\nexport { AnimatePresence };\r\n","const stepsOrder = [\r\n    \"setup\", // Compute\r\n    \"read\", // Read\r\n    \"resolveKeyframes\", // Write/Read/Write/Read\r\n    \"preUpdate\", // Compute\r\n    \"update\", // Compute\r\n    \"preRender\", // Compute\r\n    \"render\", // Write\r\n    \"postRender\", // Compute\r\n];\r\n\r\nexport { stepsOrder };\r\n","const statsBuffer = {\r\n    value: null,\r\n    addProjectionMetrics: null,\r\n};\r\n\r\nexport { statsBuffer };\r\n","import { statsBuffer } from '../stats/buffer.mjs';\r\n\r\nfunction createRenderStep(runNextFrame, stepName) {\r\n    /**\r\n     * We create and reuse two queues, one to queue jobs for the current frame\r\n     * and one for the next. We reuse to avoid triggering GC after x frames.\r\n     */\r\n    let thisFrame = new Set();\r\n    let nextFrame = new Set();\r\n    /**\r\n     * Track whether we're currently processing jobs in this step. This way\r\n     * we can decide whether to schedule new jobs for this frame or next.\r\n     */\r\n    let isProcessing = false;\r\n    let flushNextFrame = false;\r\n    /**\r\n     * A set of processes which were marked keepAlive when scheduled.\r\n     */\r\n    const toKeepAlive = new WeakSet();\r\n    let latestFrameData = {\r\n        delta: 0.0,\r\n        timestamp: 0.0,\r\n        isProcessing: false,\r\n    };\r\n    let numCalls = 0;\r\n    function triggerCallback(callback) {\r\n        if (toKeepAlive.has(callback)) {\r\n            step.schedule(callback);\r\n            runNextFrame();\r\n        }\r\n        numCalls++;\r\n        callback(latestFrameData);\r\n    }\r\n    const step = {\r\n        /**\r\n         * Schedule a process to run on the next frame.\r\n         */\r\n        schedule: (callback, keepAlive = false, immediate = false) => {\r\n            const addToCurrentFrame = immediate && isProcessing;\r\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\r\n            if (keepAlive)\r\n                toKeepAlive.add(callback);\r\n            if (!queue.has(callback))\r\n                queue.add(callback);\r\n            return callback;\r\n        },\r\n        /**\r\n         * Cancel the provided callback from running on the next frame.\r\n         */\r\n        cancel: (callback) => {\r\n            nextFrame.delete(callback);\r\n            toKeepAlive.delete(callback);\r\n        },\r\n        /**\r\n         * Execute all schedule callbacks.\r\n         */\r\n        process: (frameData) => {\r\n            latestFrameData = frameData;\r\n            /**\r\n             * If we're already processing we've probably been triggered by a flushSync\r\n             * inside an existing process. Instead of executing, mark flushNextFrame\r\n             * as true and ensure we flush the following frame at the end of this one.\r\n             */\r\n            if (isProcessing) {\r\n                flushNextFrame = true;\r\n                return;\r\n            }\r\n            isProcessing = true;\r\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\r\n            // Execute this frame\r\n            thisFrame.forEach(triggerCallback);\r\n            /**\r\n             * If we're recording stats then\r\n             */\r\n            if (stepName && statsBuffer.value) {\r\n                statsBuffer.value.frameloop[stepName].push(numCalls);\r\n            }\r\n            numCalls = 0;\r\n            // Clear the frame so no callbacks remain. This is to avoid\r\n            // memory leaks should this render step not run for a while.\r\n            thisFrame.clear();\r\n            isProcessing = false;\r\n            if (flushNextFrame) {\r\n                flushNextFrame = false;\r\n                step.process(frameData);\r\n            }\r\n        },\r\n    };\r\n    return step;\r\n}\r\n\r\nexport { createRenderStep };\r\n","const MotionGlobalConfig = {};\r\n\r\nexport { MotionGlobalConfig };\r\n","import { stepsOrder } from './order.mjs';\r\nimport { createRenderStep } from './render-step.mjs';\r\nimport { MotionGlobalConfig } from '../../../../motion-utils/dist/es/global-config.mjs';\r\n\r\nconst maxElapsed = 40;\r\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\r\n    let runNextFrame = false;\r\n    let useDefaultElapsed = true;\r\n    const state = {\r\n        delta: 0.0,\r\n        timestamp: 0.0,\r\n        isProcessing: false,\r\n    };\r\n    const flagRunNextFrame = () => (runNextFrame = true);\r\n    const steps = stepsOrder.reduce((acc, key) => {\r\n        acc[key] = createRenderStep(flagRunNextFrame, allowKeepAlive ? key : undefined);\r\n        return acc;\r\n    }, {});\r\n    const { setup, read, resolveKeyframes, preUpdate, update, preRender, render, postRender, } = steps;\r\n    const processBatch = () => {\r\n        const timestamp = MotionGlobalConfig.useManualTiming\r\n            ? state.timestamp\r\n            : performance.now();\r\n        runNextFrame = false;\r\n        if (!MotionGlobalConfig.useManualTiming) {\r\n            state.delta = useDefaultElapsed\r\n                ? 1000 / 60\r\n                : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\r\n        }\r\n        state.timestamp = timestamp;\r\n        state.isProcessing = true;\r\n        // Unrolled render loop for better per-frame performance\r\n        setup.process(state);\r\n        read.process(state);\r\n        resolveKeyframes.process(state);\r\n        preUpdate.process(state);\r\n        update.process(state);\r\n        preRender.process(state);\r\n        render.process(state);\r\n        postRender.process(state);\r\n        state.isProcessing = false;\r\n        if (runNextFrame && allowKeepAlive) {\r\n            useDefaultElapsed = false;\r\n            scheduleNextBatch(processBatch);\r\n        }\r\n    };\r\n    const wake = () => {\r\n        runNextFrame = true;\r\n        useDefaultElapsed = true;\r\n        if (!state.isProcessing) {\r\n            scheduleNextBatch(processBatch);\r\n        }\r\n    };\r\n    const schedule = stepsOrder.reduce((acc, key) => {\r\n        const step = steps[key];\r\n        acc[key] = (process, keepAlive = false, immediate = false) => {\r\n            if (!runNextFrame)\r\n                wake();\r\n            return step.schedule(process, keepAlive, immediate);\r\n        };\r\n        return acc;\r\n    }, {});\r\n    const cancel = (process) => {\r\n        for (let i = 0; i < stepsOrder.length; i++) {\r\n            steps[stepsOrder[i]].cancel(process);\r\n        }\r\n    };\r\n    return { schedule, cancel, state, steps };\r\n}\r\n\r\nexport { createRenderBatcher };\r\n","/*#__NO_SIDE_EFFECTS__*/\r\nconst noop = (any) => any;\r\n\r\nexport { noop };\r\n","import { createRenderBatcher } from './batcher.mjs';\r\nimport { noop } from '../../../../motion-utils/dist/es/noop.mjs';\r\n\r\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = /* @__PURE__ */ createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\r\n\r\nexport { cancelFrame, frame, frameData, frameSteps };\r\n","\"use client\";\r\nimport { createContext } from 'react';\r\n\r\nconst LazyContext = createContext({ strict: false });\r\n\r\nexport { LazyContext };\r\n","const featureProps = {\r\n    animation: [\r\n        \"animate\",\r\n        \"variants\",\r\n        \"whileHover\",\r\n        \"whileTap\",\r\n        \"exit\",\r\n        \"whileInView\",\r\n        \"whileFocus\",\r\n        \"whileDrag\",\r\n    ],\r\n    exit: [\"exit\"],\r\n    drag: [\"drag\", \"dragControls\"],\r\n    focus: [\"whileFocus\"],\r\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\r\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\r\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\r\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\r\n    layout: [\"layout\", \"layoutId\"],\r\n};\r\nconst featureDefinitions = {};\r\nfor (const key in featureProps) {\r\n    featureDefinitions[key] = {\r\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\r\n    };\r\n}\r\n\r\nexport { featureDefinitions };\r\n","import { featureDefinitions } from './definitions.mjs';\r\n\r\nfunction loadFeatures(features) {\r\n    for (const key in features) {\r\n        featureDefinitions[key] = {\r\n            ...featureDefinitions[key],\r\n            ...features[key],\r\n        };\r\n    }\r\n}\r\n\r\nexport { loadFeatures };\r\n","/**\r\n * A list of all valid MotionProps.\r\n *\r\n * @privateRemarks\r\n * This doesn't throw if a `MotionProp` name is missing - it should.\r\n */\r\nconst validMotionProps = new Set([\r\n    \"animate\",\r\n    \"exit\",\r\n    \"variants\",\r\n    \"initial\",\r\n    \"style\",\r\n    \"values\",\r\n    \"variants\",\r\n    \"transition\",\r\n    \"transformTemplate\",\r\n    \"custom\",\r\n    \"inherit\",\r\n    \"onBeforeLayoutMeasure\",\r\n    \"onAnimationStart\",\r\n    \"onAnimationComplete\",\r\n    \"onUpdate\",\r\n    \"onDragStart\",\r\n    \"onDrag\",\r\n    \"onDragEnd\",\r\n    \"onMeasureDragConstraints\",\r\n    \"onDirectionLock\",\r\n    \"onDragTransitionEnd\",\r\n    \"_dragX\",\r\n    \"_dragY\",\r\n    \"onHoverStart\",\r\n    \"onHoverEnd\",\r\n    \"onViewportEnter\",\r\n    \"onViewportLeave\",\r\n    \"globalTapTarget\",\r\n    \"ignoreStrict\",\r\n    \"viewport\",\r\n]);\r\n/**\r\n * Check whether a prop name is a valid `MotionProp` key.\r\n *\r\n * @param key - Name of the property to check\r\n * @returns `true` is key is a valid `MotionProp`.\r\n *\r\n * @public\r\n */\r\nfunction isValidMotionProp(key) {\r\n    return (key.startsWith(\"while\") ||\r\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\r\n        key.startsWith(\"layout\") ||\r\n        key.startsWith(\"onTap\") ||\r\n        key.startsWith(\"onPan\") ||\r\n        key.startsWith(\"onLayout\") ||\r\n        validMotionProps.has(key));\r\n}\r\n\r\nexport { isValidMotionProp };\r\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\r\n\r\nlet shouldForward = (key) => !isValidMotionProp(key);\r\nfunction loadExternalIsValidProp(isValidProp) {\r\n    if (!isValidProp)\r\n        return;\r\n    // Explicitly filter our events\r\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\r\n}\r\n/**\r\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\r\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\r\n * of these should be passed to the underlying DOM node.\r\n *\r\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\r\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\r\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\r\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\r\n *\r\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\r\n * actually required.\r\n */\r\ntry {\r\n    /**\r\n     * We attempt to import this package but require won't be defined in esm environments, in that case\r\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\r\n     * in favour of explicit injection.\r\n     */\r\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\r\n}\r\ncatch {\r\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\r\n}\r\nfunction filterProps(props, isDom, forwardMotionProps) {\r\n    const filteredProps = {};\r\n    for (const key in props) {\r\n        /**\r\n         * values is considered a valid prop by Emotion, so if it's present\r\n         * this will be rendered out to the DOM unless explicitly filtered.\r\n         *\r\n         * We check the type as it could be used with the `feColorMatrix`\r\n         * element, which we support.\r\n         */\r\n        if (key === \"values\" && typeof props.values === \"object\")\r\n            continue;\r\n        if (shouldForward(key) ||\r\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\r\n            (!isDom && !isValidMotionProp(key)) ||\r\n            // If trying to use native HTML drag events, forward drag listeners\r\n            (props[\"draggable\"] &&\r\n                key.startsWith(\"onDrag\"))) {\r\n            filteredProps[key] =\r\n                props[key];\r\n        }\r\n    }\r\n    return filteredProps;\r\n}\r\n\r\nexport { filterProps, loadExternalIsValidProp };\r\n","import { warnOnce } from '../../../../../motion-utils/dist/es/warn-once.mjs';\r\n\r\nfunction createDOMMotionComponentProxy(componentFactory) {\r\n    if (typeof Proxy === \"undefined\") {\r\n        return componentFactory;\r\n    }\r\n    /**\r\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\r\n     * Rather than generating them anew every render.\r\n     */\r\n    const componentCache = new Map();\r\n    const deprecatedFactoryFunction = (...args) => {\r\n        if (process.env.NODE_ENV !== \"production\") {\r\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\r\n        }\r\n        return componentFactory(...args);\r\n    };\r\n    return new Proxy(deprecatedFactoryFunction, {\r\n        /**\r\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\r\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\r\n         * DOM component with that name.\r\n         */\r\n        get: (_target, key) => {\r\n            if (key === \"create\")\r\n                return componentFactory;\r\n            /**\r\n             * If this element doesn't exist in the component cache, create it and cache.\r\n             */\r\n            if (!componentCache.has(key)) {\r\n                componentCache.set(key, componentFactory(key));\r\n            }\r\n            return componentCache.get(key);\r\n        },\r\n    });\r\n}\r\n\r\nexport { createDOMMotionComponentProxy };\r\n","\"use client\";\r\nimport { createContext } from 'react';\r\n\r\nconst MotionContext = /* @__PURE__ */ createContext({});\r\n\r\nexport { MotionContext };\r\n","function isAnimationControls(v) {\r\n    return (v !== null &&\r\n        typeof v === \"object\" &&\r\n        typeof v.start === \"function\");\r\n}\r\n\r\nexport { isAnimationControls };\r\n","/**\r\n * Decides if the supplied variable is variant label\r\n */\r\nfunction isVariantLabel(v) {\r\n    return typeof v === \"string\" || Array.isArray(v);\r\n}\r\n\r\nexport { isVariantLabel };\r\n","const variantPriorityOrder = [\r\n    \"animate\",\r\n    \"whileInView\",\r\n    \"whileFocus\",\r\n    \"whileHover\",\r\n    \"whileTap\",\r\n    \"whileDrag\",\r\n    \"exit\",\r\n];\r\nconst variantProps = [\"initial\", ...variantPriorityOrder];\r\n\r\nexport { variantPriorityOrder, variantProps };\r\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\r\nimport { isVariantLabel } from './is-variant-label.mjs';\r\nimport { variantProps } from './variant-props.mjs';\r\n\r\nfunction isControllingVariants(props) {\r\n    return (isAnimationControls(props.animate) ||\r\n        variantProps.some((name) => isVariantLabel(props[name])));\r\n}\r\nfunction isVariantNode(props) {\r\n    return Boolean(isControllingVariants(props) || props.variants);\r\n}\r\n\r\nexport { isControllingVariants, isVariantNode };\r\n","import { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\r\nimport { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\r\n\r\nfunction getCurrentTreeVariants(props, context) {\r\n    if (isControllingVariants(props)) {\r\n        const { initial, animate } = props;\r\n        return {\r\n            initial: initial === false || isVariantLabel(initial)\r\n                ? initial\r\n                : undefined,\r\n            animate: isVariantLabel(animate) ? animate : undefined,\r\n        };\r\n    }\r\n    return props.inherit !== false ? context : {};\r\n}\r\n\r\nexport { getCurrentTreeVariants };\r\n","import { useContext, useMemo } from 'react';\r\nimport { MotionContext } from './index.mjs';\r\nimport { getCurrentTreeVariants } from './utils.mjs';\r\n\r\nfunction useCreateMotionContext(props) {\r\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\r\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\r\n}\r\nfunction variantLabelsAsDependency(prop) {\r\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\r\n}\r\n\r\nexport { useCreateMotionContext };\r\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\r\n\r\nexport { motionComponentSymbol };\r\n","function isRefObject(ref) {\r\n    return (ref &&\r\n        typeof ref === \"object\" &&\r\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\r\n}\r\n\r\nexport { isRefObject };\r\n","import { useCallback } from 'react';\r\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\r\n\r\n/**\r\n * Creates a ref function that, when called, hydrates the provided\r\n * external ref and VisualElement.\r\n */\r\nfunction useMotionRef(visualState, visualElement, externalRef) {\r\n    return useCallback((instance) => {\r\n        if (instance) {\r\n            visualState.onMount && visualState.onMount(instance);\r\n        }\r\n        if (visualElement) {\r\n            if (instance) {\r\n                visualElement.mount(instance);\r\n            }\r\n            else {\r\n                visualElement.unmount();\r\n            }\r\n        }\r\n        if (externalRef) {\r\n            if (typeof externalRef === \"function\") {\r\n                externalRef(instance);\r\n            }\r\n            else if (isRefObject(externalRef)) {\r\n                externalRef.current = instance;\r\n            }\r\n        }\r\n    }, \r\n    /**\r\n     * Only pass a new ref callback to React if we've received a visual element\r\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\r\n     * or other dependencies change.\r\n     */\r\n    [visualElement]);\r\n}\r\n\r\nexport { useMotionRef };\r\n","/**\r\n * Convert camelCase to dash-case properties.\r\n */\r\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\r\n\r\nexport { camelToDash };\r\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\r\n\r\nconst optimizedAppearDataId = \"framerAppearId\";\r\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\r\n\r\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\r\n","\"use client\";\r\nimport { createContext } from 'react';\r\n\r\n/**\r\n * Internal, exported only for usage in Framer\r\n */\r\nconst SwitchLayoutGroupContext = createContext({});\r\n\r\nexport { SwitchLayoutGroupContext };\r\n","import { createRenderBatcher } from './batcher.mjs';\r\n\r\nconst { schedule: microtask, cancel: cancelMicrotask } = \r\n/* @__PURE__ */ createRenderBatcher(queueMicrotask, false);\r\n\r\nexport { cancelMicrotask, microtask };\r\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\r\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\r\nimport { LazyContext } from '../../context/LazyContext.mjs';\r\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\r\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\r\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\r\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\r\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\r\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\r\nimport { microtask } from '../../../../../motion-dom/dist/es/frameloop/microtask.mjs';\r\n\r\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\r\n    const { visualElement: parent } = useContext(MotionContext);\r\n    const lazyContext = useContext(LazyContext);\r\n    const presenceContext = useContext(PresenceContext);\r\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\r\n    const visualElementRef = useRef(null);\r\n    /**\r\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\r\n     */\r\n    createVisualElement = createVisualElement || lazyContext.renderer;\r\n    if (!visualElementRef.current && createVisualElement) {\r\n        visualElementRef.current = createVisualElement(Component, {\r\n            visualState,\r\n            parent,\r\n            props,\r\n            presenceContext,\r\n            blockInitialAnimation: presenceContext\r\n                ? presenceContext.initial === false\r\n                : false,\r\n            reducedMotionConfig,\r\n        });\r\n    }\r\n    const visualElement = visualElementRef.current;\r\n    /**\r\n     * Load Motion gesture and animation features. These are rendered as renderless\r\n     * components so each feature can optionally make use of React lifecycle methods.\r\n     */\r\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\r\n    if (visualElement &&\r\n        !visualElement.projection &&\r\n        ProjectionNodeConstructor &&\r\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\r\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\r\n    }\r\n    const isMounted = useRef(false);\r\n    useInsertionEffect(() => {\r\n        /**\r\n         * Check the component has already mounted before calling\r\n         * `update` unnecessarily. This ensures we skip the initial update.\r\n         */\r\n        if (visualElement && isMounted.current) {\r\n            visualElement.update(props, presenceContext);\r\n        }\r\n    });\r\n    /**\r\n     * Cache this value as we want to know whether HandoffAppearAnimations\r\n     * was present on initial render - it will be deleted after this.\r\n     */\r\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\r\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\r\n        !window.MotionHandoffIsComplete?.(optimisedAppearId) &&\r\n        window.MotionHasOptimisedAnimation?.(optimisedAppearId));\r\n    useIsomorphicLayoutEffect(() => {\r\n        if (!visualElement)\r\n            return;\r\n        isMounted.current = true;\r\n        window.MotionIsMounted = true;\r\n        visualElement.updateFeatures();\r\n        microtask.render(visualElement.render);\r\n        /**\r\n         * Ideally this function would always run in a useEffect.\r\n         *\r\n         * However, if we have optimised appear animations to handoff from,\r\n         * it needs to happen synchronously to ensure there's no flash of\r\n         * incorrect styles in the event of a hydration error.\r\n         *\r\n         * So if we detect a situtation where optimised appear animations\r\n         * are running, we use useLayoutEffect to trigger animations.\r\n         */\r\n        if (wantsHandoff.current && visualElement.animationState) {\r\n            visualElement.animationState.animateChanges();\r\n        }\r\n    });\r\n    useEffect(() => {\r\n        if (!visualElement)\r\n            return;\r\n        if (!wantsHandoff.current && visualElement.animationState) {\r\n            visualElement.animationState.animateChanges();\r\n        }\r\n        if (wantsHandoff.current) {\r\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\r\n            queueMicrotask(() => {\r\n                window.MotionHandoffMarkAsComplete?.(optimisedAppearId);\r\n            });\r\n            wantsHandoff.current = false;\r\n        }\r\n    });\r\n    return visualElement;\r\n}\r\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\r\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, layoutCrossfade, } = props;\r\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\r\n        ? undefined\r\n        : getClosestProjectingNode(visualElement.parent));\r\n    visualElement.projection.setOptions({\r\n        layoutId,\r\n        layout,\r\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\r\n        visualElement,\r\n        /**\r\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\r\n         * to update by the time layout animations run.\r\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\r\n         * ensuring it gets called if there's no potential layout animations.\r\n         *\r\n         */\r\n        animationType: typeof layout === \"string\" ? layout : \"both\",\r\n        initialPromotionConfig,\r\n        crossfade: layoutCrossfade,\r\n        layoutScroll,\r\n        layoutRoot,\r\n    });\r\n}\r\nfunction getClosestProjectingNode(visualElement) {\r\n    if (!visualElement)\r\n        return undefined;\r\n    return visualElement.options.allowProjection !== false\r\n        ? visualElement.projection\r\n        : getClosestProjectingNode(visualElement.parent);\r\n}\r\n\r\nexport { useVisualElement };\r\n","let warning = () => { };\r\nlet invariant = () => { };\r\nif (process.env.NODE_ENV !== \"production\") {\r\n    warning = (check, message) => {\r\n        if (!check && typeof console !== \"undefined\") {\r\n            console.warn(message);\r\n        }\r\n    };\r\n    invariant = (check, message) => {\r\n        if (!check) {\r\n            throw new Error(message);\r\n        }\r\n    };\r\n}\r\n\r\nexport { invariant, warning };\r\n","\"use client\";\r\nimport { jsxs, jsx } from 'react/jsx-runtime';\r\nimport { forwardRef, useContext } from 'react';\r\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\r\nimport { LazyContext } from '../context/LazyContext.mjs';\r\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\r\nimport { MotionContext } from '../context/MotionContext/index.mjs';\r\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\r\nimport { isBrowser } from '../utils/is-browser.mjs';\r\nimport { featureDefinitions } from './features/definitions.mjs';\r\nimport { loadFeatures } from './features/load-features.mjs';\r\nimport { motionComponentSymbol } from './utils/symbol.mjs';\r\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\r\nimport { useVisualElement } from './utils/use-visual-element.mjs';\r\nimport { warning, invariant } from '../../../../motion-utils/dist/es/errors.mjs';\r\n\r\n/**\r\n * Create a `motion` component.\r\n *\r\n * This function accepts a Component argument, which can be either a string (ie \"div\"\r\n * for `motion.div`), or an actual React component.\r\n *\r\n * Alongside this is a config option which provides a way of rendering the provided\r\n * component \"offline\", or outside the React render cycle.\r\n */\r\nfunction createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\r\n    preloadedFeatures && loadFeatures(preloadedFeatures);\r\n    function MotionComponent(props, externalRef) {\r\n        /**\r\n         * If we need to measure the element we load this functionality in a\r\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\r\n         */\r\n        let MeasureLayout;\r\n        const configAndProps = {\r\n            ...useContext(MotionConfigContext),\r\n            ...props,\r\n            layoutId: useLayoutId(props),\r\n        };\r\n        const { isStatic } = configAndProps;\r\n        const context = useCreateMotionContext(props);\r\n        const visualState = useVisualState(props, isStatic);\r\n        if (!isStatic && isBrowser) {\r\n            useStrictMode(configAndProps, preloadedFeatures);\r\n            const layoutProjection = getProjectionFunctionality(configAndProps);\r\n            MeasureLayout = layoutProjection.MeasureLayout;\r\n            /**\r\n             * Create a VisualElement for this component. A VisualElement provides a common\r\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\r\n             * providing a way of rendering to these APIs outside of the React render loop\r\n             * for more performant animations and interactions\r\n             */\r\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\r\n        }\r\n        /**\r\n         * The mount order and hierarchy is specific to ensure our element ref\r\n         * is hydrated by the time features fire their effects.\r\n         */\r\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\r\n    }\r\n    MotionComponent.displayName = `motion.${typeof Component === \"string\"\r\n        ? Component\r\n        : `create(${Component.displayName ?? Component.name ?? \"\"})`}`;\r\n    const ForwardRefMotionComponent = forwardRef(MotionComponent);\r\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\r\n    return ForwardRefMotionComponent;\r\n}\r\nfunction useLayoutId({ layoutId }) {\r\n    const layoutGroupId = useContext(LayoutGroupContext).id;\r\n    return layoutGroupId && layoutId !== undefined\r\n        ? layoutGroupId + \"-\" + layoutId\r\n        : layoutId;\r\n}\r\nfunction useStrictMode(configAndProps, preloadedFeatures) {\r\n    const isStrict = useContext(LazyContext).strict;\r\n    /**\r\n     * If we're in development mode, check to make sure we're not rendering a motion component\r\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\r\n     */\r\n    if (process.env.NODE_ENV !== \"production\" &&\r\n        preloadedFeatures &&\r\n        isStrict) {\r\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\r\n        configAndProps.ignoreStrict\r\n            ? warning(false, strictMessage)\r\n            : invariant(false, strictMessage);\r\n    }\r\n}\r\nfunction getProjectionFunctionality(props) {\r\n    const { drag, layout } = featureDefinitions;\r\n    if (!drag && !layout)\r\n        return {};\r\n    const combined = { ...drag, ...layout };\r\n    return {\r\n        MeasureLayout: drag?.isEnabled(props) || layout?.isEnabled(props)\r\n            ? combined.MeasureLayout\r\n            : undefined,\r\n        ProjectionNode: combined.ProjectionNode,\r\n    };\r\n}\r\n\r\nexport { createRendererMotionComponent };\r\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\r\nconst isCSSVariableName = \r\n/*@__PURE__*/ checkStringStartsWith(\"--\");\r\nconst startsAsVariableToken = \r\n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\r\nconst isCSSVariableToken = (value) => {\r\n    const startsWithToken = startsAsVariableToken(value);\r\n    if (!startsWithToken)\r\n        return false;\r\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\r\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\r\n};\r\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\r\n\r\nexport { isCSSVariableName, isCSSVariableToken };\r\n","import { isCSSVariableName } from '../../../../../motion-dom/dist/es/animation/utils/is-css-variable.mjs';\r\n\r\nconst scaleCorrectors = {};\r\nfunction addScaleCorrector(correctors) {\r\n    for (const key in correctors) {\r\n        scaleCorrectors[key] = correctors[key];\r\n        if (isCSSVariableName(key)) {\r\n            scaleCorrectors[key].isCSSVariable = true;\r\n        }\r\n    }\r\n}\r\n\r\nexport { addScaleCorrector, scaleCorrectors };\r\n","/**\r\n * Generate a list of every possible transform key.\r\n */\r\nconst transformPropOrder = [\r\n    \"transformPerspective\",\r\n    \"x\",\r\n    \"y\",\r\n    \"z\",\r\n    \"translateX\",\r\n    \"translateY\",\r\n    \"translateZ\",\r\n    \"scale\",\r\n    \"scaleX\",\r\n    \"scaleY\",\r\n    \"rotate\",\r\n    \"rotateX\",\r\n    \"rotateY\",\r\n    \"rotateZ\",\r\n    \"skew\",\r\n    \"skewX\",\r\n    \"skewY\",\r\n];\r\n/**\r\n * A quick lookup for transform props.\r\n */\r\nconst transformProps = /*@__PURE__*/ (() => new Set(transformPropOrder))();\r\n\r\nexport { transformPropOrder, transformProps };\r\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\r\nimport { transformProps } from '../../../../../motion-dom/dist/es/render/utils/keys-transform.mjs';\r\n\r\nfunction isForcedMotionValue(key, { layout, layoutId }) {\r\n    return (transformProps.has(key) ||\r\n        key.startsWith(\"origin\") ||\r\n        ((layout || layoutId !== undefined) &&\r\n            (!!scaleCorrectors[key] || key === \"opacity\")));\r\n}\r\n\r\nexport { isForcedMotionValue };\r\n","/**\r\n * Provided a value and a ValueType, returns the value as that value type.\r\n */\r\nconst getValueAsType = (value, type) => {\r\n    return type && typeof value === \"number\"\r\n        ? type.transform(value)\r\n        : value;\r\n};\r\n\r\nexport { getValueAsType };\r\n","const clamp = (min, max, v) => {\r\n    if (v > max)\r\n        return max;\r\n    if (v < min)\r\n        return min;\r\n    return v;\r\n};\r\n\r\nexport { clamp };\r\n","import { clamp } from '../../../../../../motion-utils/dist/es/clamp.mjs';\r\n\r\nconst number = {\r\n    test: (v) => typeof v === \"number\",\r\n    parse: parseFloat,\r\n    transform: (v) => v,\r\n};\r\nconst alpha = {\r\n    ...number,\r\n    transform: (v) => clamp(0, 1, v),\r\n};\r\nconst scale = {\r\n    ...number,\r\n    default: 1,\r\n};\r\n\r\nexport { alpha, number, scale };\r\n","import { number } from './numbers/index.mjs';\r\n\r\nconst int = {\r\n    ...number,\r\n    transform: Math.round,\r\n};\r\n\r\nexport { int };\r\n","/*#__NO_SIDE_EFFECTS__*/\r\nconst createUnitType = (unit) => ({\r\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\r\n    parse: parseFloat,\r\n    transform: (v) => `${v}${unit}`,\r\n});\r\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\r\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\r\nconst px = /*@__PURE__*/ createUnitType(\"px\");\r\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\r\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\r\nconst progressPercentage = /*@__PURE__*/ (() => ({\r\n    ...percent,\r\n    parse: (v) => percent.parse(v) / 100,\r\n    transform: (v) => percent.transform(v * 100),\r\n}))();\r\n\r\nexport { degrees, percent, progressPercentage, px, vh, vw };\r\n","import { scale, alpha } from '../numbers/index.mjs';\r\nimport { degrees, px, progressPercentage } from '../numbers/units.mjs';\r\n\r\nconst transformValueTypes = {\r\n    rotate: degrees,\r\n    rotateX: degrees,\r\n    rotateY: degrees,\r\n    rotateZ: degrees,\r\n    scale,\r\n    scaleX: scale,\r\n    scaleY: scale,\r\n    scaleZ: scale,\r\n    skew: degrees,\r\n    skewX: degrees,\r\n    skewY: degrees,\r\n    distance: px,\r\n    translateX: px,\r\n    translateY: px,\r\n    translateZ: px,\r\n    x: px,\r\n    y: px,\r\n    z: px,\r\n    perspective: px,\r\n    transformPerspective: px,\r\n    opacity: alpha,\r\n    originX: progressPercentage,\r\n    originY: progressPercentage,\r\n    originZ: px,\r\n};\r\n\r\nexport { transformValueTypes };\r\n","import { int } from '../int.mjs';\r\nimport { alpha } from '../numbers/index.mjs';\r\nimport { px } from '../numbers/units.mjs';\r\nimport { transformValueTypes } from './transform.mjs';\r\n\r\nconst numberValueTypes = {\r\n    // Border props\r\n    borderWidth: px,\r\n    borderTopWidth: px,\r\n    borderRightWidth: px,\r\n    borderBottomWidth: px,\r\n    borderLeftWidth: px,\r\n    borderRadius: px,\r\n    radius: px,\r\n    borderTopLeftRadius: px,\r\n    borderTopRightRadius: px,\r\n    borderBottomRightRadius: px,\r\n    borderBottomLeftRadius: px,\r\n    // Positioning props\r\n    width: px,\r\n    maxWidth: px,\r\n    height: px,\r\n    maxHeight: px,\r\n    top: px,\r\n    right: px,\r\n    bottom: px,\r\n    left: px,\r\n    // Spacing props\r\n    padding: px,\r\n    paddingTop: px,\r\n    paddingRight: px,\r\n    paddingBottom: px,\r\n    paddingLeft: px,\r\n    margin: px,\r\n    marginTop: px,\r\n    marginRight: px,\r\n    marginBottom: px,\r\n    marginLeft: px,\r\n    // Misc\r\n    backgroundPositionX: px,\r\n    backgroundPositionY: px,\r\n    ...transformValueTypes,\r\n    zIndex: int,\r\n    // SVG\r\n    fillOpacity: alpha,\r\n    strokeOpacity: alpha,\r\n    numOctaves: int,\r\n};\r\n\r\nexport { numberValueTypes };\r\n","import { transformPropOrder } from '../../../../../../motion-dom/dist/es/render/utils/keys-transform.mjs';\r\nimport { getValueAsType } from '../../../../../../motion-dom/dist/es/value/types/utils/get-as-type.mjs';\r\nimport { numberValueTypes } from '../../../../../../motion-dom/dist/es/value/types/maps/number.mjs';\r\n\r\nconst translateAlias = {\r\n    x: \"translateX\",\r\n    y: \"translateY\",\r\n    z: \"translateZ\",\r\n    transformPerspective: \"perspective\",\r\n};\r\nconst numTransforms = transformPropOrder.length;\r\n/**\r\n * Build a CSS transform style from individual x/y/scale etc properties.\r\n *\r\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\r\n * providing a transformTemplate function.\r\n */\r\nfunction buildTransform(latestValues, transform, transformTemplate) {\r\n    // The transform string we're going to build into.\r\n    let transformString = \"\";\r\n    let transformIsDefault = true;\r\n    /**\r\n     * Loop over all possible transforms in order, adding the ones that\r\n     * are present to the transform string.\r\n     */\r\n    for (let i = 0; i < numTransforms; i++) {\r\n        const key = transformPropOrder[i];\r\n        const value = latestValues[key];\r\n        if (value === undefined)\r\n            continue;\r\n        let valueIsDefault = true;\r\n        if (typeof value === \"number\") {\r\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\r\n        }\r\n        else {\r\n            valueIsDefault = parseFloat(value) === 0;\r\n        }\r\n        if (!valueIsDefault || transformTemplate) {\r\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\r\n            if (!valueIsDefault) {\r\n                transformIsDefault = false;\r\n                const transformName = translateAlias[key] || key;\r\n                transformString += `${transformName}(${valueAsType}) `;\r\n            }\r\n            if (transformTemplate) {\r\n                transform[key] = valueAsType;\r\n            }\r\n        }\r\n    }\r\n    transformString = transformString.trim();\r\n    // If we have a custom `transform` template, pass our transform values and\r\n    // generated transformString to that before returning\r\n    if (transformTemplate) {\r\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\r\n    }\r\n    else if (transformIsDefault) {\r\n        transformString = \"none\";\r\n    }\r\n    return transformString;\r\n}\r\n\r\nexport { buildTransform };\r\n","import { buildTransform } from './build-transform.mjs';\r\nimport { transformProps } from '../../../../../../motion-dom/dist/es/render/utils/keys-transform.mjs';\r\nimport { isCSSVariableName } from '../../../../../../motion-dom/dist/es/animation/utils/is-css-variable.mjs';\r\nimport { getValueAsType } from '../../../../../../motion-dom/dist/es/value/types/utils/get-as-type.mjs';\r\nimport { numberValueTypes } from '../../../../../../motion-dom/dist/es/value/types/maps/number.mjs';\r\n\r\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\r\n    const { style, vars, transformOrigin } = state;\r\n    // Track whether we encounter any transform or transformOrigin values.\r\n    let hasTransform = false;\r\n    let hasTransformOrigin = false;\r\n    /**\r\n     * Loop over all our latest animated values and decide whether to handle them\r\n     * as a style or CSS variable.\r\n     *\r\n     * Transforms and transform origins are kept separately for further processing.\r\n     */\r\n    for (const key in latestValues) {\r\n        const value = latestValues[key];\r\n        if (transformProps.has(key)) {\r\n            // If this is a transform, flag to enable further transform processing\r\n            hasTransform = true;\r\n            continue;\r\n        }\r\n        else if (isCSSVariableName(key)) {\r\n            vars[key] = value;\r\n            continue;\r\n        }\r\n        else {\r\n            // Convert the value to its default value type, ie 0 -> \"0px\"\r\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\r\n            if (key.startsWith(\"origin\")) {\r\n                // If this is a transform origin, flag and enable further transform-origin processing\r\n                hasTransformOrigin = true;\r\n                transformOrigin[key] =\r\n                    valueAsType;\r\n            }\r\n            else {\r\n                style[key] = valueAsType;\r\n            }\r\n        }\r\n    }\r\n    if (!latestValues.transform) {\r\n        if (hasTransform || transformTemplate) {\r\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\r\n        }\r\n        else if (style.transform) {\r\n            /**\r\n             * If we have previously created a transform but currently don't have any,\r\n             * reset transform style to none.\r\n             */\r\n            style.transform = \"none\";\r\n        }\r\n    }\r\n    /**\r\n     * Build a transformOrigin style. Uses the same defaults as the browser for\r\n     * undefined origins.\r\n     */\r\n    if (hasTransformOrigin) {\r\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\r\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\r\n    }\r\n}\r\n\r\nexport { buildHTMLStyles };\r\n","const createHtmlRenderState = () => ({\r\n    style: {},\r\n    transform: {},\r\n    transformOrigin: {},\r\n    vars: {},\r\n});\r\n\r\nexport { createHtmlRenderState };\r\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\r\n\r\nexport { isMotionValue };\r\n","import { useMemo } from 'react';\r\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\r\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\r\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\r\nimport { isMotionValue } from '../../../../../motion-dom/dist/es/value/utils/is-motion-value.mjs';\r\n\r\nfunction copyRawValuesOnly(target, source, props) {\r\n    for (const key in source) {\r\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\r\n            target[key] = source[key];\r\n        }\r\n    }\r\n}\r\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\r\n    return useMemo(() => {\r\n        const state = createHtmlRenderState();\r\n        buildHTMLStyles(state, visualState, transformTemplate);\r\n        return Object.assign({}, state.vars, state.style);\r\n    }, [visualState]);\r\n}\r\nfunction useStyle(props, visualState) {\r\n    const styleProp = props.style || {};\r\n    const style = {};\r\n    /**\r\n     * Copy non-Motion Values straight into style\r\n     */\r\n    copyRawValuesOnly(style, styleProp, props);\r\n    Object.assign(style, useInitialMotionValues(props, visualState));\r\n    return style;\r\n}\r\nfunction useHTMLProps(props, visualState) {\r\n    // The `any` isn't ideal but it is the type of createElement props argument\r\n    const htmlProps = {};\r\n    const style = useStyle(props, visualState);\r\n    if (props.drag && props.dragListener !== false) {\r\n        // Disable the ghost element when a user drags\r\n        htmlProps.draggable = false;\r\n        // Disable text selection\r\n        style.userSelect =\r\n            style.WebkitUserSelect =\r\n                style.WebkitTouchCallout =\r\n                    \"none\";\r\n        // Disable scrolling on the draggable direction\r\n        style.touchAction =\r\n            props.drag === true\r\n                ? \"none\"\r\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\r\n    }\r\n    if (props.tabIndex === undefined &&\r\n        (props.onTap || props.onTapStart || props.whileTap)) {\r\n        htmlProps.tabIndex = 0;\r\n    }\r\n    htmlProps.style = style;\r\n    return htmlProps;\r\n}\r\n\r\nexport { copyRawValuesOnly, useHTMLProps };\r\n","import { px } from '../../../../../../motion-dom/dist/es/value/types/numbers/units.mjs';\r\n\r\nconst dashKeys = {\r\n    offset: \"stroke-dashoffset\",\r\n    array: \"stroke-dasharray\",\r\n};\r\nconst camelKeys = {\r\n    offset: \"strokeDashoffset\",\r\n    array: \"strokeDasharray\",\r\n};\r\n/**\r\n * Build SVG path properties. Uses the path's measured length to convert\r\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\r\n * and stroke-dasharray attributes.\r\n *\r\n * This function is mutative to reduce per-frame GC.\r\n */\r\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\r\n    // Normalise path length by setting SVG attribute pathLength to 1\r\n    attrs.pathLength = 1;\r\n    // We use dash case when setting attributes directly to the DOM node and camel case\r\n    // when defining props on a React component.\r\n    const keys = useDashCase ? dashKeys : camelKeys;\r\n    // Build the dash offset\r\n    attrs[keys.offset] = px.transform(-offset);\r\n    // Build the dash array\r\n    const pathLength = px.transform(length);\r\n    const pathSpacing = px.transform(spacing);\r\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\r\n}\r\n\r\nexport { buildSVGPath };\r\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\r\nimport { buildSVGPath } from './path.mjs';\r\n\r\n/**\r\n * Build SVG visual attrbutes, like cx and style.transform\r\n */\r\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, pathLength, pathSpacing = 1, pathOffset = 0, \r\n// This is object creation, which we try to avoid per-frame.\r\n...latest }, isSVGTag, transformTemplate, styleProp) {\r\n    buildHTMLStyles(state, latest, transformTemplate);\r\n    /**\r\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\r\n     * as normal HTML tags.\r\n     */\r\n    if (isSVGTag) {\r\n        if (state.style.viewBox) {\r\n            state.attrs.viewBox = state.style.viewBox;\r\n        }\r\n        return;\r\n    }\r\n    state.attrs = state.style;\r\n    state.style = {};\r\n    const { attrs, style } = state;\r\n    /**\r\n     * However, we apply transforms as CSS transforms.\r\n     * So if we detect a transform, transformOrigin we take it from attrs and copy it into style.\r\n     */\r\n    if (attrs.transform) {\r\n        style.transform = attrs.transform;\r\n        delete attrs.transform;\r\n    }\r\n    if (style.transform || attrs.transformOrigin) {\r\n        style.transformOrigin = attrs.transformOrigin ?? \"50% 50%\";\r\n        delete attrs.transformOrigin;\r\n    }\r\n    if (style.transform) {\r\n        /**\r\n         * SVG's element transform-origin uses its own median as a reference.\r\n         * Therefore, transformBox becomes a fill-box\r\n         */\r\n        style.transformBox = styleProp?.transformBox ?? \"fill-box\";\r\n        delete attrs.transformBox;\r\n    }\r\n    // Render attrX/attrY/attrScale as attributes\r\n    if (attrX !== undefined)\r\n        attrs.x = attrX;\r\n    if (attrY !== undefined)\r\n        attrs.y = attrY;\r\n    if (attrScale !== undefined)\r\n        attrs.scale = attrScale;\r\n    // Build SVG path if one has been defined\r\n    if (pathLength !== undefined) {\r\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\r\n    }\r\n}\r\n\r\nexport { buildSVGAttrs };\r\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\r\n\r\nconst createSvgRenderState = () => ({\r\n    ...createHtmlRenderState(),\r\n    attrs: {},\r\n});\r\n\r\nexport { createSvgRenderState };\r\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\r\n\r\nexport { isSVGTag };\r\n","import { useMemo } from 'react';\r\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\r\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\r\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\r\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\r\n\r\nfunction useSVGProps(props, visualState, _isStatic, Component) {\r\n    const visualProps = useMemo(() => {\r\n        const state = createSvgRenderState();\r\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate, props.style);\r\n        return {\r\n            ...state.attrs,\r\n            style: { ...state.style },\r\n        };\r\n    }, [visualState]);\r\n    if (props.style) {\r\n        const rawStyles = {};\r\n        copyRawValuesOnly(rawStyles, props.style, props);\r\n        visualProps.style = { ...rawStyles, ...visualProps.style };\r\n    }\r\n    return visualProps;\r\n}\r\n\r\nexport { useSVGProps };\r\n","/**\r\n * We keep these listed separately as we use the lowercase tag names as part\r\n * of the runtime bundle to detect SVG components\r\n */\r\nconst lowercaseSVGElements = [\r\n    \"animate\",\r\n    \"circle\",\r\n    \"defs\",\r\n    \"desc\",\r\n    \"ellipse\",\r\n    \"g\",\r\n    \"image\",\r\n    \"line\",\r\n    \"filter\",\r\n    \"marker\",\r\n    \"mask\",\r\n    \"metadata\",\r\n    \"path\",\r\n    \"pattern\",\r\n    \"polygon\",\r\n    \"polyline\",\r\n    \"rect\",\r\n    \"stop\",\r\n    \"switch\",\r\n    \"symbol\",\r\n    \"svg\",\r\n    \"text\",\r\n    \"tspan\",\r\n    \"use\",\r\n    \"view\",\r\n];\r\n\r\nexport { lowercaseSVGElements };\r\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\r\n\r\nfunction isSVGComponent(Component) {\r\n    if (\r\n    /**\r\n     * If it's not a string, it's a custom React component. Currently we only support\r\n     * HTML custom React components.\r\n     */\r\n    typeof Component !== \"string\" ||\r\n        /**\r\n         * If it contains a dash, the element is a custom HTML webcomponent.\r\n         */\r\n        Component.includes(\"-\")) {\r\n        return false;\r\n    }\r\n    else if (\r\n    /**\r\n     * If it's in our list of lowercase SVG tags, it's an SVG component\r\n     */\r\n    lowercaseSVGElements.indexOf(Component) > -1 ||\r\n        /**\r\n         * If it contains a capital letter, it's an SVG component\r\n         */\r\n        /[A-Z]/u.test(Component)) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nexport { isSVGComponent };\r\n","import { Fragment, useMemo, createElement } from 'react';\r\nimport { useHTMLProps } from '../html/use-props.mjs';\r\nimport { useSVGProps } from '../svg/use-props.mjs';\r\nimport { filterProps } from './utils/filter-props.mjs';\r\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\r\nimport { isMotionValue } from '../../../../../motion-dom/dist/es/value/utils/is-motion-value.mjs';\r\n\r\nfunction createUseRender(forwardMotionProps = false) {\r\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\r\n        const useVisualProps = isSVGComponent(Component)\r\n            ? useSVGProps\r\n            : useHTMLProps;\r\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\r\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\r\n        const elementProps = Component !== Fragment\r\n            ? { ...filteredProps, ...visualProps, ref }\r\n            : {};\r\n        /**\r\n         * If component has been handed a motion value as its child,\r\n         * memoise its initial value and render that. Subsequent updates\r\n         * will be handled by the onChange handler\r\n         */\r\n        const { children } = props;\r\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\r\n        return createElement(Component, {\r\n            ...elementProps,\r\n            children: renderedChildren,\r\n        });\r\n    };\r\n    return useRender;\r\n}\r\n\r\nexport { createUseRender };\r\n","function getValueState(visualElement) {\r\n    const state = [{}, {}];\r\n    visualElement?.values.forEach((value, key) => {\r\n        state[0][key] = value.get();\r\n        state[1][key] = value.getVelocity();\r\n    });\r\n    return state;\r\n}\r\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\r\n    /**\r\n     * If the variant definition is a function, resolve.\r\n     */\r\n    if (typeof definition === \"function\") {\r\n        const [current, velocity] = getValueState(visualElement);\r\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\r\n    }\r\n    /**\r\n     * If the variant definition is a variant label, or\r\n     * the function returned a variant label, resolve.\r\n     */\r\n    if (typeof definition === \"string\") {\r\n        definition = props.variants && props.variants[definition];\r\n    }\r\n    /**\r\n     * At this point we've resolved both functions and variant labels,\r\n     * but the resolved variant label might itself have been a function.\r\n     * If so, resolve. This can only have returned a valid target object.\r\n     */\r\n    if (typeof definition === \"function\") {\r\n        const [current, velocity] = getValueState(visualElement);\r\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\r\n    }\r\n    return definition;\r\n}\r\n\r\nexport { resolveVariantFromProps };\r\n","import { isMotionValue } from '../../../../../motion-dom/dist/es/value/utils/is-motion-value.mjs';\r\n\r\n/**\r\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\r\n *\r\n * TODO: Remove and move to library\r\n */\r\nfunction resolveMotionValue(value) {\r\n    return isMotionValue(value) ? value.get() : value;\r\n}\r\n\r\nexport { resolveMotionValue };\r\n","import { useContext } from 'react';\r\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\r\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\r\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\r\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\r\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\r\nimport { useConstant } from '../../utils/use-constant.mjs';\r\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\r\n\r\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, }, props, context, presenceContext) {\r\n    const state = {\r\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\r\n        renderState: createRenderState(),\r\n    };\r\n    return state;\r\n}\r\nconst makeUseVisualState = (config) => (props, isStatic) => {\r\n    const context = useContext(MotionContext);\r\n    const presenceContext = useContext(PresenceContext);\r\n    const make = () => makeState(config, props, context, presenceContext);\r\n    return isStatic ? make() : useConstant(make);\r\n};\r\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\r\n    const values = {};\r\n    const motionValues = scrapeMotionValues(props, {});\r\n    for (const key in motionValues) {\r\n        values[key] = resolveMotionValue(motionValues[key]);\r\n    }\r\n    let { initial, animate } = props;\r\n    const isControllingVariants$1 = isControllingVariants(props);\r\n    const isVariantNode$1 = isVariantNode(props);\r\n    if (context &&\r\n        isVariantNode$1 &&\r\n        !isControllingVariants$1 &&\r\n        props.inherit !== false) {\r\n        if (initial === undefined)\r\n            initial = context.initial;\r\n        if (animate === undefined)\r\n            animate = context.animate;\r\n    }\r\n    let isInitialAnimationBlocked = presenceContext\r\n        ? presenceContext.initial === false\r\n        : false;\r\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\r\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\r\n    if (variantToSet &&\r\n        typeof variantToSet !== \"boolean\" &&\r\n        !isAnimationControls(variantToSet)) {\r\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\r\n        for (let i = 0; i < list.length; i++) {\r\n            const resolved = resolveVariantFromProps(props, list[i]);\r\n            if (resolved) {\r\n                const { transitionEnd, transition, ...target } = resolved;\r\n                for (const key in target) {\r\n                    let valueTarget = target[key];\r\n                    if (Array.isArray(valueTarget)) {\r\n                        /**\r\n                         * Take final keyframe if the initial animation is blocked because\r\n                         * we want to initialise at the end of that blocked animation.\r\n                         */\r\n                        const index = isInitialAnimationBlocked\r\n                            ? valueTarget.length - 1\r\n                            : 0;\r\n                        valueTarget = valueTarget[index];\r\n                    }\r\n                    if (valueTarget !== null) {\r\n                        values[key] = valueTarget;\r\n                    }\r\n                }\r\n                for (const key in transitionEnd) {\r\n                    values[key] = transitionEnd[key];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return values;\r\n}\r\n\r\nexport { makeUseVisualState };\r\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\r\nimport { isMotionValue } from '../../../../../../motion-dom/dist/es/value/utils/is-motion-value.mjs';\r\n\r\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\r\n    const { style } = props;\r\n    const newValues = {};\r\n    for (const key in style) {\r\n        if (isMotionValue(style[key]) ||\r\n            (prevProps.style &&\r\n                isMotionValue(prevProps.style[key])) ||\r\n            isForcedMotionValue(key, props) ||\r\n            visualElement?.getValue(key)?.liveStyle !== undefined) {\r\n            newValues[key] = style[key];\r\n        }\r\n    }\r\n    return newValues;\r\n}\r\n\r\nexport { scrapeMotionValuesFromProps };\r\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\r\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\r\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\r\n\r\nconst htmlMotionConfig = {\r\n    useVisualState: makeUseVisualState({\r\n        scrapeMotionValuesFromProps,\r\n        createRenderState: createHtmlRenderState,\r\n    }),\r\n};\r\n\r\nexport { htmlMotionConfig };\r\n","import { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\r\nimport { isMotionValue } from '../../../../../../motion-dom/dist/es/value/utils/is-motion-value.mjs';\r\nimport { transformPropOrder } from '../../../../../../motion-dom/dist/es/render/utils/keys-transform.mjs';\r\n\r\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\r\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\r\n    for (const key in props) {\r\n        if (isMotionValue(props[key]) ||\r\n            isMotionValue(prevProps[key])) {\r\n            const targetKey = transformPropOrder.indexOf(key) !== -1\r\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\r\n                : key;\r\n            newValues[targetKey] = props[key];\r\n        }\r\n    }\r\n    return newValues;\r\n}\r\n\r\nexport { scrapeMotionValuesFromProps };\r\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\r\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\r\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\r\n\r\nconst svgMotionConfig = {\r\n    useVisualState: makeUseVisualState({\r\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\r\n        createRenderState: createSvgRenderState,\r\n    }),\r\n};\r\n\r\nexport { svgMotionConfig };\r\n","import { createRendererMotionComponent } from '../../motion/index.mjs';\r\nimport { createUseRender } from '../dom/use-render.mjs';\r\nimport { isSVGComponent } from '../dom/utils/is-svg-component.mjs';\r\nimport { htmlMotionConfig } from '../html/config-motion.mjs';\r\nimport { svgMotionConfig } from '../svg/config-motion.mjs';\r\n\r\nfunction createMotionComponentFactory(preloadedFeatures, createVisualElement) {\r\n    return function createMotionComponent(Component, { forwardMotionProps } = { forwardMotionProps: false }) {\r\n        const baseConfig = isSVGComponent(Component)\r\n            ? svgMotionConfig\r\n            : htmlMotionConfig;\r\n        const config = {\r\n            ...baseConfig,\r\n            preloadedFeatures,\r\n            useRender: createUseRender(forwardMotionProps),\r\n            createVisualElement,\r\n            Component,\r\n        };\r\n        return createRendererMotionComponent(config);\r\n    };\r\n}\r\n\r\nexport { createMotionComponentFactory };\r\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\r\n\r\nfunction resolveVariant(visualElement, definition, custom) {\r\n    const props = visualElement.getProps();\r\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\r\n}\r\n\r\nexport { resolveVariant };\r\n","const isKeyframesTarget = (v) => {\r\n    return Array.isArray(v);\r\n};\r\n\r\nexport { isKeyframesTarget };\r\n","import { frameData } from './frame.mjs';\r\nimport { MotionGlobalConfig } from '../../../../motion-utils/dist/es/global-config.mjs';\r\n\r\nlet now;\r\nfunction clearTime() {\r\n    now = undefined;\r\n}\r\n/**\r\n * An eventloop-synchronous alternative to performance.now().\r\n *\r\n * Ensures that time measurements remain consistent within a synchronous context.\r\n * Usually calling performance.now() twice within the same synchronous context\r\n * will return different values which isn't useful for animations when we're usually\r\n * trying to sync animations to the same frame.\r\n */\r\nconst time = {\r\n    now: () => {\r\n        if (now === undefined) {\r\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\r\n                ? frameData.timestamp\r\n                : performance.now());\r\n        }\r\n        return now;\r\n    },\r\n    set: (newTime) => {\r\n        now = newTime;\r\n        queueMicrotask(clearTime);\r\n    },\r\n};\r\n\r\nexport { time };\r\n","function addUniqueItem(arr, item) {\r\n    if (arr.indexOf(item) === -1)\r\n        arr.push(item);\r\n}\r\nfunction removeItem(arr, item) {\r\n    const index = arr.indexOf(item);\r\n    if (index > -1)\r\n        arr.splice(index, 1);\r\n}\r\n// Adapted from array-move\r\nfunction moveItem([...arr], fromIndex, toIndex) {\r\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\r\n    if (startIndex >= 0 && startIndex < arr.length) {\r\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\r\n        const [item] = arr.splice(fromIndex, 1);\r\n        arr.splice(endIndex, 0, item);\r\n    }\r\n    return arr;\r\n}\r\n\r\nexport { addUniqueItem, moveItem, removeItem };\r\n","import { addUniqueItem, removeItem } from './array.mjs';\r\n\r\nclass SubscriptionManager {\r\n    constructor() {\r\n        this.subscriptions = [];\r\n    }\r\n    add(handler) {\r\n        addUniqueItem(this.subscriptions, handler);\r\n        return () => removeItem(this.subscriptions, handler);\r\n    }\r\n    notify(a, b, c) {\r\n        const numSubscriptions = this.subscriptions.length;\r\n        if (!numSubscriptions)\r\n            return;\r\n        if (numSubscriptions === 1) {\r\n            /**\r\n             * If there's only a single handler we can just call it without invoking a loop.\r\n             */\r\n            this.subscriptions[0](a, b, c);\r\n        }\r\n        else {\r\n            for (let i = 0; i < numSubscriptions; i++) {\r\n                /**\r\n                 * Check whether the handler exists before firing as it's possible\r\n                 * the subscriptions were modified during this loop running.\r\n                 */\r\n                const handler = this.subscriptions[i];\r\n                handler && handler(a, b, c);\r\n            }\r\n        }\r\n    }\r\n    getSize() {\r\n        return this.subscriptions.length;\r\n    }\r\n    clear() {\r\n        this.subscriptions.length = 0;\r\n    }\r\n}\r\n\r\nexport { SubscriptionManager };\r\n","/*\r\n  Convert velocity into velocity per second\r\n\r\n  @param [number]: Unit per frame\r\n  @param [number]: Frame duration in ms\r\n*/\r\nfunction velocityPerSecond(velocity, frameDuration) {\r\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\r\n}\r\n\r\nexport { velocityPerSecond };\r\n","import { time } from '../frameloop/sync-time.mjs';\r\nimport { frame } from '../frameloop/frame.mjs';\r\nimport { warnOnce } from '../../../../motion-utils/dist/es/warn-once.mjs';\r\nimport { SubscriptionManager } from '../../../../motion-utils/dist/es/subscription-manager.mjs';\r\nimport { velocityPerSecond } from '../../../../motion-utils/dist/es/velocity-per-second.mjs';\r\n\r\n/**\r\n * Maximum time between the value of two frames, beyond which we\r\n * assume the velocity has since been 0.\r\n */\r\nconst MAX_VELOCITY_DELTA = 30;\r\nconst isFloat = (value) => {\r\n    return !isNaN(parseFloat(value));\r\n};\r\nconst collectMotionValues = {\r\n    current: undefined,\r\n};\r\n/**\r\n * `MotionValue` is used to track the state and velocity of motion values.\r\n *\r\n * @public\r\n */\r\nclass MotionValue {\r\n    /**\r\n     * @param init - The initiating value\r\n     * @param config - Optional configuration options\r\n     *\r\n     * -  `transformer`: A function to transform incoming values with.\r\n     */\r\n    constructor(init, options = {}) {\r\n        /**\r\n         * Tracks whether this value can output a velocity. Currently this is only true\r\n         * if the value is numerical, but we might be able to widen the scope here and support\r\n         * other value types.\r\n         *\r\n         * @internal\r\n         */\r\n        this.canTrackVelocity = null;\r\n        /**\r\n         * An object containing a SubscriptionManager for each active event.\r\n         */\r\n        this.events = {};\r\n        this.updateAndNotify = (v, render = true) => {\r\n            const currentTime = time.now();\r\n            /**\r\n             * If we're updating the value during another frame or eventloop\r\n             * than the previous frame, then the we set the previous frame value\r\n             * to current.\r\n             */\r\n            if (this.updatedAt !== currentTime) {\r\n                this.setPrevFrameValue();\r\n            }\r\n            this.prev = this.current;\r\n            this.setCurrent(v);\r\n            // Update update subscribers\r\n            if (this.current !== this.prev) {\r\n                this.events.change?.notify(this.current);\r\n                if (this.dependents) {\r\n                    for (const dependent of this.dependents) {\r\n                        dependent.dirty();\r\n                    }\r\n                }\r\n            }\r\n            // Update render subscribers\r\n            if (render) {\r\n                this.events.renderRequest?.notify(this.current);\r\n            }\r\n        };\r\n        this.hasAnimated = false;\r\n        this.setCurrent(init);\r\n        this.owner = options.owner;\r\n    }\r\n    setCurrent(current) {\r\n        this.current = current;\r\n        this.updatedAt = time.now();\r\n        if (this.canTrackVelocity === null && current !== undefined) {\r\n            this.canTrackVelocity = isFloat(this.current);\r\n        }\r\n    }\r\n    setPrevFrameValue(prevFrameValue = this.current) {\r\n        this.prevFrameValue = prevFrameValue;\r\n        this.prevUpdatedAt = this.updatedAt;\r\n    }\r\n    /**\r\n     * Adds a function that will be notified when the `MotionValue` is updated.\r\n     *\r\n     * It returns a function that, when called, will cancel the subscription.\r\n     *\r\n     * When calling `onChange` inside a React component, it should be wrapped with the\r\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\r\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\r\n     *\r\n     * ```jsx\r\n     * export const MyComponent = () => {\r\n     *   const x = useMotionValue(0)\r\n     *   const y = useMotionValue(0)\r\n     *   const opacity = useMotionValue(1)\r\n     *\r\n     *   useEffect(() => {\r\n     *     function updateOpacity() {\r\n     *       const maxXY = Math.max(x.get(), y.get())\r\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\r\n     *       opacity.set(newOpacity)\r\n     *     }\r\n     *\r\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\r\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\r\n     *\r\n     *     return () => {\r\n     *       unsubscribeX()\r\n     *       unsubscribeY()\r\n     *     }\r\n     *   }, [])\r\n     *\r\n     *   return <motion.div style={{ x }} />\r\n     * }\r\n     * ```\r\n     *\r\n     * @param subscriber - A function that receives the latest value.\r\n     * @returns A function that, when called, will cancel this subscription.\r\n     *\r\n     * @deprecated\r\n     */\r\n    onChange(subscription) {\r\n        if (process.env.NODE_ENV !== \"production\") {\r\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\r\n        }\r\n        return this.on(\"change\", subscription);\r\n    }\r\n    on(eventName, callback) {\r\n        if (!this.events[eventName]) {\r\n            this.events[eventName] = new SubscriptionManager();\r\n        }\r\n        const unsubscribe = this.events[eventName].add(callback);\r\n        if (eventName === \"change\") {\r\n            return () => {\r\n                unsubscribe();\r\n                /**\r\n                 * If we have no more change listeners by the start\r\n                 * of the next frame, stop active animations.\r\n                 */\r\n                frame.read(() => {\r\n                    if (!this.events.change.getSize()) {\r\n                        this.stop();\r\n                    }\r\n                });\r\n            };\r\n        }\r\n        return unsubscribe;\r\n    }\r\n    clearListeners() {\r\n        for (const eventManagers in this.events) {\r\n            this.events[eventManagers].clear();\r\n        }\r\n    }\r\n    /**\r\n     * Attaches a passive effect to the `MotionValue`.\r\n     */\r\n    attach(passiveEffect, stopPassiveEffect) {\r\n        this.passiveEffect = passiveEffect;\r\n        this.stopPassiveEffect = stopPassiveEffect;\r\n    }\r\n    /**\r\n     * Sets the state of the `MotionValue`.\r\n     *\r\n     * @remarks\r\n     *\r\n     * ```jsx\r\n     * const x = useMotionValue(0)\r\n     * x.set(10)\r\n     * ```\r\n     *\r\n     * @param latest - Latest value to set.\r\n     * @param render - Whether to notify render subscribers. Defaults to `true`\r\n     *\r\n     * @public\r\n     */\r\n    set(v, render = true) {\r\n        if (!render || !this.passiveEffect) {\r\n            this.updateAndNotify(v, render);\r\n        }\r\n        else {\r\n            this.passiveEffect(v, this.updateAndNotify);\r\n        }\r\n    }\r\n    setWithVelocity(prev, current, delta) {\r\n        this.set(current);\r\n        this.prev = undefined;\r\n        this.prevFrameValue = prev;\r\n        this.prevUpdatedAt = this.updatedAt - delta;\r\n    }\r\n    /**\r\n     * Set the state of the `MotionValue`, stopping any active animations,\r\n     * effects, and resets velocity to `0`.\r\n     */\r\n    jump(v, endAnimation = true) {\r\n        this.updateAndNotify(v);\r\n        this.prev = v;\r\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\r\n        endAnimation && this.stop();\r\n        if (this.stopPassiveEffect)\r\n            this.stopPassiveEffect();\r\n    }\r\n    dirty() {\r\n        this.events.change?.notify(this.current);\r\n    }\r\n    addDependent(dependent) {\r\n        if (!this.dependents) {\r\n            this.dependents = new Set();\r\n        }\r\n        this.dependents.add(dependent);\r\n    }\r\n    removeDependent(dependent) {\r\n        if (this.dependents) {\r\n            this.dependents.delete(dependent);\r\n        }\r\n    }\r\n    /**\r\n     * Returns the latest state of `MotionValue`\r\n     *\r\n     * @returns - The latest state of `MotionValue`\r\n     *\r\n     * @public\r\n     */\r\n    get() {\r\n        if (collectMotionValues.current) {\r\n            collectMotionValues.current.push(this);\r\n        }\r\n        return this.current;\r\n    }\r\n    /**\r\n     * @public\r\n     */\r\n    getPrevious() {\r\n        return this.prev;\r\n    }\r\n    /**\r\n     * Returns the latest velocity of `MotionValue`\r\n     *\r\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\r\n     *\r\n     * @public\r\n     */\r\n    getVelocity() {\r\n        const currentTime = time.now();\r\n        if (!this.canTrackVelocity ||\r\n            this.prevFrameValue === undefined ||\r\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\r\n            return 0;\r\n        }\r\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\r\n        // Casts because of parseFloat's poor typing\r\n        return velocityPerSecond(parseFloat(this.current) -\r\n            parseFloat(this.prevFrameValue), delta);\r\n    }\r\n    /**\r\n     * Registers a new animation to control this `MotionValue`. Only one\r\n     * animation can drive a `MotionValue` at one time.\r\n     *\r\n     * ```jsx\r\n     * value.start()\r\n     * ```\r\n     *\r\n     * @param animation - A function that starts the provided animation\r\n     */\r\n    start(startAnimation) {\r\n        this.stop();\r\n        return new Promise((resolve) => {\r\n            this.hasAnimated = true;\r\n            this.animation = startAnimation(resolve);\r\n            if (this.events.animationStart) {\r\n                this.events.animationStart.notify();\r\n            }\r\n        }).then(() => {\r\n            if (this.events.animationComplete) {\r\n                this.events.animationComplete.notify();\r\n            }\r\n            this.clearAnimation();\r\n        });\r\n    }\r\n    /**\r\n     * Stop the currently active animation.\r\n     *\r\n     * @public\r\n     */\r\n    stop() {\r\n        if (this.animation) {\r\n            this.animation.stop();\r\n            if (this.events.animationCancel) {\r\n                this.events.animationCancel.notify();\r\n            }\r\n        }\r\n        this.clearAnimation();\r\n    }\r\n    /**\r\n     * Returns `true` if this value is currently animating.\r\n     *\r\n     * @public\r\n     */\r\n    isAnimating() {\r\n        return !!this.animation;\r\n    }\r\n    clearAnimation() {\r\n        delete this.animation;\r\n    }\r\n    /**\r\n     * Destroy and clean up subscribers to this `MotionValue`.\r\n     *\r\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\r\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\r\n     * created a `MotionValue` via the `motionValue` function.\r\n     *\r\n     * @public\r\n     */\r\n    destroy() {\r\n        this.dependents?.clear();\r\n        this.events.destroy?.notify();\r\n        this.clearListeners();\r\n        this.stop();\r\n        if (this.stopPassiveEffect) {\r\n            this.stopPassiveEffect();\r\n        }\r\n    }\r\n}\r\nfunction motionValue(init, options) {\r\n    return new MotionValue(init, options);\r\n}\r\n\r\nexport { MotionValue, collectMotionValues, motionValue };\r\n","import { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\r\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\r\nimport { motionValue } from '../../../../../motion-dom/dist/es/value/index.mjs';\r\n\r\n/**\r\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\r\n * it doesn't exist.\r\n */\r\nfunction setMotionValue(visualElement, key, value) {\r\n    if (visualElement.hasValue(key)) {\r\n        visualElement.getValue(key).set(value);\r\n    }\r\n    else {\r\n        visualElement.addValue(key, motionValue(value));\r\n    }\r\n}\r\nfunction resolveFinalValueInKeyframes(v) {\r\n    // TODO maybe throw if v.length - 1 is placeholder token?\r\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\r\n}\r\nfunction setTarget(visualElement, definition) {\r\n    const resolved = resolveVariant(visualElement, definition);\r\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\r\n    target = { ...target, ...transitionEnd };\r\n    for (const key in target) {\r\n        const value = resolveFinalValueInKeyframes(target[key]);\r\n        setMotionValue(visualElement, key, value);\r\n    }\r\n}\r\n\r\nexport { setTarget };\r\n","import { isMotionValue } from '../../../../../motion-dom/dist/es/value/utils/is-motion-value.mjs';\r\n\r\nfunction isWillChangeMotionValue(value) {\r\n    return Boolean(isMotionValue(value) && value.add);\r\n}\r\n\r\nexport { isWillChangeMotionValue };\r\n","import { isWillChangeMotionValue } from './is.mjs';\r\nimport { MotionGlobalConfig } from '../../../../../motion-utils/dist/es/global-config.mjs';\r\n\r\nfunction addValueToWillChange(visualElement, key) {\r\n    const willChange = visualElement.getValue(\"willChange\");\r\n    /**\r\n     * It could be that a user has set willChange to a regular MotionValue,\r\n     * in which case we can't add the value to it.\r\n     */\r\n    if (isWillChangeMotionValue(willChange)) {\r\n        return willChange.add(key);\r\n    }\r\n    else if (!willChange && MotionGlobalConfig.WillChange) {\r\n        const newWillChange = new MotionGlobalConfig.WillChange(\"auto\");\r\n        visualElement.addValue(\"willChange\", newWillChange);\r\n        newWillChange.add(key);\r\n    }\r\n}\r\n\r\nexport { addValueToWillChange };\r\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\r\n\r\nfunction getOptimisedAppearId(visualElement) {\r\n    return visualElement.props[optimizedAppearDataAttribute];\r\n}\r\n\r\nexport { getOptimisedAppearId };\r\n","const isNotNull = (value) => value !== null;\r\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\r\n    const resolvedKeyframes = keyframes.filter(isNotNull);\r\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\r\n        ? 0\r\n        : resolvedKeyframes.length - 1;\r\n    return !index || finalKeyframe === undefined\r\n        ? resolvedKeyframes[index]\r\n        : finalKeyframe;\r\n}\r\n\r\nexport { getFinalKeyframe };\r\n","import { transformProps } from '../../../../../motion-dom/dist/es/render/utils/keys-transform.mjs';\r\n\r\nconst underDampedSpring = {\r\n    type: \"spring\",\r\n    stiffness: 500,\r\n    damping: 25,\r\n    restSpeed: 10,\r\n};\r\nconst criticallyDampedSpring = (target) => ({\r\n    type: \"spring\",\r\n    stiffness: 550,\r\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\r\n    restSpeed: 10,\r\n});\r\nconst keyframesTransition = {\r\n    type: \"keyframes\",\r\n    duration: 0.8,\r\n};\r\n/**\r\n * Default easing curve is a slightly shallower version of\r\n * the default browser easing curve.\r\n */\r\nconst ease = {\r\n    type: \"keyframes\",\r\n    ease: [0.25, 0.1, 0.35, 1],\r\n    duration: 0.3,\r\n};\r\nconst getDefaultTransition = (valueKey, { keyframes }) => {\r\n    if (keyframes.length > 2) {\r\n        return keyframesTransition;\r\n    }\r\n    else if (transformProps.has(valueKey)) {\r\n        return valueKey.startsWith(\"scale\")\r\n            ? criticallyDampedSpring(keyframes[1])\r\n            : underDampedSpring;\r\n    }\r\n    return ease;\r\n};\r\n\r\nexport { getDefaultTransition };\r\n","/**\r\n * Decide whether a transition is defined on a given Transition.\r\n * This filters out orchestration options and returns true\r\n * if any options are left.\r\n */\r\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\r\n    return !!Object.keys(transition).length;\r\n}\r\n\r\nexport { isTransitionDefined };\r\n","function getValueTransition(transition, key) {\r\n    return (transition?.[key] ??\r\n        transition?.[\"default\"] ??\r\n        transition);\r\n}\r\n\r\nexport { getValueTransition };\r\n","/**\r\n * Converts seconds to milliseconds\r\n *\r\n * @param seconds - Time in seconds.\r\n * @return milliseconds - Converted time in milliseconds.\r\n */\r\n/*#__NO_SIDE_EFFECTS__*/\r\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\r\n/*#__NO_SIDE_EFFECTS__*/\r\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\r\n\r\nexport { millisecondsToSeconds, secondsToMilliseconds };\r\n","// If this number is a decimal, make it just five decimal places\r\n// to avoid exponents\r\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\r\n\r\nexport { sanitize };\r\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\r\n\r\nexport { floatRegex };\r\n","function isNullish(v) {\r\n    return v == null;\r\n}\r\n\r\nexport { isNullish };\r\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\r\n\r\nexport { singleColorRegex };\r\n","import { floatRegex } from '../utils/float-regex.mjs';\r\nimport { isNullish } from '../utils/is-nullish.mjs';\r\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\r\n\r\n/**\r\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\r\n * but false if a number or multiple colors\r\n */\r\nconst isColorString = (type, testProp) => (v) => {\r\n    return Boolean((typeof v === \"string\" &&\r\n        singleColorRegex.test(v) &&\r\n        v.startsWith(type)) ||\r\n        (testProp &&\r\n            !isNullish(v) &&\r\n            Object.prototype.hasOwnProperty.call(v, testProp)));\r\n};\r\nconst splitColor = (aName, bName, cName) => (v) => {\r\n    if (typeof v !== \"string\")\r\n        return v;\r\n    const [a, b, c, alpha] = v.match(floatRegex);\r\n    return {\r\n        [aName]: parseFloat(a),\r\n        [bName]: parseFloat(b),\r\n        [cName]: parseFloat(c),\r\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\r\n    };\r\n};\r\n\r\nexport { isColorString, splitColor };\r\n","import { number, alpha } from '../numbers/index.mjs';\r\nimport { sanitize } from '../utils/sanitize.mjs';\r\nimport { isColorString, splitColor } from './utils.mjs';\r\nimport { clamp } from '../../../../../../motion-utils/dist/es/clamp.mjs';\r\n\r\nconst clampRgbUnit = (v) => clamp(0, 255, v);\r\nconst rgbUnit = {\r\n    ...number,\r\n    transform: (v) => Math.round(clampRgbUnit(v)),\r\n};\r\nconst rgba = {\r\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\r\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\r\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\r\n        rgbUnit.transform(red) +\r\n        \", \" +\r\n        rgbUnit.transform(green) +\r\n        \", \" +\r\n        rgbUnit.transform(blue) +\r\n        \", \" +\r\n        sanitize(alpha.transform(alpha$1)) +\r\n        \")\",\r\n};\r\n\r\nexport { rgbUnit, rgba };\r\n","import { rgba } from './rgba.mjs';\r\nimport { isColorString } from './utils.mjs';\r\n\r\nfunction parseHex(v) {\r\n    let r = \"\";\r\n    let g = \"\";\r\n    let b = \"\";\r\n    let a = \"\";\r\n    // If we have 6 characters, ie #FF0000\r\n    if (v.length > 5) {\r\n        r = v.substring(1, 3);\r\n        g = v.substring(3, 5);\r\n        b = v.substring(5, 7);\r\n        a = v.substring(7, 9);\r\n        // Or we have 3 characters, ie #F00\r\n    }\r\n    else {\r\n        r = v.substring(1, 2);\r\n        g = v.substring(2, 3);\r\n        b = v.substring(3, 4);\r\n        a = v.substring(4, 5);\r\n        r += r;\r\n        g += g;\r\n        b += b;\r\n        a += a;\r\n    }\r\n    return {\r\n        red: parseInt(r, 16),\r\n        green: parseInt(g, 16),\r\n        blue: parseInt(b, 16),\r\n        alpha: a ? parseInt(a, 16) / 255 : 1,\r\n    };\r\n}\r\nconst hex = {\r\n    test: /*@__PURE__*/ isColorString(\"#\"),\r\n    parse: parseHex,\r\n    transform: rgba.transform,\r\n};\r\n\r\nexport { hex };\r\n","import { alpha } from '../numbers/index.mjs';\r\nimport { percent } from '../numbers/units.mjs';\r\nimport { sanitize } from '../utils/sanitize.mjs';\r\nimport { isColorString, splitColor } from './utils.mjs';\r\n\r\nconst hsla = {\r\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\r\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\r\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\r\n        return (\"hsla(\" +\r\n            Math.round(hue) +\r\n            \", \" +\r\n            percent.transform(sanitize(saturation)) +\r\n            \", \" +\r\n            percent.transform(sanitize(lightness)) +\r\n            \", \" +\r\n            sanitize(alpha.transform(alpha$1)) +\r\n            \")\");\r\n    },\r\n};\r\n\r\nexport { hsla };\r\n","import { hex } from './hex.mjs';\r\nimport { hsla } from './hsla.mjs';\r\nimport { rgba } from './rgba.mjs';\r\n\r\nconst color = {\r\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\r\n    parse: (v) => {\r\n        if (rgba.test(v)) {\r\n            return rgba.parse(v);\r\n        }\r\n        else if (hsla.test(v)) {\r\n            return hsla.parse(v);\r\n        }\r\n        else {\r\n            return hex.parse(v);\r\n        }\r\n    },\r\n    transform: (v) => {\r\n        return typeof v === \"string\"\r\n            ? v\r\n            : v.hasOwnProperty(\"red\")\r\n                ? rgba.transform(v)\r\n                : hsla.transform(v);\r\n    },\r\n};\r\n\r\nexport { color };\r\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\r\n\r\nexport { colorRegex };\r\n","import { color } from '../color/index.mjs';\r\nimport { colorRegex } from '../utils/color-regex.mjs';\r\nimport { floatRegex } from '../utils/float-regex.mjs';\r\nimport { sanitize } from '../utils/sanitize.mjs';\r\n\r\nfunction test(v) {\r\n    return (isNaN(v) &&\r\n        typeof v === \"string\" &&\r\n        (v.match(floatRegex)?.length || 0) +\r\n            (v.match(colorRegex)?.length || 0) >\r\n            0);\r\n}\r\nconst NUMBER_TOKEN = \"number\";\r\nconst COLOR_TOKEN = \"color\";\r\nconst VAR_TOKEN = \"var\";\r\nconst VAR_FUNCTION_TOKEN = \"var(\";\r\nconst SPLIT_TOKEN = \"${}\";\r\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\r\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\r\nfunction analyseComplexValue(value) {\r\n    const originalValue = value.toString();\r\n    const values = [];\r\n    const indexes = {\r\n        color: [],\r\n        number: [],\r\n        var: [],\r\n    };\r\n    const types = [];\r\n    let i = 0;\r\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\r\n        if (color.test(parsedValue)) {\r\n            indexes.color.push(i);\r\n            types.push(COLOR_TOKEN);\r\n            values.push(color.parse(parsedValue));\r\n        }\r\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\r\n            indexes.var.push(i);\r\n            types.push(VAR_TOKEN);\r\n            values.push(parsedValue);\r\n        }\r\n        else {\r\n            indexes.number.push(i);\r\n            types.push(NUMBER_TOKEN);\r\n            values.push(parseFloat(parsedValue));\r\n        }\r\n        ++i;\r\n        return SPLIT_TOKEN;\r\n    });\r\n    const split = tokenised.split(SPLIT_TOKEN);\r\n    return { values, split, indexes, types };\r\n}\r\nfunction parseComplexValue(v) {\r\n    return analyseComplexValue(v).values;\r\n}\r\nfunction createTransformer(source) {\r\n    const { split, types } = analyseComplexValue(source);\r\n    const numSections = split.length;\r\n    return (v) => {\r\n        let output = \"\";\r\n        for (let i = 0; i < numSections; i++) {\r\n            output += split[i];\r\n            if (v[i] !== undefined) {\r\n                const type = types[i];\r\n                if (type === NUMBER_TOKEN) {\r\n                    output += sanitize(v[i]);\r\n                }\r\n                else if (type === COLOR_TOKEN) {\r\n                    output += color.transform(v[i]);\r\n                }\r\n                else {\r\n                    output += v[i];\r\n                }\r\n            }\r\n        }\r\n        return output;\r\n    };\r\n}\r\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\r\nfunction getAnimatableNone(v) {\r\n    const parsed = parseComplexValue(v);\r\n    const transformer = createTransformer(v);\r\n    return transformer(parsed.map(convertNumbersToZero));\r\n}\r\nconst complex = {\r\n    test,\r\n    parse: parseComplexValue,\r\n    createTransformer,\r\n    getAnimatableNone,\r\n};\r\n\r\nexport { analyseComplexValue, complex };\r\n","// Adapted from https://gist.github.com/mjackson/5311256\r\nfunction hueToRgb(p, q, t) {\r\n    if (t < 0)\r\n        t += 1;\r\n    if (t > 1)\r\n        t -= 1;\r\n    if (t < 1 / 6)\r\n        return p + (q - p) * 6 * t;\r\n    if (t < 1 / 2)\r\n        return q;\r\n    if (t < 2 / 3)\r\n        return p + (q - p) * (2 / 3 - t) * 6;\r\n    return p;\r\n}\r\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\r\n    hue /= 360;\r\n    saturation /= 100;\r\n    lightness /= 100;\r\n    let red = 0;\r\n    let green = 0;\r\n    let blue = 0;\r\n    if (!saturation) {\r\n        red = green = blue = lightness;\r\n    }\r\n    else {\r\n        const q = lightness < 0.5\r\n            ? lightness * (1 + saturation)\r\n            : lightness + saturation - lightness * saturation;\r\n        const p = 2 * lightness - q;\r\n        red = hueToRgb(p, q, hue + 1 / 3);\r\n        green = hueToRgb(p, q, hue);\r\n        blue = hueToRgb(p, q, hue - 1 / 3);\r\n    }\r\n    return {\r\n        red: Math.round(red * 255),\r\n        green: Math.round(green * 255),\r\n        blue: Math.round(blue * 255),\r\n        alpha,\r\n    };\r\n}\r\n\r\nexport { hslaToRgba };\r\n","function mixImmediate(a, b) {\r\n    return (p) => (p > 0 ? b : a);\r\n}\r\n\r\nexport { mixImmediate };\r\n","/*\r\n  Value in range from progress\r\n\r\n  Given a lower limit and an upper limit, we return the value within\r\n  that range as expressed by progress (usually a number from 0 to 1)\r\n\r\n  So progress = 0.5 would change\r\n\r\n  from -------- to\r\n\r\n  to\r\n\r\n  from ---- to\r\n\r\n  E.g. from = 10, to = 20, progress = 0.5 => 15\r\n\r\n  @param [number]: Lower limit of range\r\n  @param [number]: Upper limit of range\r\n  @param [number]: The progress between lower and upper limits expressed 0-1\r\n  @return [number]: Value as calculated from progress within range (not limited within range)\r\n*/\r\nconst mixNumber = (from, to, progress) => {\r\n    return from + (to - from) * progress;\r\n};\r\n\r\nexport { mixNumber };\r\n","import { hex } from '../../value/types/color/hex.mjs';\r\nimport { hsla } from '../../value/types/color/hsla.mjs';\r\nimport { hslaToRgba } from '../../value/types/color/hsla-to-rgba.mjs';\r\nimport { rgba } from '../../value/types/color/rgba.mjs';\r\nimport { mixImmediate } from './immediate.mjs';\r\nimport { mixNumber } from './number.mjs';\r\nimport { warning } from '../../../../../motion-utils/dist/es/errors.mjs';\r\n\r\n// Linear color space blending\r\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\r\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\r\nconst mixLinearColor = (from, to, v) => {\r\n    const fromExpo = from * from;\r\n    const expo = v * (to * to - fromExpo) + fromExpo;\r\n    return expo < 0 ? 0 : Math.sqrt(expo);\r\n};\r\nconst colorTypes = [hex, rgba, hsla];\r\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\r\nfunction asRGBA(color) {\r\n    const type = getColorType(color);\r\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\r\n    if (!Boolean(type))\r\n        return false;\r\n    let model = type.parse(color);\r\n    if (type === hsla) {\r\n        // TODO Remove this cast - needed since Motion's stricter typing\r\n        model = hslaToRgba(model);\r\n    }\r\n    return model;\r\n}\r\nconst mixColor = (from, to) => {\r\n    const fromRGBA = asRGBA(from);\r\n    const toRGBA = asRGBA(to);\r\n    if (!fromRGBA || !toRGBA) {\r\n        return mixImmediate(from, to);\r\n    }\r\n    const blended = { ...fromRGBA };\r\n    return (v) => {\r\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\r\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\r\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\r\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\r\n        return rgba.transform(blended);\r\n    };\r\n};\r\n\r\nexport { mixColor, mixLinearColor };\r\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\r\n/**\r\n * Returns a function that, when provided a progress value between 0 and 1,\r\n * will return the \"none\" or \"hidden\" string only when the progress is that of\r\n * the origin or target.\r\n */\r\nfunction mixVisibility(origin, target) {\r\n    if (invisibleValues.has(origin)) {\r\n        return (p) => (p <= 0 ? origin : target);\r\n    }\r\n    else {\r\n        return (p) => (p >= 1 ? target : origin);\r\n    }\r\n}\r\n\r\nexport { invisibleValues, mixVisibility };\r\n","/**\r\n * Pipe\r\n * Compose other transformers to run linearily\r\n * pipe(min(20), max(40))\r\n * @param  {...functions} transformers\r\n * @return {function}\r\n */\r\nconst combineFunctions = (a, b) => (v) => b(a(v));\r\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\r\n\r\nexport { pipe };\r\n","import { isCSSVariableToken } from '../../animation/utils/is-css-variable.mjs';\r\nimport { color } from '../../value/types/color/index.mjs';\r\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\r\nimport { mixColor } from './color.mjs';\r\nimport { mixImmediate } from './immediate.mjs';\r\nimport { mixNumber as mixNumber$1 } from './number.mjs';\r\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\r\nimport { pipe } from '../../../../../motion-utils/dist/es/pipe.mjs';\r\nimport { warning } from '../../../../../motion-utils/dist/es/errors.mjs';\r\n\r\nfunction mixNumber(a, b) {\r\n    return (p) => mixNumber$1(a, b, p);\r\n}\r\nfunction getMixer(a) {\r\n    if (typeof a === \"number\") {\r\n        return mixNumber;\r\n    }\r\n    else if (typeof a === \"string\") {\r\n        return isCSSVariableToken(a)\r\n            ? mixImmediate\r\n            : color.test(a)\r\n                ? mixColor\r\n                : mixComplex;\r\n    }\r\n    else if (Array.isArray(a)) {\r\n        return mixArray;\r\n    }\r\n    else if (typeof a === \"object\") {\r\n        return color.test(a) ? mixColor : mixObject;\r\n    }\r\n    return mixImmediate;\r\n}\r\nfunction mixArray(a, b) {\r\n    const output = [...a];\r\n    const numValues = output.length;\r\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\r\n    return (p) => {\r\n        for (let i = 0; i < numValues; i++) {\r\n            output[i] = blendValue[i](p);\r\n        }\r\n        return output;\r\n    };\r\n}\r\nfunction mixObject(a, b) {\r\n    const output = { ...a, ...b };\r\n    const blendValue = {};\r\n    for (const key in output) {\r\n        if (a[key] !== undefined && b[key] !== undefined) {\r\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\r\n        }\r\n    }\r\n    return (v) => {\r\n        for (const key in blendValue) {\r\n            output[key] = blendValue[key](v);\r\n        }\r\n        return output;\r\n    };\r\n}\r\nfunction matchOrder(origin, target) {\r\n    const orderedOrigin = [];\r\n    const pointers = { color: 0, var: 0, number: 0 };\r\n    for (let i = 0; i < target.values.length; i++) {\r\n        const type = target.types[i];\r\n        const originIndex = origin.indexes[type][pointers[type]];\r\n        const originValue = origin.values[originIndex] ?? 0;\r\n        orderedOrigin[i] = originValue;\r\n        pointers[type]++;\r\n    }\r\n    return orderedOrigin;\r\n}\r\nconst mixComplex = (origin, target) => {\r\n    const template = complex.createTransformer(target);\r\n    const originStats = analyseComplexValue(origin);\r\n    const targetStats = analyseComplexValue(target);\r\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\r\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\r\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\r\n    if (canInterpolate) {\r\n        if ((invisibleValues.has(origin) &&\r\n            !targetStats.values.length) ||\r\n            (invisibleValues.has(target) &&\r\n                !originStats.values.length)) {\r\n            return mixVisibility(origin, target);\r\n        }\r\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\r\n    }\r\n    else {\r\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\r\n        return mixImmediate(origin, target);\r\n    }\r\n};\r\n\r\nexport { getMixer, mixArray, mixComplex, mixObject };\r\n","import { getMixer } from './complex.mjs';\r\nimport { mixNumber } from './number.mjs';\r\n\r\nfunction mix(from, to, p) {\r\n    if (typeof from === \"number\" &&\r\n        typeof to === \"number\" &&\r\n        typeof p === \"number\") {\r\n        return mixNumber(from, to, p);\r\n    }\r\n    const mixer = getMixer(from);\r\n    return mixer(from, to);\r\n}\r\n\r\nexport { mix };\r\n","import { time } from '../../frameloop/sync-time.mjs';\r\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\r\n\r\nconst frameloopDriver = (update) => {\r\n    const passTimestamp = ({ timestamp }) => update(timestamp);\r\n    return {\r\n        start: (keepAlive = true) => frame.update(passTimestamp, keepAlive),\r\n        stop: () => cancelFrame(passTimestamp),\r\n        /**\r\n         * If we're processing this frame we can use the\r\n         * framelocked timestamp to keep things in sync.\r\n         */\r\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\r\n    };\r\n};\r\n\r\nexport { frameloopDriver };\r\n","const generateLinearEasing = (easing, duration, // as milliseconds\r\nresolution = 10 // as milliseconds\r\n) => {\r\n    let points = \"\";\r\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\r\n    for (let i = 0; i < numPoints; i++) {\r\n        points += easing(i / (numPoints - 1)) + \", \";\r\n    }\r\n    return `linear(${points.substring(0, points.length - 2)})`;\r\n};\r\n\r\nexport { generateLinearEasing };\r\n","/**\r\n * Implement a practical max duration for keyframe generation\r\n * to prevent infinite loops\r\n */\r\nconst maxGeneratorDuration = 20000;\r\nfunction calcGeneratorDuration(generator) {\r\n    let duration = 0;\r\n    const timeStep = 50;\r\n    let state = generator.next(duration);\r\n    while (!state.done && duration < maxGeneratorDuration) {\r\n        duration += timeStep;\r\n        state = generator.next(duration);\r\n    }\r\n    return duration >= maxGeneratorDuration ? Infinity : duration;\r\n}\r\n\r\nexport { calcGeneratorDuration, maxGeneratorDuration };\r\n","import { calcGeneratorDuration, maxGeneratorDuration } from './calc-duration.mjs';\r\nimport { millisecondsToSeconds } from '../../../../../../motion-utils/dist/es/time-conversion.mjs';\r\n\r\n/**\r\n * Create a progress => progress easing function from a generator.\r\n */\r\nfunction createGeneratorEasing(options, scale = 100, createGenerator) {\r\n    const generator = createGenerator({ ...options, keyframes: [0, scale] });\r\n    const duration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\r\n    return {\r\n        type: \"keyframes\",\r\n        ease: (progress) => {\r\n            return generator.next(duration * progress).value / scale;\r\n        },\r\n        duration: millisecondsToSeconds(duration),\r\n    };\r\n}\r\n\r\nexport { createGeneratorEasing };\r\n","import { velocityPerSecond } from '../../../../../../motion-utils/dist/es/velocity-per-second.mjs';\r\n\r\nconst velocitySampleDuration = 5; // ms\r\nfunction calcGeneratorVelocity(resolveValue, t, current) {\r\n    const prevT = Math.max(t - velocitySampleDuration, 0);\r\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\r\n}\r\n\r\nexport { calcGeneratorVelocity };\r\n","const springDefaults = {\r\n    // Default spring physics\r\n    stiffness: 100,\r\n    damping: 10,\r\n    mass: 1.0,\r\n    velocity: 0.0,\r\n    // Default duration/bounce-based options\r\n    duration: 800, // in ms\r\n    bounce: 0.3,\r\n    visualDuration: 0.3, // in seconds\r\n    // Rest thresholds\r\n    restSpeed: {\r\n        granular: 0.01,\r\n        default: 2,\r\n    },\r\n    restDelta: {\r\n        granular: 0.005,\r\n        default: 0.5,\r\n    },\r\n    // Limits\r\n    minDuration: 0.01, // in seconds\r\n    maxDuration: 10.0, // in seconds\r\n    minDamping: 0.05,\r\n    maxDamping: 1,\r\n};\r\n\r\nexport { springDefaults };\r\n","import { springDefaults } from './defaults.mjs';\r\nimport { warning } from '../../../../../../motion-utils/dist/es/errors.mjs';\r\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../../../../motion-utils/dist/es/time-conversion.mjs';\r\nimport { clamp } from '../../../../../../motion-utils/dist/es/clamp.mjs';\r\n\r\nconst safeMin = 0.001;\r\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\r\n    let envelope;\r\n    let derivative;\r\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\");\r\n    let dampingRatio = 1 - bounce;\r\n    /**\r\n     * Restrict dampingRatio and duration to within acceptable ranges.\r\n     */\r\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\r\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\r\n    if (dampingRatio < 1) {\r\n        /**\r\n         * Underdamped spring\r\n         */\r\n        envelope = (undampedFreq) => {\r\n            const exponentialDecay = undampedFreq * dampingRatio;\r\n            const delta = exponentialDecay * duration;\r\n            const a = exponentialDecay - velocity;\r\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\r\n            const c = Math.exp(-delta);\r\n            return safeMin - (a / b) * c;\r\n        };\r\n        derivative = (undampedFreq) => {\r\n            const exponentialDecay = undampedFreq * dampingRatio;\r\n            const delta = exponentialDecay * duration;\r\n            const d = delta * velocity + velocity;\r\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\r\n            const f = Math.exp(-delta);\r\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\r\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\r\n            return (factor * ((d - e) * f)) / g;\r\n        };\r\n    }\r\n    else {\r\n        /**\r\n         * Critically-damped spring\r\n         */\r\n        envelope = (undampedFreq) => {\r\n            const a = Math.exp(-undampedFreq * duration);\r\n            const b = (undampedFreq - velocity) * duration + 1;\r\n            return -safeMin + a * b;\r\n        };\r\n        derivative = (undampedFreq) => {\r\n            const a = Math.exp(-undampedFreq * duration);\r\n            const b = (velocity - undampedFreq) * (duration * duration);\r\n            return a * b;\r\n        };\r\n    }\r\n    const initialGuess = 5 / duration;\r\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\r\n    duration = secondsToMilliseconds(duration);\r\n    if (isNaN(undampedFreq)) {\r\n        return {\r\n            stiffness: springDefaults.stiffness,\r\n            damping: springDefaults.damping,\r\n            duration,\r\n        };\r\n    }\r\n    else {\r\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\r\n        return {\r\n            stiffness,\r\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\r\n            duration,\r\n        };\r\n    }\r\n}\r\nconst rootIterations = 12;\r\nfunction approximateRoot(envelope, derivative, initialGuess) {\r\n    let result = initialGuess;\r\n    for (let i = 1; i < rootIterations; i++) {\r\n        result = result - envelope(result) / derivative(result);\r\n    }\r\n    return result;\r\n}\r\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\r\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\r\n}\r\n\r\nexport { calcAngularFreq, findSpring };\r\n","import { generateLinearEasing } from '../../waapi/utils/linear.mjs';\r\nimport { calcGeneratorDuration, maxGeneratorDuration } from '../utils/calc-duration.mjs';\r\nimport { createGeneratorEasing } from '../utils/create-generator-easing.mjs';\r\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\r\nimport { springDefaults } from './defaults.mjs';\r\nimport { findSpring, calcAngularFreq } from './find.mjs';\r\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../../../../motion-utils/dist/es/time-conversion.mjs';\r\nimport { clamp } from '../../../../../../motion-utils/dist/es/clamp.mjs';\r\n\r\nconst durationKeys = [\"duration\", \"bounce\"];\r\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\r\nfunction isSpringType(options, keys) {\r\n    return keys.some((key) => options[key] !== undefined);\r\n}\r\nfunction getSpringOptions(options) {\r\n    let springOptions = {\r\n        velocity: springDefaults.velocity,\r\n        stiffness: springDefaults.stiffness,\r\n        damping: springDefaults.damping,\r\n        mass: springDefaults.mass,\r\n        isResolvedFromDuration: false,\r\n        ...options,\r\n    };\r\n    // stiffness/damping/mass overrides duration/bounce\r\n    if (!isSpringType(options, physicsKeys) &&\r\n        isSpringType(options, durationKeys)) {\r\n        if (options.visualDuration) {\r\n            const visualDuration = options.visualDuration;\r\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\r\n            const stiffness = root * root;\r\n            const damping = 2 *\r\n                clamp(0.05, 1, 1 - (options.bounce || 0)) *\r\n                Math.sqrt(stiffness);\r\n            springOptions = {\r\n                ...springOptions,\r\n                mass: springDefaults.mass,\r\n                stiffness,\r\n                damping,\r\n            };\r\n        }\r\n        else {\r\n            const derived = findSpring(options);\r\n            springOptions = {\r\n                ...springOptions,\r\n                ...derived,\r\n                mass: springDefaults.mass,\r\n            };\r\n            springOptions.isResolvedFromDuration = true;\r\n        }\r\n    }\r\n    return springOptions;\r\n}\r\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\r\n    const options = typeof optionsOrVisualDuration !== \"object\"\r\n        ? {\r\n            visualDuration: optionsOrVisualDuration,\r\n            keyframes: [0, 1],\r\n            bounce,\r\n        }\r\n        : optionsOrVisualDuration;\r\n    let { restSpeed, restDelta } = options;\r\n    const origin = options.keyframes[0];\r\n    const target = options.keyframes[options.keyframes.length - 1];\r\n    /**\r\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\r\n     * to reduce GC during animation.\r\n     */\r\n    const state = { done: false, value: origin };\r\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\r\n        ...options,\r\n        velocity: -millisecondsToSeconds(options.velocity || 0),\r\n    });\r\n    const initialVelocity = velocity || 0.0;\r\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\r\n    const initialDelta = target - origin;\r\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\r\n    /**\r\n     * If we're working on a granular scale, use smaller defaults for determining\r\n     * when the spring is finished.\r\n     *\r\n     * These defaults have been selected emprically based on what strikes a good\r\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\r\n     */\r\n    const isGranularScale = Math.abs(initialDelta) < 5;\r\n    restSpeed || (restSpeed = isGranularScale\r\n        ? springDefaults.restSpeed.granular\r\n        : springDefaults.restSpeed.default);\r\n    restDelta || (restDelta = isGranularScale\r\n        ? springDefaults.restDelta.granular\r\n        : springDefaults.restDelta.default);\r\n    let resolveSpring;\r\n    if (dampingRatio < 1) {\r\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\r\n        // Underdamped spring\r\n        resolveSpring = (t) => {\r\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\r\n            return (target -\r\n                envelope *\r\n                    (((initialVelocity +\r\n                        dampingRatio * undampedAngularFreq * initialDelta) /\r\n                        angularFreq) *\r\n                        Math.sin(angularFreq * t) +\r\n                        initialDelta * Math.cos(angularFreq * t)));\r\n        };\r\n    }\r\n    else if (dampingRatio === 1) {\r\n        // Critically damped spring\r\n        resolveSpring = (t) => target -\r\n            Math.exp(-undampedAngularFreq * t) *\r\n                (initialDelta +\r\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\r\n    }\r\n    else {\r\n        // Overdamped spring\r\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\r\n        resolveSpring = (t) => {\r\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\r\n            // When performing sinh or cosh values can hit Infinity so we cap them here\r\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\r\n            return (target -\r\n                (envelope *\r\n                    ((initialVelocity +\r\n                        dampingRatio * undampedAngularFreq * initialDelta) *\r\n                        Math.sinh(freqForT) +\r\n                        dampedAngularFreq *\r\n                            initialDelta *\r\n                            Math.cosh(freqForT))) /\r\n                    dampedAngularFreq);\r\n        };\r\n    }\r\n    const generator = {\r\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\r\n        next: (t) => {\r\n            const current = resolveSpring(t);\r\n            if (!isResolvedFromDuration) {\r\n                let currentVelocity = t === 0 ? initialVelocity : 0.0;\r\n                /**\r\n                 * We only need to calculate velocity for under-damped springs\r\n                 * as over- and critically-damped springs can't overshoot, so\r\n                 * checking only for displacement is enough.\r\n                 */\r\n                if (dampingRatio < 1) {\r\n                    currentVelocity =\r\n                        t === 0\r\n                            ? secondsToMilliseconds(initialVelocity)\r\n                            : calcGeneratorVelocity(resolveSpring, t, current);\r\n                }\r\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\r\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\r\n                state.done =\r\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\r\n            }\r\n            else {\r\n                state.done = t >= duration;\r\n            }\r\n            state.value = state.done ? target : current;\r\n            return state;\r\n        },\r\n        toString: () => {\r\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\r\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\r\n            return calculatedDuration + \"ms \" + easing;\r\n        },\r\n        toTransition: () => { },\r\n    };\r\n    return generator;\r\n}\r\nspring.applyToOptions = (options) => {\r\n    const generatorOptions = createGeneratorEasing(options, 100, spring);\r\n    options.ease = generatorOptions.ease;\r\n    options.duration = secondsToMilliseconds(generatorOptions.duration);\r\n    options.type = \"keyframes\";\r\n    return options;\r\n};\r\n\r\nexport { spring };\r\n","import { spring } from './spring/index.mjs';\r\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\r\n\r\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\r\n    const origin = keyframes[0];\r\n    const state = {\r\n        done: false,\r\n        value: origin,\r\n    };\r\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\r\n    const nearestBoundary = (v) => {\r\n        if (min === undefined)\r\n            return max;\r\n        if (max === undefined)\r\n            return min;\r\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\r\n    };\r\n    let amplitude = power * velocity;\r\n    const ideal = origin + amplitude;\r\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\r\n    /**\r\n     * If the target has changed we need to re-calculate the amplitude, otherwise\r\n     * the animation will start from the wrong position.\r\n     */\r\n    if (target !== ideal)\r\n        amplitude = target - origin;\r\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\r\n    const calcLatest = (t) => target + calcDelta(t);\r\n    const applyFriction = (t) => {\r\n        const delta = calcDelta(t);\r\n        const latest = calcLatest(t);\r\n        state.done = Math.abs(delta) <= restDelta;\r\n        state.value = state.done ? target : latest;\r\n    };\r\n    /**\r\n     * Ideally this would resolve for t in a stateless way, we could\r\n     * do that by always precalculating the animation but as we know\r\n     * this will be done anyway we can assume that spring will\r\n     * be discovered during that.\r\n     */\r\n    let timeReachedBoundary;\r\n    let spring$1;\r\n    const checkCatchBoundary = (t) => {\r\n        if (!isOutOfBounds(state.value))\r\n            return;\r\n        timeReachedBoundary = t;\r\n        spring$1 = spring({\r\n            keyframes: [state.value, nearestBoundary(state.value)],\r\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\r\n            damping: bounceDamping,\r\n            stiffness: bounceStiffness,\r\n            restDelta,\r\n            restSpeed,\r\n        });\r\n    };\r\n    checkCatchBoundary(0);\r\n    return {\r\n        calculatedDuration: null,\r\n        next: (t) => {\r\n            /**\r\n             * We need to resolve the friction to figure out if we need a\r\n             * spring but we don't want to do this twice per frame. So here\r\n             * we flag if we updated for this frame and later if we did\r\n             * we can skip doing it again.\r\n             */\r\n            let hasUpdatedFrame = false;\r\n            if (!spring$1 && timeReachedBoundary === undefined) {\r\n                hasUpdatedFrame = true;\r\n                applyFriction(t);\r\n                checkCatchBoundary(t);\r\n            }\r\n            /**\r\n             * If we have a spring and the provided t is beyond the moment the friction\r\n             * animation crossed the min/max boundary, use the spring.\r\n             */\r\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\r\n                return spring$1.next(t - timeReachedBoundary);\r\n            }\r\n            else {\r\n                !hasUpdatedFrame && applyFriction(t);\r\n                return state;\r\n            }\r\n        },\r\n    };\r\n}\r\n\r\nexport { inertia };\r\n","/*\r\n  Progress within given range\r\n\r\n  Given a lower limit and an upper limit, we return the progress\r\n  (expressed as a number 0-1) represented by the given value, and\r\n  limit that progress to within 0-1.\r\n\r\n  @param [number]: Lower limit\r\n  @param [number]: Upper limit\r\n  @param [number]: Value to find progress within given range\r\n  @return [number]: Progress of value within range as expressed 0-1\r\n*/\r\n/*#__NO_SIDE_EFFECTS__*/\r\nconst progress = (from, to, value) => {\r\n    const toFromDifference = to - from;\r\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\r\n};\r\n\r\nexport { progress };\r\n","import { mix } from './mix/index.mjs';\r\nimport { invariant } from '../../../../motion-utils/dist/es/errors.mjs';\r\nimport { clamp } from '../../../../motion-utils/dist/es/clamp.mjs';\r\nimport { MotionGlobalConfig } from '../../../../motion-utils/dist/es/global-config.mjs';\r\nimport { noop } from '../../../../motion-utils/dist/es/noop.mjs';\r\nimport { pipe } from '../../../../motion-utils/dist/es/pipe.mjs';\r\nimport { progress } from '../../../../motion-utils/dist/es/progress.mjs';\r\n\r\nfunction createMixers(output, ease, customMixer) {\r\n    const mixers = [];\r\n    const mixerFactory = customMixer || MotionGlobalConfig.mix || mix;\r\n    const numMixers = output.length - 1;\r\n    for (let i = 0; i < numMixers; i++) {\r\n        let mixer = mixerFactory(output[i], output[i + 1]);\r\n        if (ease) {\r\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\r\n            mixer = pipe(easingFunction, mixer);\r\n        }\r\n        mixers.push(mixer);\r\n    }\r\n    return mixers;\r\n}\r\n/**\r\n * Create a function that maps from a numerical input array to a generic output array.\r\n *\r\n * Accepts:\r\n *   - Numbers\r\n *   - Colors (hex, hsl, hsla, rgb, rgba)\r\n *   - Complex (combinations of one or more numbers or strings)\r\n *\r\n * ```jsx\r\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\r\n *\r\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\r\n * ```\r\n *\r\n * TODO Revisit this approach once we've moved to data models for values,\r\n * probably not needed to pregenerate mixer functions.\r\n *\r\n * @public\r\n */\r\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\r\n    const inputLength = input.length;\r\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\r\n    /**\r\n     * If we're only provided a single input, we can just make a function\r\n     * that returns the output.\r\n     */\r\n    if (inputLength === 1)\r\n        return () => output[0];\r\n    if (inputLength === 2 && output[0] === output[1])\r\n        return () => output[1];\r\n    const isZeroDeltaRange = input[0] === input[1];\r\n    // If input runs highest -> lowest, reverse both arrays\r\n    if (input[0] > input[inputLength - 1]) {\r\n        input = [...input].reverse();\r\n        output = [...output].reverse();\r\n    }\r\n    const mixers = createMixers(output, ease, mixer);\r\n    const numMixers = mixers.length;\r\n    const interpolator = (v) => {\r\n        if (isZeroDeltaRange && v < input[0])\r\n            return output[0];\r\n        let i = 0;\r\n        if (numMixers > 1) {\r\n            for (; i < input.length - 2; i++) {\r\n                if (v < input[i + 1])\r\n                    break;\r\n            }\r\n        }\r\n        const progressInRange = progress(input[i], input[i + 1], v);\r\n        return mixers[i](progressInRange);\r\n    };\r\n    return isClamp\r\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\r\n        : interpolator;\r\n}\r\n\r\nexport { interpolate };\r\n","import { mixNumber } from '../../../utils/mix/number.mjs';\r\nimport { progress } from '../../../../../../motion-utils/dist/es/progress.mjs';\r\n\r\nfunction fillOffset(offset, remaining) {\r\n    const min = offset[offset.length - 1];\r\n    for (let i = 1; i <= remaining; i++) {\r\n        const offsetProgress = progress(0, remaining, i);\r\n        offset.push(mixNumber(min, 1, offsetProgress));\r\n    }\r\n}\r\n\r\nexport { fillOffset };\r\n","import { fillOffset } from './fill.mjs';\r\n\r\nfunction defaultOffset(arr) {\r\n    const offset = [0];\r\n    fillOffset(offset, arr.length - 1);\r\n    return offset;\r\n}\r\n\r\nexport { defaultOffset };\r\n","function convertOffsetToTimes(offset, duration) {\r\n    return offset.map((o) => o * duration);\r\n}\r\n\r\nexport { convertOffsetToTimes };\r\n","import { noop } from '../noop.mjs';\r\n\r\n/*\r\n  Bezier function generator\r\n  This has been modified from Gaëtan Renaudeau's BezierEasing\r\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\r\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\r\n  \r\n  I've removed the newtonRaphsonIterate algo because in benchmarking it\r\n  wasn't noticiably faster than binarySubdivision, indeed removing it\r\n  usually improved times, depending on the curve.\r\n  I also removed the lookup table, as for the added bundle size and loop we're\r\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\r\n  to 12 to compensate and this still tended to be faster for no perceivable\r\n  loss in accuracy.\r\n  Usage\r\n    const easeOut = cubicBezier(.17,.67,.83,.67);\r\n    const x = easeOut(0.5); // returns 0.627...\r\n*/\r\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\r\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\r\n    t;\r\nconst subdivisionPrecision = 0.0000001;\r\nconst subdivisionMaxIterations = 12;\r\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\r\n    let currentX;\r\n    let currentT;\r\n    let i = 0;\r\n    do {\r\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\r\n        currentX = calcBezier(currentT, mX1, mX2) - x;\r\n        if (currentX > 0.0) {\r\n            upperBound = currentT;\r\n        }\r\n        else {\r\n            lowerBound = currentT;\r\n        }\r\n    } while (Math.abs(currentX) > subdivisionPrecision &&\r\n        ++i < subdivisionMaxIterations);\r\n    return currentT;\r\n}\r\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\r\n    // If this is a linear gradient, return linear easing\r\n    if (mX1 === mY1 && mX2 === mY2)\r\n        return noop;\r\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\r\n    // If animation is at start/end, return t without easing\r\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\r\n}\r\n\r\nexport { cubicBezier };\r\n","import { cubicBezier } from './cubic-bezier.mjs';\r\n\r\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\r\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\r\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\r\n\r\nexport { easeIn, easeInOut, easeOut };\r\n","const isEasingArray = (ease) => {\r\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\r\n};\r\n\r\nexport { isEasingArray };\r\n","// Accepts an easing function and returns a new one that outputs mirrored values for\r\n// the second half of the animation. Turns easeIn into easeInOut.\r\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\r\n\r\nexport { mirrorEasing };\r\n","// Accepts an easing function and returns a new one that outputs reversed values.\r\n// Turns easeIn into easeOut.\r\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\r\n\r\nexport { reverseEasing };\r\n","import { cubicBezier } from './cubic-bezier.mjs';\r\nimport { mirrorEasing } from './modifiers/mirror.mjs';\r\nimport { reverseEasing } from './modifiers/reverse.mjs';\r\n\r\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\r\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\r\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\r\n\r\nexport { backIn, backInOut, backOut };\r\n","import { backIn } from './back.mjs';\r\n\r\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\r\n\r\nexport { anticipate };\r\n","import { mirrorEasing } from './modifiers/mirror.mjs';\r\nimport { reverseEasing } from './modifiers/reverse.mjs';\r\n\r\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\r\nconst circOut = reverseEasing(circIn);\r\nconst circInOut = mirrorEasing(circIn);\r\n\r\nexport { circIn, circInOut, circOut };\r\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\r\n\r\nexport { isBezierDefinition };\r\n","import { invariant } from '../../errors.mjs';\r\nimport { noop } from '../../noop.mjs';\r\nimport { anticipate } from '../anticipate.mjs';\r\nimport { backIn, backInOut, backOut } from '../back.mjs';\r\nimport { circIn, circInOut, circOut } from '../circ.mjs';\r\nimport { cubicBezier } from '../cubic-bezier.mjs';\r\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\r\nimport { isBezierDefinition } from './is-bezier-definition.mjs';\r\n\r\nconst easingLookup = {\r\n    linear: noop,\r\n    easeIn,\r\n    easeInOut,\r\n    easeOut,\r\n    circIn,\r\n    circInOut,\r\n    circOut,\r\n    backIn,\r\n    backInOut,\r\n    backOut,\r\n    anticipate,\r\n};\r\nconst isValidEasing = (easing) => {\r\n    return typeof easing === \"string\";\r\n};\r\nconst easingDefinitionToFunction = (definition) => {\r\n    if (isBezierDefinition(definition)) {\r\n        // If cubic bezier definition, create bezier curve\r\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\r\n        const [x1, y1, x2, y2] = definition;\r\n        return cubicBezier(x1, y1, x2, y2);\r\n    }\r\n    else if (isValidEasing(definition)) {\r\n        // Else lookup from table\r\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\r\n        return easingLookup[definition];\r\n    }\r\n    return definition;\r\n};\r\n\r\nexport { easingDefinitionToFunction };\r\n","import { interpolate } from '../../utils/interpolate.mjs';\r\nimport { defaultOffset } from '../keyframes/offsets/default.mjs';\r\nimport { convertOffsetToTimes } from '../keyframes/offsets/time.mjs';\r\nimport { easeInOut } from '../../../../../motion-utils/dist/es/easing/ease.mjs';\r\nimport { isEasingArray } from '../../../../../motion-utils/dist/es/easing/utils/is-easing-array.mjs';\r\nimport { easingDefinitionToFunction } from '../../../../../motion-utils/dist/es/easing/utils/map.mjs';\r\n\r\nfunction defaultEasing(values, easing) {\r\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\r\n}\r\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\r\n    /**\r\n     * Easing functions can be externally defined as strings. Here we convert them\r\n     * into actual functions.\r\n     */\r\n    const easingFunctions = isEasingArray(ease)\r\n        ? ease.map(easingDefinitionToFunction)\r\n        : easingDefinitionToFunction(ease);\r\n    /**\r\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\r\n     * to reduce GC during animation.\r\n     */\r\n    const state = {\r\n        done: false,\r\n        value: keyframeValues[0],\r\n    };\r\n    /**\r\n     * Create a times array based on the provided 0-1 offsets\r\n     */\r\n    const absoluteTimes = convertOffsetToTimes(\r\n    // Only use the provided offsets if they're the correct length\r\n    // TODO Maybe we should warn here if there's a length mismatch\r\n    times && times.length === keyframeValues.length\r\n        ? times\r\n        : defaultOffset(keyframeValues), duration);\r\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\r\n        ease: Array.isArray(easingFunctions)\r\n            ? easingFunctions\r\n            : defaultEasing(keyframeValues, easingFunctions),\r\n    });\r\n    return {\r\n        calculatedDuration: duration,\r\n        next: (t) => {\r\n            state.value = mapTimeToKeyframe(t);\r\n            state.done = t >= duration;\r\n            return state;\r\n        },\r\n    };\r\n}\r\n\r\nexport { defaultEasing, keyframes };\r\n","const isNotNull = (value) => value !== null;\r\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe, speed = 1) {\r\n    const resolvedKeyframes = keyframes.filter(isNotNull);\r\n    const useFirstKeyframe = speed < 0 || (repeat && repeatType !== \"loop\" && repeat % 2 === 1);\r\n    const index = useFirstKeyframe ? 0 : resolvedKeyframes.length - 1;\r\n    return !index || finalKeyframe === undefined\r\n        ? resolvedKeyframes[index]\r\n        : finalKeyframe;\r\n}\r\n\r\nexport { getFinalKeyframe };\r\n","import { inertia } from '../generators/inertia.mjs';\r\nimport { keyframes } from '../generators/keyframes.mjs';\r\nimport { spring } from '../generators/spring/index.mjs';\r\n\r\nconst transitionTypeMap = {\r\n    decay: inertia,\r\n    inertia,\r\n    tween: keyframes,\r\n    keyframes: keyframes,\r\n    spring,\r\n};\r\nfunction replaceTransitionType(transition) {\r\n    if (typeof transition.type === \"string\") {\r\n        transition.type = transitionTypeMap[transition.type];\r\n    }\r\n}\r\n\r\nexport { replaceTransitionType };\r\n","class WithPromise {\r\n    constructor() {\r\n        this.updateFinished();\r\n    }\r\n    get finished() {\r\n        return this._finished;\r\n    }\r\n    updateFinished() {\r\n        this._finished = new Promise((resolve) => {\r\n            this.resolve = resolve;\r\n        });\r\n    }\r\n    notifyFinished() {\r\n        this.resolve();\r\n    }\r\n    /**\r\n     * Allows the animation to be awaited.\r\n     *\r\n     * @deprecated Use `finished` instead.\r\n     */\r\n    then(onResolve, onReject) {\r\n        return this.finished.then(onResolve, onReject);\r\n    }\r\n}\r\n\r\nexport { WithPromise };\r\n","import { time } from '../frameloop/sync-time.mjs';\r\nimport { activeAnimations } from '../stats/animation-count.mjs';\r\nimport { mix } from '../utils/mix/index.mjs';\r\nimport { frameloopDriver } from './drivers/frame.mjs';\r\nimport { inertia } from './generators/inertia.mjs';\r\nimport { keyframes } from './generators/keyframes.mjs';\r\nimport { calcGeneratorDuration } from './generators/utils/calc-duration.mjs';\r\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\r\nimport { replaceTransitionType } from './utils/replace-transition-type.mjs';\r\nimport { WithPromise } from './utils/WithPromise.mjs';\r\nimport { invariant } from '../../../../motion-utils/dist/es/errors.mjs';\r\nimport { pipe } from '../../../../motion-utils/dist/es/pipe.mjs';\r\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../../motion-utils/dist/es/time-conversion.mjs';\r\nimport { clamp } from '../../../../motion-utils/dist/es/clamp.mjs';\r\n\r\nconst percentToProgress = (percent) => percent / 100;\r\nclass JSAnimation extends WithPromise {\r\n    constructor(options) {\r\n        super();\r\n        this.state = \"idle\";\r\n        this.startTime = null;\r\n        this.isStopped = false;\r\n        /**\r\n         * The current time of the animation.\r\n         */\r\n        this.currentTime = 0;\r\n        /**\r\n         * The time at which the animation was paused.\r\n         */\r\n        this.holdTime = null;\r\n        /**\r\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\r\n         */\r\n        this.playbackSpeed = 1;\r\n        /**\r\n         * This method is bound to the instance to fix a pattern where\r\n         * animation.stop is returned as a reference from a useEffect.\r\n         */\r\n        this.stop = () => {\r\n            const { motionValue } = this.options;\r\n            if (motionValue && motionValue.updatedAt !== time.now()) {\r\n                this.tick(time.now());\r\n            }\r\n            this.isStopped = true;\r\n            if (this.state === \"idle\")\r\n                return;\r\n            this.teardown();\r\n            this.options.onStop?.();\r\n        };\r\n        activeAnimations.mainThread++;\r\n        this.options = options;\r\n        this.initAnimation();\r\n        this.play();\r\n        if (options.autoplay === false)\r\n            this.pause();\r\n    }\r\n    initAnimation() {\r\n        const { options } = this;\r\n        replaceTransitionType(options);\r\n        const { type = keyframes, repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = options;\r\n        let { keyframes: keyframes$1 } = options;\r\n        const generatorFactory = type || keyframes;\r\n        if (process.env.NODE_ENV !== \"production\" &&\r\n            generatorFactory !== keyframes) {\r\n            invariant(keyframes$1.length <= 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\r\n        }\r\n        if (generatorFactory !== keyframes &&\r\n            typeof keyframes$1[0] !== \"number\") {\r\n            this.mixKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\r\n            keyframes$1 = [0, 100];\r\n        }\r\n        const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\r\n        /**\r\n         * If we have a mirror repeat type we need to create a second generator that outputs the\r\n         * mirrored (not reversed) animation and later ping pong between the two generators.\r\n         */\r\n        if (repeatType === \"mirror\") {\r\n            this.mirroredGenerator = generatorFactory({\r\n                ...options,\r\n                keyframes: [...keyframes$1].reverse(),\r\n                velocity: -velocity,\r\n            });\r\n        }\r\n        /**\r\n         * If duration is undefined and we have repeat options,\r\n         * we need to calculate a duration from the generator.\r\n         *\r\n         * We set it to the generator itself to cache the duration.\r\n         * Any timeline resolver will need to have already precalculated\r\n         * the duration by this step.\r\n         */\r\n        if (generator.calculatedDuration === null) {\r\n            generator.calculatedDuration = calcGeneratorDuration(generator);\r\n        }\r\n        const { calculatedDuration } = generator;\r\n        this.calculatedDuration = calculatedDuration;\r\n        this.resolvedDuration = calculatedDuration + repeatDelay;\r\n        this.totalDuration = this.resolvedDuration * (repeat + 1) - repeatDelay;\r\n        this.generator = generator;\r\n    }\r\n    updateTime(timestamp) {\r\n        const animationTime = Math.round(timestamp - this.startTime) * this.playbackSpeed;\r\n        // Update currentTime\r\n        if (this.holdTime !== null) {\r\n            this.currentTime = this.holdTime;\r\n        }\r\n        else {\r\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\r\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\r\n            // example.\r\n            this.currentTime = animationTime;\r\n        }\r\n    }\r\n    tick(timestamp, sample = false) {\r\n        const { generator, totalDuration, mixKeyframes, mirroredGenerator, resolvedDuration, calculatedDuration, } = this;\r\n        if (this.startTime === null)\r\n            return generator.next(0);\r\n        const { delay = 0, keyframes, repeat, repeatType, repeatDelay, type, onUpdate, finalKeyframe, } = this.options;\r\n        /**\r\n         * requestAnimationFrame timestamps can come through as lower than\r\n         * the startTime as set by performance.now(). Here we prevent this,\r\n         * though in the future it could be possible to make setting startTime\r\n         * a pending operation that gets resolved here.\r\n         */\r\n        if (this.speed > 0) {\r\n            this.startTime = Math.min(this.startTime, timestamp);\r\n        }\r\n        else if (this.speed < 0) {\r\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\r\n        }\r\n        if (sample) {\r\n            this.currentTime = timestamp;\r\n        }\r\n        else {\r\n            this.updateTime(timestamp);\r\n        }\r\n        // Rebase on delay\r\n        const timeWithoutDelay = this.currentTime - delay * (this.playbackSpeed >= 0 ? 1 : -1);\r\n        const isInDelayPhase = this.playbackSpeed >= 0\r\n            ? timeWithoutDelay < 0\r\n            : timeWithoutDelay > totalDuration;\r\n        this.currentTime = Math.max(timeWithoutDelay, 0);\r\n        // If this animation has finished, set the current time  to the total duration.\r\n        if (this.state === \"finished\" && this.holdTime === null) {\r\n            this.currentTime = totalDuration;\r\n        }\r\n        let elapsed = this.currentTime;\r\n        let frameGenerator = generator;\r\n        if (repeat) {\r\n            /**\r\n             * Get the current progress (0-1) of the animation. If t is >\r\n             * than duration we'll get values like 2.5 (midway through the\r\n             * third iteration)\r\n             */\r\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\r\n            /**\r\n             * Get the current iteration (0 indexed). For instance the floor of\r\n             * 2.5 is 2.\r\n             */\r\n            let currentIteration = Math.floor(progress);\r\n            /**\r\n             * Get the current progress of the iteration by taking the remainder\r\n             * so 2.5 is 0.5 through iteration 2\r\n             */\r\n            let iterationProgress = progress % 1.0;\r\n            /**\r\n             * If iteration progress is 1 we count that as the end\r\n             * of the previous iteration.\r\n             */\r\n            if (!iterationProgress && progress >= 1) {\r\n                iterationProgress = 1;\r\n            }\r\n            iterationProgress === 1 && currentIteration--;\r\n            currentIteration = Math.min(currentIteration, repeat + 1);\r\n            /**\r\n             * Reverse progress if we're not running in \"normal\" direction\r\n             */\r\n            const isOddIteration = Boolean(currentIteration % 2);\r\n            if (isOddIteration) {\r\n                if (repeatType === \"reverse\") {\r\n                    iterationProgress = 1 - iterationProgress;\r\n                    if (repeatDelay) {\r\n                        iterationProgress -= repeatDelay / resolvedDuration;\r\n                    }\r\n                }\r\n                else if (repeatType === \"mirror\") {\r\n                    frameGenerator = mirroredGenerator;\r\n                }\r\n            }\r\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\r\n        }\r\n        /**\r\n         * If we're in negative time, set state as the initial keyframe.\r\n         * This prevents delay: x, duration: 0 animations from finishing\r\n         * instantly.\r\n         */\r\n        const state = isInDelayPhase\r\n            ? { done: false, value: keyframes[0] }\r\n            : frameGenerator.next(elapsed);\r\n        if (mixKeyframes) {\r\n            state.value = mixKeyframes(state.value);\r\n        }\r\n        let { done } = state;\r\n        if (!isInDelayPhase && calculatedDuration !== null) {\r\n            done =\r\n                this.playbackSpeed >= 0\r\n                    ? this.currentTime >= totalDuration\r\n                    : this.currentTime <= 0;\r\n        }\r\n        const isAnimationFinished = this.holdTime === null &&\r\n            (this.state === \"finished\" || (this.state === \"running\" && done));\r\n        // TODO: The exception for inertia could be cleaner here\r\n        if (isAnimationFinished && type !== inertia) {\r\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe, this.speed);\r\n        }\r\n        if (onUpdate) {\r\n            onUpdate(state.value);\r\n        }\r\n        if (isAnimationFinished) {\r\n            this.finish();\r\n        }\r\n        return state;\r\n    }\r\n    /**\r\n     * Allows the returned animation to be awaited or promise-chained. Currently\r\n     * resolves when the animation finishes at all but in a future update could/should\r\n     * reject if its cancels.\r\n     */\r\n    then(resolve, reject) {\r\n        return this.finished.then(resolve, reject);\r\n    }\r\n    get duration() {\r\n        return millisecondsToSeconds(this.calculatedDuration);\r\n    }\r\n    get time() {\r\n        return millisecondsToSeconds(this.currentTime);\r\n    }\r\n    set time(newTime) {\r\n        newTime = secondsToMilliseconds(newTime);\r\n        this.currentTime = newTime;\r\n        if (this.startTime === null ||\r\n            this.holdTime !== null ||\r\n            this.playbackSpeed === 0) {\r\n            this.holdTime = newTime;\r\n        }\r\n        else if (this.driver) {\r\n            this.startTime = this.driver.now() - newTime / this.playbackSpeed;\r\n        }\r\n        this.driver?.start(false);\r\n    }\r\n    get speed() {\r\n        return this.playbackSpeed;\r\n    }\r\n    set speed(newSpeed) {\r\n        this.updateTime(time.now());\r\n        const hasChanged = this.playbackSpeed !== newSpeed;\r\n        this.playbackSpeed = newSpeed;\r\n        if (hasChanged) {\r\n            this.time = millisecondsToSeconds(this.currentTime);\r\n        }\r\n    }\r\n    play() {\r\n        if (this.isStopped)\r\n            return;\r\n        const { driver = frameloopDriver, startTime } = this.options;\r\n        if (!this.driver) {\r\n            this.driver = driver((timestamp) => this.tick(timestamp));\r\n        }\r\n        this.options.onPlay?.();\r\n        const now = this.driver.now();\r\n        if (this.state === \"finished\") {\r\n            this.updateFinished();\r\n            this.startTime = now;\r\n        }\r\n        else if (this.holdTime !== null) {\r\n            this.startTime = now - this.holdTime;\r\n        }\r\n        else if (!this.startTime) {\r\n            this.startTime = startTime ?? now;\r\n        }\r\n        if (this.state === \"finished\" && this.speed < 0) {\r\n            this.startTime += this.calculatedDuration;\r\n        }\r\n        this.holdTime = null;\r\n        /**\r\n         * Set playState to running only after we've used it in\r\n         * the previous logic.\r\n         */\r\n        this.state = \"running\";\r\n        this.driver.start();\r\n    }\r\n    pause() {\r\n        this.state = \"paused\";\r\n        this.updateTime(time.now());\r\n        this.holdTime = this.currentTime;\r\n    }\r\n    complete() {\r\n        if (this.state !== \"running\") {\r\n            this.play();\r\n        }\r\n        this.state = \"finished\";\r\n        this.holdTime = null;\r\n    }\r\n    finish() {\r\n        this.notifyFinished();\r\n        this.teardown();\r\n        this.state = \"finished\";\r\n        this.options.onComplete?.();\r\n    }\r\n    cancel() {\r\n        this.holdTime = null;\r\n        this.startTime = 0;\r\n        this.tick(0);\r\n        this.teardown();\r\n        this.options.onCancel?.();\r\n    }\r\n    teardown() {\r\n        this.state = \"idle\";\r\n        this.stopDriver();\r\n        this.startTime = this.holdTime = null;\r\n        activeAnimations.mainThread--;\r\n    }\r\n    stopDriver() {\r\n        if (!this.driver)\r\n            return;\r\n        this.driver.stop();\r\n        this.driver = undefined;\r\n    }\r\n    sample(sampleTime) {\r\n        this.startTime = 0;\r\n        return this.tick(sampleTime, true);\r\n    }\r\n    attachTimeline(timeline) {\r\n        if (this.options.allowFlatten) {\r\n            this.options.type = \"keyframes\";\r\n            this.options.ease = \"linear\";\r\n            this.initAnimation();\r\n        }\r\n        this.driver?.stop();\r\n        return timeline.observe(this);\r\n    }\r\n}\r\n// Legacy function support\r\nfunction animateValue(options) {\r\n    return new JSAnimation(options);\r\n}\r\n\r\nexport { JSAnimation, animateValue };\r\n","function fillWildcards(keyframes) {\r\n    for (let i = 1; i < keyframes.length; i++) {\r\n        keyframes[i] ?? (keyframes[i] = keyframes[i - 1]);\r\n    }\r\n}\r\n\r\nexport { fillWildcards };\r\n","const radToDeg = (rad) => (rad * 180) / Math.PI;\r\nconst rotate = (v) => {\r\n    const angle = radToDeg(Math.atan2(v[1], v[0]));\r\n    return rebaseAngle(angle);\r\n};\r\nconst matrix2dParsers = {\r\n    x: 4,\r\n    y: 5,\r\n    translateX: 4,\r\n    translateY: 5,\r\n    scaleX: 0,\r\n    scaleY: 3,\r\n    scale: (v) => (Math.abs(v[0]) + Math.abs(v[3])) / 2,\r\n    rotate,\r\n    rotateZ: rotate,\r\n    skewX: (v) => radToDeg(Math.atan(v[1])),\r\n    skewY: (v) => radToDeg(Math.atan(v[2])),\r\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[2])) / 2,\r\n};\r\nconst rebaseAngle = (angle) => {\r\n    angle = angle % 360;\r\n    if (angle < 0)\r\n        angle += 360;\r\n    return angle;\r\n};\r\nconst rotateZ = rotate;\r\nconst scaleX = (v) => Math.sqrt(v[0] * v[0] + v[1] * v[1]);\r\nconst scaleY = (v) => Math.sqrt(v[4] * v[4] + v[5] * v[5]);\r\nconst matrix3dParsers = {\r\n    x: 12,\r\n    y: 13,\r\n    z: 14,\r\n    translateX: 12,\r\n    translateY: 13,\r\n    translateZ: 14,\r\n    scaleX,\r\n    scaleY,\r\n    scale: (v) => (scaleX(v) + scaleY(v)) / 2,\r\n    rotateX: (v) => rebaseAngle(radToDeg(Math.atan2(v[6], v[5]))),\r\n    rotateY: (v) => rebaseAngle(radToDeg(Math.atan2(-v[2], v[0]))),\r\n    rotateZ,\r\n    rotate: rotateZ,\r\n    skewX: (v) => radToDeg(Math.atan(v[4])),\r\n    skewY: (v) => radToDeg(Math.atan(v[1])),\r\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[4])) / 2,\r\n};\r\nfunction defaultTransformValue(name) {\r\n    return name.includes(\"scale\") ? 1 : 0;\r\n}\r\nfunction parseValueFromTransform(transform, name) {\r\n    if (!transform || transform === \"none\") {\r\n        return defaultTransformValue(name);\r\n    }\r\n    const matrix3dMatch = transform.match(/^matrix3d\\(([-\\d.e\\s,]+)\\)$/u);\r\n    let parsers;\r\n    let match;\r\n    if (matrix3dMatch) {\r\n        parsers = matrix3dParsers;\r\n        match = matrix3dMatch;\r\n    }\r\n    else {\r\n        const matrix2dMatch = transform.match(/^matrix\\(([-\\d.e\\s,]+)\\)$/u);\r\n        parsers = matrix2dParsers;\r\n        match = matrix2dMatch;\r\n    }\r\n    if (!match) {\r\n        return defaultTransformValue(name);\r\n    }\r\n    const valueParser = parsers[name];\r\n    const values = match[1].split(\",\").map(convertTransformToNumber);\r\n    return typeof valueParser === \"function\"\r\n        ? valueParser(values)\r\n        : values[valueParser];\r\n}\r\nconst readTransformValue = (instance, name) => {\r\n    const { transform = \"none\" } = getComputedStyle(instance);\r\n    return parseValueFromTransform(transform, name);\r\n};\r\nfunction convertTransformToNumber(value) {\r\n    return parseFloat(value.trim());\r\n}\r\n\r\nexport { defaultTransformValue, parseValueFromTransform, readTransformValue };\r\n","import { parseValueFromTransform } from '../../../render/dom/parse-transform.mjs';\r\nimport { transformPropOrder } from '../../../render/utils/keys-transform.mjs';\r\nimport { number } from '../../../value/types/numbers/index.mjs';\r\nimport { px } from '../../../value/types/numbers/units.mjs';\r\n\r\nconst isNumOrPxType = (v) => v === number || v === px;\r\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\r\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\r\nfunction removeNonTranslationalTransform(visualElement) {\r\n    const removedTransforms = [];\r\n    nonTranslationalTransformKeys.forEach((key) => {\r\n        const value = visualElement.getValue(key);\r\n        if (value !== undefined) {\r\n            removedTransforms.push([key, value.get()]);\r\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\r\n        }\r\n    });\r\n    return removedTransforms;\r\n}\r\nconst positionalValues = {\r\n    // Dimensions\r\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\r\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\r\n    top: (_bbox, { top }) => parseFloat(top),\r\n    left: (_bbox, { left }) => parseFloat(left),\r\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\r\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\r\n    // Transform\r\n    x: (_bbox, { transform }) => parseValueFromTransform(transform, \"x\"),\r\n    y: (_bbox, { transform }) => parseValueFromTransform(transform, \"y\"),\r\n};\r\n// Alias translate longform names\r\npositionalValues.translateX = positionalValues.x;\r\npositionalValues.translateY = positionalValues.y;\r\n\r\nexport { isNumOrPxType, positionalValues, removeNonTranslationalTransform };\r\n","import { fillWildcards } from './utils/fill-wildcards.mjs';\r\nimport { removeNonTranslationalTransform } from './utils/unit-conversion.mjs';\r\nimport { frame } from '../../frameloop/frame.mjs';\r\n\r\nconst toResolve = new Set();\r\nlet isScheduled = false;\r\nlet anyNeedsMeasurement = false;\r\nlet isForced = false;\r\nfunction measureAllKeyframes() {\r\n    if (anyNeedsMeasurement) {\r\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\r\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\r\n        const transformsToRestore = new Map();\r\n        /**\r\n         * Write pass\r\n         * If we're measuring elements we want to remove bounding box-changing transforms.\r\n         */\r\n        elementsToMeasure.forEach((element) => {\r\n            const removedTransforms = removeNonTranslationalTransform(element);\r\n            if (!removedTransforms.length)\r\n                return;\r\n            transformsToRestore.set(element, removedTransforms);\r\n            element.render();\r\n        });\r\n        // Read\r\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\r\n        // Write\r\n        elementsToMeasure.forEach((element) => {\r\n            element.render();\r\n            const restore = transformsToRestore.get(element);\r\n            if (restore) {\r\n                restore.forEach(([key, value]) => {\r\n                    element.getValue(key)?.set(value);\r\n                });\r\n            }\r\n        });\r\n        // Read\r\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\r\n        // Write\r\n        resolversToMeasure.forEach((resolver) => {\r\n            if (resolver.suspendedScrollY !== undefined) {\r\n                window.scrollTo(0, resolver.suspendedScrollY);\r\n            }\r\n        });\r\n    }\r\n    anyNeedsMeasurement = false;\r\n    isScheduled = false;\r\n    toResolve.forEach((resolver) => resolver.complete(isForced));\r\n    toResolve.clear();\r\n}\r\nfunction readAllKeyframes() {\r\n    toResolve.forEach((resolver) => {\r\n        resolver.readKeyframes();\r\n        if (resolver.needsMeasurement) {\r\n            anyNeedsMeasurement = true;\r\n        }\r\n    });\r\n}\r\nfunction flushKeyframeResolvers() {\r\n    isForced = true;\r\n    readAllKeyframes();\r\n    measureAllKeyframes();\r\n    isForced = false;\r\n}\r\nclass KeyframeResolver {\r\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\r\n        this.state = \"pending\";\r\n        /**\r\n         * Track whether this resolver is async. If it is, it'll be added to the\r\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\r\n         * to trigger read/write thrashing don't need to be async.\r\n         */\r\n        this.isAsync = false;\r\n        /**\r\n         * Track whether this resolver needs to perform a measurement\r\n         * to resolve its keyframes.\r\n         */\r\n        this.needsMeasurement = false;\r\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\r\n        this.onComplete = onComplete;\r\n        this.name = name;\r\n        this.motionValue = motionValue;\r\n        this.element = element;\r\n        this.isAsync = isAsync;\r\n    }\r\n    scheduleResolve() {\r\n        this.state = \"scheduled\";\r\n        if (this.isAsync) {\r\n            toResolve.add(this);\r\n            if (!isScheduled) {\r\n                isScheduled = true;\r\n                frame.read(readAllKeyframes);\r\n                frame.resolveKeyframes(measureAllKeyframes);\r\n            }\r\n        }\r\n        else {\r\n            this.readKeyframes();\r\n            this.complete();\r\n        }\r\n    }\r\n    readKeyframes() {\r\n        const { unresolvedKeyframes, name, element, motionValue } = this;\r\n        // If initial keyframe is null we need to read it from the DOM\r\n        if (unresolvedKeyframes[0] === null) {\r\n            const currentValue = motionValue?.get();\r\n            // TODO: This doesn't work if the final keyframe is a wildcard\r\n            const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\r\n            if (currentValue !== undefined) {\r\n                unresolvedKeyframes[0] = currentValue;\r\n            }\r\n            else if (element && name) {\r\n                const valueAsRead = element.readValue(name, finalKeyframe);\r\n                if (valueAsRead !== undefined && valueAsRead !== null) {\r\n                    unresolvedKeyframes[0] = valueAsRead;\r\n                }\r\n            }\r\n            if (unresolvedKeyframes[0] === undefined) {\r\n                unresolvedKeyframes[0] = finalKeyframe;\r\n            }\r\n            if (motionValue && currentValue === undefined) {\r\n                motionValue.set(unresolvedKeyframes[0]);\r\n            }\r\n        }\r\n        fillWildcards(unresolvedKeyframes);\r\n    }\r\n    setFinalKeyframe() { }\r\n    measureInitialState() { }\r\n    renderEndStyles() { }\r\n    measureEndState() { }\r\n    complete(isForcedComplete = false) {\r\n        this.state = \"complete\";\r\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe, isForcedComplete);\r\n        toResolve.delete(this);\r\n    }\r\n    cancel() {\r\n        if (this.state === \"scheduled\") {\r\n            toResolve.delete(this);\r\n            this.state = \"pending\";\r\n        }\r\n    }\r\n    resume() {\r\n        if (this.state === \"pending\")\r\n            this.scheduleResolve();\r\n    }\r\n}\r\n\r\nexport { KeyframeResolver, flushKeyframeResolvers };\r\n","const isCSSVar = (name) => name.startsWith(\"--\");\r\n\r\nexport { isCSSVar };\r\n","import { isCSSVar } from './is-css-var.mjs';\r\n\r\nfunction setStyle(element, name, value) {\r\n    isCSSVar(name)\r\n        ? element.style.setProperty(name, value)\r\n        : (element.style[name] = value);\r\n}\r\n\r\nexport { setStyle };\r\n","/*#__NO_SIDE_EFFECTS__*/\r\nfunction memo(callback) {\r\n    let result;\r\n    return () => {\r\n        if (result === undefined)\r\n            result = callback();\r\n        return result;\r\n    };\r\n}\r\n\r\nexport { memo };\r\n","import { memo } from '../../../../../motion-utils/dist/es/memo.mjs';\r\n\r\nconst supportsScrollTimeline = /* @__PURE__ */ memo(() => window.ScrollTimeline !== undefined);\r\n\r\nexport { supportsScrollTimeline };\r\n","/**\r\n * Add the ability for test suites to manually set support flags\r\n * to better test more environments.\r\n */\r\nconst supportsFlags = {};\r\n\r\nexport { supportsFlags };\r\n","import { supportsFlags } from './flags.mjs';\r\nimport { memo } from '../../../../../motion-utils/dist/es/memo.mjs';\r\n\r\nfunction memoSupports(callback, supportsFlag) {\r\n    const memoized = memo(callback);\r\n    return () => supportsFlags[supportsFlag] ?? memoized();\r\n}\r\n\r\nexport { memoSupports };\r\n","import { memoSupports } from './memo.mjs';\r\n\r\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\r\n    try {\r\n        document\r\n            .createElement(\"div\")\r\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\r\n    }\r\n    catch (e) {\r\n        return false;\r\n    }\r\n    return true;\r\n}, \"linearEasing\");\r\n\r\nexport { supportsLinearEasing };\r\n","const cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\r\n\r\nexport { cubicBezierAsString };\r\n","import { cubicBezierAsString } from './cubic-bezier.mjs';\r\n\r\nconst supportedWaapiEasing = {\r\n    linear: \"linear\",\r\n    ease: \"ease\",\r\n    easeIn: \"ease-in\",\r\n    easeOut: \"ease-out\",\r\n    easeInOut: \"ease-in-out\",\r\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\r\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\r\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\r\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\r\n};\r\n\r\nexport { supportedWaapiEasing };\r\n","import { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\r\nimport { generateLinearEasing } from '../utils/linear.mjs';\r\nimport { cubicBezierAsString } from './cubic-bezier.mjs';\r\nimport { supportedWaapiEasing } from './supported.mjs';\r\nimport { isBezierDefinition } from '../../../../../../motion-utils/dist/es/easing/utils/is-bezier-definition.mjs';\r\n\r\nfunction mapEasingToNativeEasing(easing, duration) {\r\n    if (!easing) {\r\n        return undefined;\r\n    }\r\n    else if (typeof easing === \"function\") {\r\n        return supportsLinearEasing()\r\n            ? generateLinearEasing(easing, duration)\r\n            : \"ease-out\";\r\n    }\r\n    else if (isBezierDefinition(easing)) {\r\n        return cubicBezierAsString(easing);\r\n    }\r\n    else if (Array.isArray(easing)) {\r\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\r\n            supportedWaapiEasing.easeOut);\r\n    }\r\n    else {\r\n        return supportedWaapiEasing[easing];\r\n    }\r\n}\r\n\r\nexport { mapEasingToNativeEasing };\r\n","import { activeAnimations } from '../../stats/animation-count.mjs';\r\nimport { statsBuffer } from '../../stats/buffer.mjs';\r\nimport { mapEasingToNativeEasing } from './easing/map-easing.mjs';\r\n\r\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeOut\", times, } = {}, pseudoElement = undefined) {\r\n    const keyframeOptions = {\r\n        [valueName]: keyframes,\r\n    };\r\n    if (times)\r\n        keyframeOptions.offset = times;\r\n    const easing = mapEasingToNativeEasing(ease, duration);\r\n    /**\r\n     * If this is an easing array, apply to keyframes, not animation as a whole\r\n     */\r\n    if (Array.isArray(easing))\r\n        keyframeOptions.easing = easing;\r\n    if (statsBuffer.value) {\r\n        activeAnimations.waapi++;\r\n    }\r\n    const options = {\r\n        delay,\r\n        duration,\r\n        easing: !Array.isArray(easing) ? easing : \"linear\",\r\n        fill: \"both\",\r\n        iterations: repeat + 1,\r\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\r\n    };\r\n    if (pseudoElement)\r\n        options.pseudoElement = pseudoElement;\r\n    const animation = element.animate(keyframeOptions, options);\r\n    if (statsBuffer.value) {\r\n        animation.finished.finally(() => {\r\n            activeAnimations.waapi--;\r\n        });\r\n    }\r\n    return animation;\r\n}\r\n\r\nexport { startWaapiAnimation };\r\n","function isGenerator(type) {\r\n    return typeof type === \"function\" && \"applyToOptions\" in type;\r\n}\r\n\r\nexport { isGenerator };\r\n","import { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\r\nimport { isGenerator } from '../../generators/utils/is-generator.mjs';\r\n\r\nfunction applyGeneratorOptions({ type, ...options }) {\r\n    if (isGenerator(type) && supportsLinearEasing()) {\r\n        return type.applyToOptions(options);\r\n    }\r\n    else {\r\n        options.duration ?? (options.duration = 300);\r\n        options.ease ?? (options.ease = \"easeOut\");\r\n    }\r\n    return options;\r\n}\r\n\r\nexport { applyGeneratorOptions };\r\n","import { setStyle } from '../render/dom/style-set.mjs';\r\nimport { supportsScrollTimeline } from '../utils/supports/scroll-timeline.mjs';\r\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\r\nimport { WithPromise } from './utils/WithPromise.mjs';\r\nimport { startWaapiAnimation } from './waapi/start-waapi-animation.mjs';\r\nimport { applyGeneratorOptions } from './waapi/utils/apply-generator.mjs';\r\nimport { invariant } from '../../../../motion-utils/dist/es/errors.mjs';\r\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../../motion-utils/dist/es/time-conversion.mjs';\r\nimport { noop } from '../../../../motion-utils/dist/es/noop.mjs';\r\n\r\n/**\r\n * NativeAnimation implements AnimationPlaybackControls for the browser's Web Animations API.\r\n */\r\nclass NativeAnimation extends WithPromise {\r\n    constructor(options) {\r\n        super();\r\n        this.finishedTime = null;\r\n        this.isStopped = false;\r\n        if (!options)\r\n            return;\r\n        const { element, name, keyframes, pseudoElement, allowFlatten = false, finalKeyframe, onComplete, } = options;\r\n        this.isPseudoElement = Boolean(pseudoElement);\r\n        this.allowFlatten = allowFlatten;\r\n        this.options = options;\r\n        invariant(typeof options.type !== \"string\", `animateMini doesn't support \"type\" as a string. Did you mean to import { spring } from \"motion\"?`);\r\n        const transition = applyGeneratorOptions(options);\r\n        this.animation = startWaapiAnimation(element, name, keyframes, transition, pseudoElement);\r\n        if (transition.autoplay === false) {\r\n            this.animation.pause();\r\n        }\r\n        this.animation.onfinish = () => {\r\n            this.finishedTime = this.time;\r\n            if (!pseudoElement) {\r\n                const keyframe = getFinalKeyframe(keyframes, this.options, finalKeyframe, this.speed);\r\n                if (this.updateMotionValue) {\r\n                    this.updateMotionValue(keyframe);\r\n                }\r\n                else {\r\n                    /**\r\n                     * If we can, we want to commit the final style as set by the user,\r\n                     * rather than the computed keyframe value supplied by the animation.\r\n                     */\r\n                    setStyle(element, name, keyframe);\r\n                }\r\n                this.animation.cancel();\r\n            }\r\n            onComplete?.();\r\n            this.notifyFinished();\r\n        };\r\n    }\r\n    play() {\r\n        if (this.isStopped)\r\n            return;\r\n        this.animation.play();\r\n        if (this.state === \"finished\") {\r\n            this.updateFinished();\r\n        }\r\n    }\r\n    pause() {\r\n        this.animation.pause();\r\n    }\r\n    complete() {\r\n        this.animation.finish?.();\r\n    }\r\n    cancel() {\r\n        try {\r\n            this.animation.cancel();\r\n        }\r\n        catch (e) { }\r\n    }\r\n    stop() {\r\n        if (this.isStopped)\r\n            return;\r\n        this.isStopped = true;\r\n        const { state } = this;\r\n        if (state === \"idle\" || state === \"finished\") {\r\n            return;\r\n        }\r\n        if (this.updateMotionValue) {\r\n            this.updateMotionValue();\r\n        }\r\n        else {\r\n            this.commitStyles();\r\n        }\r\n        if (!this.isPseudoElement)\r\n            this.cancel();\r\n    }\r\n    /**\r\n     * WAAPI doesn't natively have any interruption capabilities.\r\n     *\r\n     * In this method, we commit styles back to the DOM before cancelling\r\n     * the animation.\r\n     *\r\n     * This is designed to be overridden by NativeAnimationExtended, which\r\n     * will create a renderless JS animation and sample it twice to calculate\r\n     * its current value, \"previous\" value, and therefore allow\r\n     * Motion to also correctly calculate velocity for any subsequent animation\r\n     * while deferring the commit until the next animation frame.\r\n     */\r\n    commitStyles() {\r\n        if (!this.isPseudoElement) {\r\n            this.animation.commitStyles?.();\r\n        }\r\n    }\r\n    get duration() {\r\n        const duration = this.animation.effect?.getComputedTiming?.().duration || 0;\r\n        return millisecondsToSeconds(Number(duration));\r\n    }\r\n    get time() {\r\n        return millisecondsToSeconds(Number(this.animation.currentTime) || 0);\r\n    }\r\n    set time(newTime) {\r\n        this.finishedTime = null;\r\n        this.animation.currentTime = secondsToMilliseconds(newTime);\r\n    }\r\n    /**\r\n     * The playback speed of the animation.\r\n     * 1 = normal speed, 2 = double speed, 0.5 = half speed.\r\n     */\r\n    get speed() {\r\n        return this.animation.playbackRate;\r\n    }\r\n    set speed(newSpeed) {\r\n        // Allow backwards playback after finishing\r\n        if (newSpeed < 0)\r\n            this.finishedTime = null;\r\n        this.animation.playbackRate = newSpeed;\r\n    }\r\n    get state() {\r\n        return this.finishedTime !== null\r\n            ? \"finished\"\r\n            : this.animation.playState;\r\n    }\r\n    get startTime() {\r\n        return Number(this.animation.startTime);\r\n    }\r\n    set startTime(newStartTime) {\r\n        this.animation.startTime = newStartTime;\r\n    }\r\n    /**\r\n     * Attaches a timeline to the animation, for instance the `ScrollTimeline`.\r\n     */\r\n    attachTimeline({ timeline, observe }) {\r\n        if (this.allowFlatten) {\r\n            this.animation.effect?.updateTiming({ easing: \"linear\" });\r\n        }\r\n        this.animation.onfinish = null;\r\n        if (timeline && supportsScrollTimeline()) {\r\n            this.animation.timeline = timeline;\r\n            return noop;\r\n        }\r\n        else {\r\n            return observe(this);\r\n        }\r\n    }\r\n}\r\n\r\nexport { NativeAnimation };\r\n","import { anticipate } from '../../../../../../motion-utils/dist/es/easing/anticipate.mjs';\r\nimport { backInOut } from '../../../../../../motion-utils/dist/es/easing/back.mjs';\r\nimport { circInOut } from '../../../../../../motion-utils/dist/es/easing/circ.mjs';\r\n\r\nconst unsupportedEasingFunctions = {\r\n    anticipate,\r\n    backInOut,\r\n    circInOut,\r\n};\r\nfunction isUnsupportedEase(key) {\r\n    return key in unsupportedEasingFunctions;\r\n}\r\nfunction replaceStringEasing(transition) {\r\n    if (typeof transition.ease === \"string\" &&\r\n        isUnsupportedEase(transition.ease)) {\r\n        transition.ease = unsupportedEasingFunctions[transition.ease];\r\n    }\r\n}\r\n\r\nexport { replaceStringEasing };\r\n","import { JSAnimation } from './JSAnimation.mjs';\r\nimport { NativeAnimation } from './NativeAnimation.mjs';\r\nimport { replaceTransitionType } from './utils/replace-transition-type.mjs';\r\nimport { replaceStringEasing } from './waapi/utils/unsupported-easing.mjs';\r\nimport { secondsToMilliseconds } from '../../../../motion-utils/dist/es/time-conversion.mjs';\r\n\r\n/**\r\n * 10ms is chosen here as it strikes a balance between smooth\r\n * results (more than one keyframe per frame at 60fps) and\r\n * keyframe quantity.\r\n */\r\nconst sampleDelta = 10; //ms\r\nclass NativeAnimationExtended extends NativeAnimation {\r\n    constructor(options) {\r\n        /**\r\n         * The base NativeAnimation function only supports a subset\r\n         * of Motion easings, and WAAPI also only supports some\r\n         * easing functions via string/cubic-bezier definitions.\r\n         *\r\n         * This function replaces those unsupported easing functions\r\n         * with a JS easing function. This will later get compiled\r\n         * to a linear() easing function.\r\n         */\r\n        replaceStringEasing(options);\r\n        /**\r\n         * Ensure we replace the transition type with a generator function\r\n         * before passing to WAAPI.\r\n         *\r\n         * TODO: Does this have a better home? It could be shared with\r\n         * JSAnimation.\r\n         */\r\n        replaceTransitionType(options);\r\n        super(options);\r\n        if (options.startTime) {\r\n            this.startTime = options.startTime;\r\n        }\r\n        this.options = options;\r\n    }\r\n    /**\r\n     * WAAPI doesn't natively have any interruption capabilities.\r\n     *\r\n     * Rather than read commited styles back out of the DOM, we can\r\n     * create a renderless JS animation and sample it twice to calculate\r\n     * its current value, \"previous\" value, and therefore allow\r\n     * Motion to calculate velocity for any subsequent animation.\r\n     */\r\n    updateMotionValue(value) {\r\n        const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\r\n        if (!motionValue)\r\n            return;\r\n        if (value !== undefined) {\r\n            motionValue.set(value);\r\n            return;\r\n        }\r\n        const sampleAnimation = new JSAnimation({\r\n            ...options,\r\n            autoplay: false,\r\n        });\r\n        const sampleTime = secondsToMilliseconds(this.finishedTime ?? this.time);\r\n        motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\r\n        sampleAnimation.stop();\r\n    }\r\n}\r\n\r\nexport { NativeAnimationExtended };\r\n","import { complex } from '../../value/types/complex/index.mjs';\r\n\r\n/**\r\n * Check if a value is animatable. Examples:\r\n *\r\n * ✅: 100, \"100px\", \"#fff\"\r\n * ❌: \"block\", \"url(2.jpg)\"\r\n * @param value\r\n *\r\n * @internal\r\n */\r\nconst isAnimatable = (value, name) => {\r\n    // If the list of keys tat might be non-animatable grows, replace with Set\r\n    if (name === \"zIndex\")\r\n        return false;\r\n    // If it's a number or a keyframes array, we can animate it. We might at some point\r\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\r\n    // but for now lets leave it like this for performance reasons\r\n    if (typeof value === \"number\" || Array.isArray(value))\r\n        return true;\r\n    if (typeof value === \"string\" && // It's animatable if we have a string\r\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\r\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\r\n    ) {\r\n        return true;\r\n    }\r\n    return false;\r\n};\r\n\r\nexport { isAnimatable };\r\n","import { isGenerator } from '../generators/utils/is-generator.mjs';\r\nimport { isAnimatable } from './is-animatable.mjs';\r\nimport { warning } from '../../../../../motion-utils/dist/es/errors.mjs';\r\n\r\nfunction hasKeyframesChanged(keyframes) {\r\n    const current = keyframes[0];\r\n    if (keyframes.length === 1)\r\n        return true;\r\n    for (let i = 0; i < keyframes.length; i++) {\r\n        if (keyframes[i] !== current)\r\n            return true;\r\n    }\r\n}\r\nfunction canAnimate(keyframes, name, type, velocity) {\r\n    /**\r\n     * Check if we're able to animate between the start and end keyframes,\r\n     * and throw a warning if we're attempting to animate between one that's\r\n     * animatable and another that isn't.\r\n     */\r\n    const originKeyframe = keyframes[0];\r\n    if (originKeyframe === null)\r\n        return false;\r\n    /**\r\n     * These aren't traditionally animatable but we do support them.\r\n     * In future we could look into making this more generic or replacing\r\n     * this function with mix() === mixImmediate\r\n     */\r\n    if (name === \"display\" || name === \"visibility\")\r\n        return true;\r\n    const targetKeyframe = keyframes[keyframes.length - 1];\r\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\r\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\r\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\r\n    // Always skip if any of these are true\r\n    if (!isOriginAnimatable || !isTargetAnimatable) {\r\n        return false;\r\n    }\r\n    return (hasKeyframesChanged(keyframes) ||\r\n        ((type === \"spring\" || isGenerator(type)) && velocity));\r\n}\r\n\r\nexport { canAnimate };\r\n","import { isHTMLElement } from '../../../utils/is-html-element.mjs';\r\nimport { memo } from '../../../../../../motion-utils/dist/es/memo.mjs';\r\n\r\n/**\r\n * A list of values that can be hardware-accelerated.\r\n */\r\nconst acceleratedValues = new Set([\r\n    \"opacity\",\r\n    \"clipPath\",\r\n    \"filter\",\r\n    \"transform\",\r\n    // TODO: Could be re-enabled now we have support for linear() easing\r\n    // \"background-color\"\r\n]);\r\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\r\nfunction supportsBrowserAnimation(options) {\r\n    const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\r\n    if (!isHTMLElement(motionValue?.owner?.current)) {\r\n        return false;\r\n    }\r\n    const { onUpdate, transformTemplate } = motionValue.owner.getProps();\r\n    return (supportsWaapi() &&\r\n        name &&\r\n        acceleratedValues.has(name) &&\r\n        (name !== \"transform\" || !transformTemplate) &&\r\n        /**\r\n         * If we're outputting values to onUpdate then we can't use WAAPI as there's\r\n         * no way to read the value from WAAPI every frame.\r\n         */\r\n        !onUpdate &&\r\n        !repeatDelay &&\r\n        repeatType !== \"mirror\" &&\r\n        damping !== 0 &&\r\n        type !== \"inertia\");\r\n}\r\n\r\nexport { supportsBrowserAnimation };\r\n","import { time } from '../frameloop/sync-time.mjs';\r\nimport { JSAnimation } from './JSAnimation.mjs';\r\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\r\nimport { KeyframeResolver, flushKeyframeResolvers } from './keyframes/KeyframesResolver.mjs';\r\nimport { NativeAnimationExtended } from './NativeAnimationExtended.mjs';\r\nimport { canAnimate } from './utils/can-animate.mjs';\r\nimport { WithPromise } from './utils/WithPromise.mjs';\r\nimport { supportsBrowserAnimation } from './waapi/supports/waapi.mjs';\r\nimport { MotionGlobalConfig } from '../../../../motion-utils/dist/es/global-config.mjs';\r\nimport { noop } from '../../../../motion-utils/dist/es/noop.mjs';\r\n\r\n/**\r\n * Maximum time allowed between an animation being created and it being\r\n * resolved for us to use the latter as the start time.\r\n *\r\n * This is to ensure that while we prefer to \"start\" an animation as soon\r\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\r\n * between these two moments.\r\n */\r\nconst MAX_RESOLVE_DELAY = 40;\r\nclass AsyncMotionValueAnimation extends WithPromise {\r\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", keyframes, name, motionValue, element, ...options }) {\r\n        super();\r\n        /**\r\n         * Bound to support return animation.stop pattern\r\n         */\r\n        this.stop = () => {\r\n            if (this._animation) {\r\n                this._animation.stop();\r\n                this.stopTimeline?.();\r\n            }\r\n            this.keyframeResolver?.cancel();\r\n        };\r\n        this.createdAt = time.now();\r\n        const optionsWithDefaults = {\r\n            autoplay,\r\n            delay,\r\n            type,\r\n            repeat,\r\n            repeatDelay,\r\n            repeatType,\r\n            name,\r\n            motionValue,\r\n            element,\r\n            ...options,\r\n        };\r\n        const KeyframeResolver$1 = element?.KeyframeResolver || KeyframeResolver;\r\n        this.keyframeResolver = new KeyframeResolver$1(keyframes, (resolvedKeyframes, finalKeyframe, forced) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe, optionsWithDefaults, !forced), name, motionValue, element);\r\n        this.keyframeResolver?.scheduleResolve();\r\n    }\r\n    onKeyframesResolved(keyframes, finalKeyframe, options, sync) {\r\n        this.keyframeResolver = undefined;\r\n        const { name, type, velocity, delay, isHandoff, onUpdate } = options;\r\n        this.resolvedAt = time.now();\r\n        /**\r\n         * If we can't animate this value with the resolved keyframes\r\n         * then we should complete it immediately.\r\n         */\r\n        if (!canAnimate(keyframes, name, type, velocity)) {\r\n            if (MotionGlobalConfig.instantAnimations || !delay) {\r\n                onUpdate?.(getFinalKeyframe(keyframes, options, finalKeyframe));\r\n            }\r\n            keyframes[0] = keyframes[keyframes.length - 1];\r\n            options.duration = 0;\r\n            options.repeat = 0;\r\n        }\r\n        /**\r\n         * Resolve startTime for the animation.\r\n         *\r\n         * This method uses the createdAt and resolvedAt to calculate the\r\n         * animation startTime. *Ideally*, we would use the createdAt time as t=0\r\n         * as the following frame would then be the first frame of the animation in\r\n         * progress, which would feel snappier.\r\n         *\r\n         * However, if there's a delay (main thread work) between the creation of\r\n         * the animation and the first commited frame, we prefer to use resolvedAt\r\n         * to avoid a sudden jump into the animation.\r\n         */\r\n        const startTime = sync\r\n            ? !this.resolvedAt\r\n                ? this.createdAt\r\n                : this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\r\n                    ? this.resolvedAt\r\n                    : this.createdAt\r\n            : undefined;\r\n        const resolvedOptions = {\r\n            startTime,\r\n            finalKeyframe,\r\n            ...options,\r\n            keyframes,\r\n        };\r\n        /**\r\n         * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\r\n         * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\r\n         * optimised animation.\r\n         */\r\n        const animation = !isHandoff && supportsBrowserAnimation(resolvedOptions)\r\n            ? new NativeAnimationExtended({\r\n                ...resolvedOptions,\r\n                element: resolvedOptions.motionValue.owner.current,\r\n            })\r\n            : new JSAnimation(resolvedOptions);\r\n        animation.finished.then(() => this.notifyFinished()).catch(noop);\r\n        if (this.pendingTimeline) {\r\n            this.stopTimeline = animation.attachTimeline(this.pendingTimeline);\r\n            this.pendingTimeline = undefined;\r\n        }\r\n        this._animation = animation;\r\n    }\r\n    get finished() {\r\n        if (!this._animation) {\r\n            return this._finished;\r\n        }\r\n        else {\r\n            return this.animation.finished;\r\n        }\r\n    }\r\n    then(onResolve, _onReject) {\r\n        return this.finished.finally(onResolve).then(() => { });\r\n    }\r\n    get animation() {\r\n        if (!this._animation) {\r\n            this.keyframeResolver?.resume();\r\n            flushKeyframeResolvers();\r\n        }\r\n        return this._animation;\r\n    }\r\n    get duration() {\r\n        return this.animation.duration;\r\n    }\r\n    get time() {\r\n        return this.animation.time;\r\n    }\r\n    set time(newTime) {\r\n        this.animation.time = newTime;\r\n    }\r\n    get speed() {\r\n        return this.animation.speed;\r\n    }\r\n    get state() {\r\n        return this.animation.state;\r\n    }\r\n    set speed(newSpeed) {\r\n        this.animation.speed = newSpeed;\r\n    }\r\n    get startTime() {\r\n        return this.animation.startTime;\r\n    }\r\n    attachTimeline(timeline) {\r\n        if (this._animation) {\r\n            this.stopTimeline = this.animation.attachTimeline(timeline);\r\n        }\r\n        else {\r\n            this.pendingTimeline = timeline;\r\n        }\r\n        return () => this.stop();\r\n    }\r\n    play() {\r\n        this.animation.play();\r\n    }\r\n    pause() {\r\n        this.animation.pause();\r\n    }\r\n    complete() {\r\n        this.animation.complete();\r\n    }\r\n    cancel() {\r\n        if (this._animation) {\r\n            this.animation.cancel();\r\n        }\r\n        this.keyframeResolver?.cancel();\r\n    }\r\n}\r\n\r\nexport { AsyncMotionValueAnimation };\r\n","import { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\r\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\r\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\r\nimport { getValueTransition } from '../../../../../motion-dom/dist/es/animation/utils/get-value-transition.mjs';\r\nimport { secondsToMilliseconds } from '../../../../../motion-utils/dist/es/time-conversion.mjs';\r\nimport { MotionGlobalConfig } from '../../../../../motion-utils/dist/es/global-config.mjs';\r\nimport { frame } from '../../../../../motion-dom/dist/es/frameloop/frame.mjs';\r\nimport { JSAnimation } from '../../../../../motion-dom/dist/es/animation/JSAnimation.mjs';\r\nimport { AsyncMotionValueAnimation } from '../../../../../motion-dom/dist/es/animation/AsyncMotionValueAnimation.mjs';\r\n\r\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\r\n    const valueTransition = getValueTransition(transition, name) || {};\r\n    /**\r\n     * Most transition values are currently completely overwritten by value-specific\r\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\r\n     * delay actually does inherit from the root transition if not value-specific.\r\n     */\r\n    const delay = valueTransition.delay || transition.delay || 0;\r\n    /**\r\n     * Elapsed isn't a public transition option but can be passed through from\r\n     * optimized appear effects in milliseconds.\r\n     */\r\n    let { elapsed = 0 } = transition;\r\n    elapsed = elapsed - secondsToMilliseconds(delay);\r\n    const options = {\r\n        keyframes: Array.isArray(target) ? target : [null, target],\r\n        ease: \"easeOut\",\r\n        velocity: value.getVelocity(),\r\n        ...valueTransition,\r\n        delay: -elapsed,\r\n        onUpdate: (v) => {\r\n            value.set(v);\r\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\r\n        },\r\n        onComplete: () => {\r\n            onComplete();\r\n            valueTransition.onComplete && valueTransition.onComplete();\r\n        },\r\n        name,\r\n        motionValue: value,\r\n        element: isHandoff ? undefined : element,\r\n    };\r\n    /**\r\n     * If there's no transition defined for this value, we can generate\r\n     * unique transition settings for this value.\r\n     */\r\n    if (!isTransitionDefined(valueTransition)) {\r\n        Object.assign(options, getDefaultTransition(name, options));\r\n    }\r\n    /**\r\n     * Both WAAPI and our internal animation functions use durations\r\n     * as defined by milliseconds, while our external API defines them\r\n     * as seconds.\r\n     */\r\n    options.duration && (options.duration = secondsToMilliseconds(options.duration));\r\n    options.repeatDelay && (options.repeatDelay = secondsToMilliseconds(options.repeatDelay));\r\n    /**\r\n     * Support deprecated way to set initial value. Prefer keyframe syntax.\r\n     */\r\n    if (options.from !== undefined) {\r\n        options.keyframes[0] = options.from;\r\n    }\r\n    let shouldSkip = false;\r\n    if (options.type === false ||\r\n        (options.duration === 0 && !options.repeatDelay)) {\r\n        options.duration = 0;\r\n        if (options.delay === 0) {\r\n            shouldSkip = true;\r\n        }\r\n    }\r\n    if (MotionGlobalConfig.instantAnimations ||\r\n        MotionGlobalConfig.skipAnimations) {\r\n        shouldSkip = true;\r\n        options.duration = 0;\r\n        options.delay = 0;\r\n    }\r\n    /**\r\n     * If the transition type or easing has been explicitly set by the user\r\n     * then we don't want to allow flattening the animation.\r\n     */\r\n    options.allowFlatten = !valueTransition.type && !valueTransition.ease;\r\n    /**\r\n     * If we can or must skip creating the animation, and apply only\r\n     * the final keyframe, do so. We also check once keyframes are resolved but\r\n     * this early check prevents the need to create an animation at all.\r\n     */\r\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\r\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\r\n        if (finalKeyframe !== undefined) {\r\n            frame.update(() => {\r\n                options.onUpdate(finalKeyframe);\r\n                options.onComplete();\r\n            });\r\n            return;\r\n        }\r\n    }\r\n    return valueTransition.isSync\r\n        ? new JSAnimation(options)\r\n        : new AsyncMotionValueAnimation(options);\r\n};\r\n\r\nexport { animateMotionValue };\r\n","import { transformPropOrder } from './keys-transform.mjs';\r\n\r\nconst positionalKeys = new Set([\r\n    \"width\",\r\n    \"height\",\r\n    \"top\",\r\n    \"left\",\r\n    \"right\",\r\n    \"bottom\",\r\n    ...transformPropOrder,\r\n]);\r\n\r\nexport { positionalKeys };\r\n","import { setTarget } from '../../render/utils/setters.mjs';\r\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\r\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\r\nimport { animateMotionValue } from './motion-value.mjs';\r\nimport { getValueTransition } from '../../../../../motion-dom/dist/es/animation/utils/get-value-transition.mjs';\r\nimport { frame } from '../../../../../motion-dom/dist/es/frameloop/frame.mjs';\r\nimport { positionalKeys } from '../../../../../motion-dom/dist/es/render/utils/keys-position.mjs';\r\n\r\n/**\r\n * Decide whether we should block this animation. Previously, we achieved this\r\n * just by checking whether the key was listed in protectedKeys, but this\r\n * posed problems if an animation was triggered by afterChildren and protectedKeys\r\n * had been set to true in the meantime.\r\n */\r\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\r\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\r\n    needsAnimating[key] = false;\r\n    return shouldBlock;\r\n}\r\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\r\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\r\n    if (transitionOverride)\r\n        transition = transitionOverride;\r\n    const animations = [];\r\n    const animationTypeState = type &&\r\n        visualElement.animationState &&\r\n        visualElement.animationState.getState()[type];\r\n    for (const key in target) {\r\n        const value = visualElement.getValue(key, visualElement.latestValues[key] ?? null);\r\n        const valueTarget = target[key];\r\n        if (valueTarget === undefined ||\r\n            (animationTypeState &&\r\n                shouldBlockAnimation(animationTypeState, key))) {\r\n            continue;\r\n        }\r\n        const valueTransition = {\r\n            delay,\r\n            ...getValueTransition(transition || {}, key),\r\n        };\r\n        /**\r\n         * If the value is already at the defined target, skip the animation.\r\n         */\r\n        const currentValue = value.get();\r\n        if (currentValue !== undefined &&\r\n            !value.isAnimating &&\r\n            !Array.isArray(valueTarget) &&\r\n            valueTarget === currentValue &&\r\n            !valueTransition.velocity) {\r\n            continue;\r\n        }\r\n        /**\r\n         * If this is the first time a value is being animated, check\r\n         * to see if we're handling off from an existing animation.\r\n         */\r\n        let isHandoff = false;\r\n        if (window.MotionHandoffAnimation) {\r\n            const appearId = getOptimisedAppearId(visualElement);\r\n            if (appearId) {\r\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\r\n                if (startTime !== null) {\r\n                    valueTransition.startTime = startTime;\r\n                    isHandoff = true;\r\n                }\r\n            }\r\n        }\r\n        addValueToWillChange(visualElement, key);\r\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && positionalKeys.has(key)\r\n            ? { type: false }\r\n            : valueTransition, visualElement, isHandoff));\r\n        const animation = value.animation;\r\n        if (animation) {\r\n            animations.push(animation);\r\n        }\r\n    }\r\n    if (transitionEnd) {\r\n        Promise.all(animations).then(() => {\r\n            frame.update(() => {\r\n                transitionEnd && setTarget(visualElement, transitionEnd);\r\n            });\r\n        });\r\n    }\r\n    return animations;\r\n}\r\n\r\nexport { animateTarget };\r\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\r\nimport { animateTarget } from './visual-element-target.mjs';\r\n\r\nfunction animateVariant(visualElement, variant, options = {}) {\r\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\r\n        ? visualElement.presenceContext?.custom\r\n        : undefined);\r\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\r\n    if (options.transitionOverride) {\r\n        transition = options.transitionOverride;\r\n    }\r\n    /**\r\n     * If we have a variant, create a callback that runs it as an animation.\r\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\r\n     */\r\n    const getAnimation = resolved\r\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\r\n        : () => Promise.resolve();\r\n    /**\r\n     * If we have children, create a callback that runs all their animations.\r\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\r\n     */\r\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\r\n        ? (forwardDelay = 0) => {\r\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\r\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\r\n        }\r\n        : () => Promise.resolve();\r\n    /**\r\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\r\n     * this animation or all children animations before playing the other.\r\n     */\r\n    const { when } = transition;\r\n    if (when) {\r\n        const [first, last] = when === \"beforeChildren\"\r\n            ? [getAnimation, getChildAnimations]\r\n            : [getChildAnimations, getAnimation];\r\n        return first().then(() => last());\r\n    }\r\n    else {\r\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\r\n    }\r\n}\r\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\r\n    const animations = [];\r\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\r\n    const generateStaggerDuration = staggerDirection === 1\r\n        ? (i = 0) => i * staggerChildren\r\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\r\n    Array.from(visualElement.variantChildren)\r\n        .sort(sortByTreeOrder)\r\n        .forEach((child, i) => {\r\n        child.notify(\"AnimationStart\", variant);\r\n        animations.push(animateVariant(child, variant, {\r\n            ...options,\r\n            delay: delayChildren + generateStaggerDuration(i),\r\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\r\n    });\r\n    return Promise.all(animations);\r\n}\r\nfunction sortByTreeOrder(a, b) {\r\n    return a.sortNodePosition(b);\r\n}\r\n\r\nexport { animateVariant, sortByTreeOrder };\r\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\r\nimport { animateTarget } from './visual-element-target.mjs';\r\nimport { animateVariant } from './visual-element-variant.mjs';\r\n\r\nfunction animateVisualElement(visualElement, definition, options = {}) {\r\n    visualElement.notify(\"AnimationStart\", definition);\r\n    let animation;\r\n    if (Array.isArray(definition)) {\r\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\r\n        animation = Promise.all(animations);\r\n    }\r\n    else if (typeof definition === \"string\") {\r\n        animation = animateVariant(visualElement, definition, options);\r\n    }\r\n    else {\r\n        const resolvedDefinition = typeof definition === \"function\"\r\n            ? resolveVariant(visualElement, definition, options.custom)\r\n            : definition;\r\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\r\n    }\r\n    return animation.then(() => {\r\n        visualElement.notify(\"AnimationComplete\", definition);\r\n    });\r\n}\r\n\r\nexport { animateVisualElement };\r\n","function shallowCompare(next, prev) {\r\n    if (!Array.isArray(prev))\r\n        return false;\r\n    const prevLength = prev.length;\r\n    if (prevLength !== next.length)\r\n        return false;\r\n    for (let i = 0; i < prevLength; i++) {\r\n        if (prev[i] !== next[i])\r\n            return false;\r\n    }\r\n    return true;\r\n}\r\n\r\nexport { shallowCompare };\r\n","import { isVariantLabel } from './is-variant-label.mjs';\r\nimport { variantProps } from './variant-props.mjs';\r\n\r\nconst numVariantProps = variantProps.length;\r\nfunction getVariantContext(visualElement) {\r\n    if (!visualElement)\r\n        return undefined;\r\n    if (!visualElement.isControllingVariants) {\r\n        const context = visualElement.parent\r\n            ? getVariantContext(visualElement.parent) || {}\r\n            : {};\r\n        if (visualElement.props.initial !== undefined) {\r\n            context.initial = visualElement.props.initial;\r\n        }\r\n        return context;\r\n    }\r\n    const context = {};\r\n    for (let i = 0; i < numVariantProps; i++) {\r\n        const name = variantProps[i];\r\n        const prop = visualElement.props[name];\r\n        if (isVariantLabel(prop) || prop === false) {\r\n            context[name] = prop;\r\n        }\r\n    }\r\n    return context;\r\n}\r\n\r\nexport { getVariantContext };\r\n","import { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\r\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\r\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\r\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\r\nimport { getVariantContext } from './get-variant-context.mjs';\r\nimport { isVariantLabel } from './is-variant-label.mjs';\r\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\r\nimport { variantPriorityOrder } from './variant-props.mjs';\r\n\r\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\r\nconst numAnimationTypes = variantPriorityOrder.length;\r\nfunction animateList(visualElement) {\r\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\r\n}\r\nfunction createAnimationState(visualElement) {\r\n    let animate = animateList(visualElement);\r\n    let state = createState();\r\n    let isInitialRender = true;\r\n    /**\r\n     * This function will be used to reduce the animation definitions for\r\n     * each active animation type into an object of resolved values for it.\r\n     */\r\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\r\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\r\n            ? visualElement.presenceContext?.custom\r\n            : undefined);\r\n        if (resolved) {\r\n            const { transition, transitionEnd, ...target } = resolved;\r\n            acc = { ...acc, ...target, ...transitionEnd };\r\n        }\r\n        return acc;\r\n    };\r\n    /**\r\n     * This just allows us to inject mocked animation functions\r\n     * @internal\r\n     */\r\n    function setAnimateFunction(makeAnimator) {\r\n        animate = makeAnimator(visualElement);\r\n    }\r\n    /**\r\n     * When we receive new props, we need to:\r\n     * 1. Create a list of protected keys for each type. This is a directory of\r\n     *    value keys that are currently being \"handled\" by types of a higher priority\r\n     *    so that whenever an animation is played of a given type, these values are\r\n     *    protected from being animated.\r\n     * 2. Determine if an animation type needs animating.\r\n     * 3. Determine if any values have been removed from a type and figure out\r\n     *    what to animate those to.\r\n     */\r\n    function animateChanges(changedActiveType) {\r\n        const { props } = visualElement;\r\n        const context = getVariantContext(visualElement.parent) || {};\r\n        /**\r\n         * A list of animations that we'll build into as we iterate through the animation\r\n         * types. This will get executed at the end of the function.\r\n         */\r\n        const animations = [];\r\n        /**\r\n         * Keep track of which values have been removed. Then, as we hit lower priority\r\n         * animation types, we can check if they contain removed values and animate to that.\r\n         */\r\n        const removedKeys = new Set();\r\n        /**\r\n         * A dictionary of all encountered keys. This is an object to let us build into and\r\n         * copy it without iteration. Each time we hit an animation type we set its protected\r\n         * keys - the keys its not allowed to animate - to the latest version of this object.\r\n         */\r\n        let encounteredKeys = {};\r\n        /**\r\n         * If a variant has been removed at a given index, and this component is controlling\r\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\r\n         */\r\n        let removedVariantIndex = Infinity;\r\n        /**\r\n         * Iterate through all animation types in reverse priority order. For each, we want to\r\n         * detect which values it's handling and whether or not they've changed (and therefore\r\n         * need to be animated). If any values have been removed, we want to detect those in\r\n         * lower priority props and flag for animation.\r\n         */\r\n        for (let i = 0; i < numAnimationTypes; i++) {\r\n            const type = reversePriorityOrder[i];\r\n            const typeState = state[type];\r\n            const prop = props[type] !== undefined\r\n                ? props[type]\r\n                : context[type];\r\n            const propIsVariant = isVariantLabel(prop);\r\n            /**\r\n             * If this type has *just* changed isActive status, set activeDelta\r\n             * to that status. Otherwise set to null.\r\n             */\r\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\r\n            if (activeDelta === false)\r\n                removedVariantIndex = i;\r\n            /**\r\n             * If this prop is an inherited variant, rather than been set directly on the\r\n             * component itself, we want to make sure we allow the parent to trigger animations.\r\n             *\r\n             * TODO: Can probably change this to a !isControllingVariants check\r\n             */\r\n            let isInherited = prop === context[type] &&\r\n                prop !== props[type] &&\r\n                propIsVariant;\r\n            /**\r\n             *\r\n             */\r\n            if (isInherited &&\r\n                isInitialRender &&\r\n                visualElement.manuallyAnimateOnMount) {\r\n                isInherited = false;\r\n            }\r\n            /**\r\n             * Set all encountered keys so far as the protected keys for this type. This will\r\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\r\n             */\r\n            typeState.protectedKeys = { ...encounteredKeys };\r\n            // Check if we can skip analysing this prop early\r\n            if (\r\n            // If it isn't active and hasn't *just* been set as inactive\r\n            (!typeState.isActive && activeDelta === null) ||\r\n                // If we didn't and don't have any defined prop for this animation type\r\n                (!prop && !typeState.prevProp) ||\r\n                // Or if the prop doesn't define an animation\r\n                isAnimationControls(prop) ||\r\n                typeof prop === \"boolean\") {\r\n                continue;\r\n            }\r\n            /**\r\n             * As we go look through the values defined on this type, if we detect\r\n             * a changed value or a value that was removed in a higher priority, we set\r\n             * this to true and add this prop to the animation list.\r\n             */\r\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\r\n            let shouldAnimateType = variantDidChange ||\r\n                // If we're making this variant active, we want to always make it active\r\n                (type === changedActiveType &&\r\n                    typeState.isActive &&\r\n                    !isInherited &&\r\n                    propIsVariant) ||\r\n                // If we removed a higher-priority variant (i is in reverse order)\r\n                (i > removedVariantIndex && propIsVariant);\r\n            let handledRemovedValues = false;\r\n            /**\r\n             * As animations can be set as variant lists, variants or target objects, we\r\n             * coerce everything to an array if it isn't one already\r\n             */\r\n            const definitionList = Array.isArray(prop) ? prop : [prop];\r\n            /**\r\n             * Build an object of all the resolved values. We'll use this in the subsequent\r\n             * animateChanges calls to determine whether a value has changed.\r\n             */\r\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\r\n            if (activeDelta === false)\r\n                resolvedValues = {};\r\n            /**\r\n             * Now we need to loop through all the keys in the prev prop and this prop,\r\n             * and decide:\r\n             * 1. If the value has changed, and needs animating\r\n             * 2. If it has been removed, and needs adding to the removedKeys set\r\n             * 3. If it has been removed in a higher priority type and needs animating\r\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\r\n             *    needs adding to the type's protectedKeys list.\r\n             */\r\n            const { prevResolvedValues = {} } = typeState;\r\n            const allKeys = {\r\n                ...prevResolvedValues,\r\n                ...resolvedValues,\r\n            };\r\n            const markToAnimate = (key) => {\r\n                shouldAnimateType = true;\r\n                if (removedKeys.has(key)) {\r\n                    handledRemovedValues = true;\r\n                    removedKeys.delete(key);\r\n                }\r\n                typeState.needsAnimating[key] = true;\r\n                const motionValue = visualElement.getValue(key);\r\n                if (motionValue)\r\n                    motionValue.liveStyle = false;\r\n            };\r\n            for (const key in allKeys) {\r\n                const next = resolvedValues[key];\r\n                const prev = prevResolvedValues[key];\r\n                // If we've already handled this we can just skip ahead\r\n                if (encounteredKeys.hasOwnProperty(key))\r\n                    continue;\r\n                /**\r\n                 * If the value has changed, we probably want to animate it.\r\n                 */\r\n                let valueHasChanged = false;\r\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\r\n                    valueHasChanged = !shallowCompare(next, prev);\r\n                }\r\n                else {\r\n                    valueHasChanged = next !== prev;\r\n                }\r\n                if (valueHasChanged) {\r\n                    if (next !== undefined && next !== null) {\r\n                        // If next is defined and doesn't equal prev, it needs animating\r\n                        markToAnimate(key);\r\n                    }\r\n                    else {\r\n                        // If it's undefined, it's been removed.\r\n                        removedKeys.add(key);\r\n                    }\r\n                }\r\n                else if (next !== undefined && removedKeys.has(key)) {\r\n                    /**\r\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\r\n                     * been removed by a higher priority\r\n                     */\r\n                    markToAnimate(key);\r\n                }\r\n                else {\r\n                    /**\r\n                     * If it hasn't changed, we add it to the list of protected values\r\n                     * to ensure it doesn't get animated.\r\n                     */\r\n                    typeState.protectedKeys[key] = true;\r\n                }\r\n            }\r\n            /**\r\n             * Update the typeState so next time animateChanges is called we can compare the\r\n             * latest prop and resolvedValues to these.\r\n             */\r\n            typeState.prevProp = prop;\r\n            typeState.prevResolvedValues = resolvedValues;\r\n            /**\r\n             *\r\n             */\r\n            if (typeState.isActive) {\r\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\r\n            }\r\n            if (isInitialRender && visualElement.blockInitialAnimation) {\r\n                shouldAnimateType = false;\r\n            }\r\n            /**\r\n             * If this is an inherited prop we want to skip this animation\r\n             * unless the inherited variants haven't changed on this render.\r\n             */\r\n            const willAnimateViaParent = isInherited && variantDidChange;\r\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\r\n            if (shouldAnimateType && needsAnimating) {\r\n                animations.push(...definitionList.map((animation) => ({\r\n                    animation: animation,\r\n                    options: { type },\r\n                })));\r\n            }\r\n        }\r\n        /**\r\n         * If there are some removed value that haven't been dealt with,\r\n         * we need to create a new animation that falls back either to the value\r\n         * defined in the style prop, or the last read value.\r\n         */\r\n        if (removedKeys.size) {\r\n            const fallbackAnimation = {};\r\n            /**\r\n             * If the initial prop contains a transition we can use that, otherwise\r\n             * allow the animation function to use the visual element's default.\r\n             */\r\n            if (typeof props.initial !== \"boolean\") {\r\n                const initialTransition = resolveVariant(visualElement, Array.isArray(props.initial)\r\n                    ? props.initial[0]\r\n                    : props.initial);\r\n                if (initialTransition && initialTransition.transition) {\r\n                    fallbackAnimation.transition = initialTransition.transition;\r\n                }\r\n            }\r\n            removedKeys.forEach((key) => {\r\n                const fallbackTarget = visualElement.getBaseTarget(key);\r\n                const motionValue = visualElement.getValue(key);\r\n                if (motionValue)\r\n                    motionValue.liveStyle = true;\r\n                // @ts-expect-error - @mattgperry to figure if we should do something here\r\n                fallbackAnimation[key] = fallbackTarget ?? null;\r\n            });\r\n            animations.push({ animation: fallbackAnimation });\r\n        }\r\n        let shouldAnimate = Boolean(animations.length);\r\n        if (isInitialRender &&\r\n            (props.initial === false || props.initial === props.animate) &&\r\n            !visualElement.manuallyAnimateOnMount) {\r\n            shouldAnimate = false;\r\n        }\r\n        isInitialRender = false;\r\n        return shouldAnimate ? animate(animations) : Promise.resolve();\r\n    }\r\n    /**\r\n     * Change whether a certain animation type is active.\r\n     */\r\n    function setActive(type, isActive) {\r\n        // If the active state hasn't changed, we can safely do nothing here\r\n        if (state[type].isActive === isActive)\r\n            return Promise.resolve();\r\n        // Propagate active change to children\r\n        visualElement.variantChildren?.forEach((child) => child.animationState?.setActive(type, isActive));\r\n        state[type].isActive = isActive;\r\n        const animations = animateChanges(type);\r\n        for (const key in state) {\r\n            state[key].protectedKeys = {};\r\n        }\r\n        return animations;\r\n    }\r\n    return {\r\n        animateChanges,\r\n        setActive,\r\n        setAnimateFunction,\r\n        getState: () => state,\r\n        reset: () => {\r\n            state = createState();\r\n            isInitialRender = true;\r\n        },\r\n    };\r\n}\r\nfunction checkVariantsDidChange(prev, next) {\r\n    if (typeof next === \"string\") {\r\n        return next !== prev;\r\n    }\r\n    else if (Array.isArray(next)) {\r\n        return !shallowCompare(next, prev);\r\n    }\r\n    return false;\r\n}\r\nfunction createTypeState(isActive = false) {\r\n    return {\r\n        isActive,\r\n        protectedKeys: {},\r\n        needsAnimating: {},\r\n        prevResolvedValues: {},\r\n    };\r\n}\r\nfunction createState() {\r\n    return {\r\n        animate: createTypeState(true),\r\n        whileInView: createTypeState(),\r\n        whileHover: createTypeState(),\r\n        whileTap: createTypeState(),\r\n        whileDrag: createTypeState(),\r\n        whileFocus: createTypeState(),\r\n        exit: createTypeState(),\r\n    };\r\n}\r\n\r\nexport { checkVariantsDidChange, createAnimationState };\r\n","class Feature {\r\n    constructor(node) {\r\n        this.isMounted = false;\r\n        this.node = node;\r\n    }\r\n    update() { }\r\n}\r\n\r\nexport { Feature };\r\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\r\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\r\nimport { Feature } from '../Feature.mjs';\r\n\r\nclass AnimationFeature extends Feature {\r\n    /**\r\n     * We dynamically generate the AnimationState manager as it contains a reference\r\n     * to the underlying animation library. We only want to load that if we load this,\r\n     * so people can optionally code split it out using the `m` component.\r\n     */\r\n    constructor(node) {\r\n        super(node);\r\n        node.animationState || (node.animationState = createAnimationState(node));\r\n    }\r\n    updateAnimationControlsSubscription() {\r\n        const { animate } = this.node.getProps();\r\n        if (isAnimationControls(animate)) {\r\n            this.unmountControls = animate.subscribe(this.node);\r\n        }\r\n    }\r\n    /**\r\n     * Subscribe any provided AnimationControls to the component's VisualElement\r\n     */\r\n    mount() {\r\n        this.updateAnimationControlsSubscription();\r\n    }\r\n    update() {\r\n        const { animate } = this.node.getProps();\r\n        const { animate: prevAnimate } = this.node.prevProps || {};\r\n        if (animate !== prevAnimate) {\r\n            this.updateAnimationControlsSubscription();\r\n        }\r\n    }\r\n    unmount() {\r\n        this.node.animationState.reset();\r\n        this.unmountControls?.();\r\n    }\r\n}\r\n\r\nexport { AnimationFeature };\r\n","import { Feature } from '../Feature.mjs';\r\n\r\nlet id = 0;\r\nclass ExitAnimationFeature extends Feature {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.id = id++;\r\n    }\r\n    update() {\r\n        if (!this.node.presenceContext)\r\n            return;\r\n        const { isPresent, onExitComplete } = this.node.presenceContext;\r\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\r\n        if (!this.node.animationState || isPresent === prevIsPresent) {\r\n            return;\r\n        }\r\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\r\n        if (onExitComplete && !isPresent) {\r\n            exitAnimation.then(() => {\r\n                onExitComplete(this.id);\r\n            });\r\n        }\r\n    }\r\n    mount() {\r\n        const { register, onExitComplete } = this.node.presenceContext || {};\r\n        if (onExitComplete) {\r\n            onExitComplete(this.id);\r\n        }\r\n        if (register) {\r\n            this.unmount = register(this.id);\r\n        }\r\n    }\r\n    unmount() { }\r\n}\r\n\r\nexport { ExitAnimationFeature };\r\n","import { AnimationFeature } from './animation/index.mjs';\r\nimport { ExitAnimationFeature } from './animation/exit.mjs';\r\n\r\nconst animations = {\r\n    animation: {\r\n        Feature: AnimationFeature,\r\n    },\r\n    exit: {\r\n        Feature: ExitAnimationFeature,\r\n    },\r\n};\r\n\r\nexport { animations };\r\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\r\n    target.addEventListener(eventName, handler, options);\r\n    return () => target.removeEventListener(eventName, handler);\r\n}\r\n\r\nexport { addDomEvent };\r\n","const isPrimaryPointer = (event) => {\r\n    if (event.pointerType === \"mouse\") {\r\n        return typeof event.button !== \"number\" || event.button <= 0;\r\n    }\r\n    else {\r\n        /**\r\n         * isPrimary is true for all mice buttons, whereas every touch point\r\n         * is regarded as its own input. So subsequent concurrent touch points\r\n         * will be false.\r\n         *\r\n         * Specifically match against false here as incomplete versions of\r\n         * PointerEvents in very old browser might have it set as undefined.\r\n         */\r\n        return event.isPrimary !== false;\r\n    }\r\n};\r\n\r\nexport { isPrimaryPointer };\r\n","import { isPrimaryPointer } from '../../../../motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs';\r\n\r\nfunction extractEventInfo(event) {\r\n    return {\r\n        point: {\r\n            x: event.pageX,\r\n            y: event.pageY,\r\n        },\r\n    };\r\n}\r\nconst addPointerInfo = (handler) => {\r\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\r\n};\r\n\r\nexport { addPointerInfo, extractEventInfo };\r\n","import { addDomEvent } from './add-dom-event.mjs';\r\nimport { addPointerInfo } from './event-info.mjs';\r\n\r\nfunction addPointerEvent(target, eventName, handler, options) {\r\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\r\n}\r\n\r\nexport { addPointerEvent };\r\n","/**\r\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\r\n * it's easier to consider each axis individually. This function returns a bounding box\r\n * as a map of single-axis min/max values.\r\n */\r\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\r\n    return {\r\n        x: { min: left, max: right },\r\n        y: { min: top, max: bottom },\r\n    };\r\n}\r\nfunction convertBoxToBoundingBox({ x, y }) {\r\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\r\n}\r\n/**\r\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\r\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\r\n * when measuring DOM elements and DOM event points.\r\n */\r\nfunction transformBoxPoints(point, transformPoint) {\r\n    if (!transformPoint)\r\n        return point;\r\n    const topLeft = transformPoint({ x: point.left, y: point.top });\r\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\r\n    return {\r\n        top: topLeft.y,\r\n        left: topLeft.x,\r\n        bottom: bottomRight.y,\r\n        right: bottomRight.x,\r\n    };\r\n}\r\n\r\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\r\n","import { mixNumber } from '../../../../../motion-dom/dist/es/utils/mix/number.mjs';\r\n\r\nconst SCALE_PRECISION = 0.0001;\r\nconst SCALE_MIN = 1 - SCALE_PRECISION;\r\nconst SCALE_MAX = 1 + SCALE_PRECISION;\r\nconst TRANSLATE_PRECISION = 0.01;\r\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\r\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\r\nfunction calcLength(axis) {\r\n    return axis.max - axis.min;\r\n}\r\nfunction isNear(value, target, maxDistance) {\r\n    return Math.abs(value - target) <= maxDistance;\r\n}\r\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\r\n    delta.origin = origin;\r\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\r\n    delta.scale = calcLength(target) / calcLength(source);\r\n    delta.translate =\r\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\r\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\r\n        isNaN(delta.scale)) {\r\n        delta.scale = 1.0;\r\n    }\r\n    if ((delta.translate >= TRANSLATE_MIN &&\r\n        delta.translate <= TRANSLATE_MAX) ||\r\n        isNaN(delta.translate)) {\r\n        delta.translate = 0.0;\r\n    }\r\n}\r\nfunction calcBoxDelta(delta, source, target, origin) {\r\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\r\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\r\n}\r\nfunction calcRelativeAxis(target, relative, parent) {\r\n    target.min = parent.min + relative.min;\r\n    target.max = target.min + calcLength(relative);\r\n}\r\nfunction calcRelativeBox(target, relative, parent) {\r\n    calcRelativeAxis(target.x, relative.x, parent.x);\r\n    calcRelativeAxis(target.y, relative.y, parent.y);\r\n}\r\nfunction calcRelativeAxisPosition(target, layout, parent) {\r\n    target.min = layout.min - parent.min;\r\n    target.max = target.min + calcLength(layout);\r\n}\r\nfunction calcRelativePosition(target, layout, parent) {\r\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\r\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\r\n}\r\n\r\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\r\n","const createAxisDelta = () => ({\r\n    translate: 0,\r\n    scale: 1,\r\n    origin: 0,\r\n    originPoint: 0,\r\n});\r\nconst createDelta = () => ({\r\n    x: createAxisDelta(),\r\n    y: createAxisDelta(),\r\n});\r\nconst createAxis = () => ({ min: 0, max: 0 });\r\nconst createBox = () => ({\r\n    x: createAxis(),\r\n    y: createAxis(),\r\n});\r\n\r\nexport { createAxis, createAxisDelta, createBox, createDelta };\r\n","function eachAxis(callback) {\r\n    return [callback(\"x\"), callback(\"y\")];\r\n}\r\n\r\nexport { eachAxis };\r\n","function isIdentityScale(scale) {\r\n    return scale === undefined || scale === 1;\r\n}\r\nfunction hasScale({ scale, scaleX, scaleY }) {\r\n    return (!isIdentityScale(scale) ||\r\n        !isIdentityScale(scaleX) ||\r\n        !isIdentityScale(scaleY));\r\n}\r\nfunction hasTransform(values) {\r\n    return (hasScale(values) ||\r\n        has2DTranslate(values) ||\r\n        values.z ||\r\n        values.rotate ||\r\n        values.rotateX ||\r\n        values.rotateY ||\r\n        values.skewX ||\r\n        values.skewY);\r\n}\r\nfunction has2DTranslate(values) {\r\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\r\n}\r\nfunction is2DTranslate(value) {\r\n    return value && value !== \"0%\";\r\n}\r\n\r\nexport { has2DTranslate, hasScale, hasTransform };\r\n","import { hasTransform } from '../utils/has-transform.mjs';\r\nimport { mixNumber } from '../../../../../motion-dom/dist/es/utils/mix/number.mjs';\r\n\r\n/**\r\n * Scales a point based on a factor and an originPoint\r\n */\r\nfunction scalePoint(point, scale, originPoint) {\r\n    const distanceFromOrigin = point - originPoint;\r\n    const scaled = scale * distanceFromOrigin;\r\n    return originPoint + scaled;\r\n}\r\n/**\r\n * Applies a translate/scale delta to a point\r\n */\r\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\r\n    if (boxScale !== undefined) {\r\n        point = scalePoint(point, boxScale, originPoint);\r\n    }\r\n    return scalePoint(point, scale, originPoint) + translate;\r\n}\r\n/**\r\n * Applies a translate/scale delta to an axis\r\n */\r\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\r\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\r\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\r\n}\r\n/**\r\n * Applies a translate/scale delta to a box\r\n */\r\nfunction applyBoxDelta(box, { x, y }) {\r\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\r\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\r\n}\r\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\r\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\r\n/**\r\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\r\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\r\n *\r\n * This is the final nested loop within updateLayoutDelta for future refactoring\r\n */\r\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\r\n    const treeLength = treePath.length;\r\n    if (!treeLength)\r\n        return;\r\n    // Reset the treeScale\r\n    treeScale.x = treeScale.y = 1;\r\n    let node;\r\n    let delta;\r\n    for (let i = 0; i < treeLength; i++) {\r\n        node = treePath[i];\r\n        delta = node.projectionDelta;\r\n        /**\r\n         * TODO: Prefer to remove this, but currently we have motion components with\r\n         * display: contents in Framer.\r\n         */\r\n        const { visualElement } = node.options;\r\n        if (visualElement &&\r\n            visualElement.props.style &&\r\n            visualElement.props.style.display === \"contents\") {\r\n            continue;\r\n        }\r\n        if (isSharedTransition &&\r\n            node.options.layoutScroll &&\r\n            node.scroll &&\r\n            node !== node.root) {\r\n            transformBox(box, {\r\n                x: -node.scroll.offset.x,\r\n                y: -node.scroll.offset.y,\r\n            });\r\n        }\r\n        if (delta) {\r\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\r\n            treeScale.x *= delta.x.scale;\r\n            treeScale.y *= delta.y.scale;\r\n            // Apply each ancestor's calculated delta into this component's recorded layout box\r\n            applyBoxDelta(box, delta);\r\n        }\r\n        if (isSharedTransition && hasTransform(node.latestValues)) {\r\n            transformBox(box, node.latestValues);\r\n        }\r\n    }\r\n    /**\r\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\r\n     * This will help reduce useless scales getting rendered.\r\n     */\r\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\r\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\r\n        treeScale.x = 1.0;\r\n    }\r\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\r\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\r\n        treeScale.y = 1.0;\r\n    }\r\n}\r\nfunction translateAxis(axis, distance) {\r\n    axis.min = axis.min + distance;\r\n    axis.max = axis.max + distance;\r\n}\r\n/**\r\n * Apply a transform to an axis from the latest resolved motion values.\r\n * This function basically acts as a bridge between a flat motion value map\r\n * and applyAxisDelta\r\n */\r\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\r\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\r\n    // Apply the axis delta to the final axis\r\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\r\n}\r\n/**\r\n * Apply a transform to a box from the latest resolved motion values.\r\n */\r\nfunction transformBox(box, transform) {\r\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\r\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\r\n}\r\n\r\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\r\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\r\nimport { translateAxis } from '../geometry/delta-apply.mjs';\r\n\r\nfunction measureViewportBox(instance, transformPoint) {\r\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\r\n}\r\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\r\n    const viewportBox = measureViewportBox(element, transformPagePoint);\r\n    const { scroll } = rootProjectionNode;\r\n    if (scroll) {\r\n        translateAxis(viewportBox.x, scroll.offset.x);\r\n        translateAxis(viewportBox.y, scroll.offset.y);\r\n    }\r\n    return viewportBox;\r\n}\r\n\r\nexport { measurePageBox, measureViewportBox };\r\n","// Fixes https://github.com/motiondivision/motion/issues/2270\r\nconst getContextWindow = ({ current }) => {\r\n    return current ? current.ownerDocument.defaultView : null;\r\n};\r\n\r\nexport { getContextWindow };\r\n","const distance = (a, b) => Math.abs(a - b);\r\nfunction distance2D(a, b) {\r\n    // Multi-dimensional\r\n    const xDelta = distance(a.x, b.x);\r\n    const yDelta = distance(a.y, b.y);\r\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\r\n}\r\n\r\nexport { distance, distance2D };\r\n","import { addPointerEvent } from '../../events/add-pointer-event.mjs';\r\nimport { extractEventInfo } from '../../events/event-info.mjs';\r\nimport { distance2D } from '../../utils/distance.mjs';\r\nimport { frame, cancelFrame, frameData } from '../../../../../motion-dom/dist/es/frameloop/frame.mjs';\r\nimport { isPrimaryPointer } from '../../../../../motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs';\r\nimport { pipe } from '../../../../../motion-utils/dist/es/pipe.mjs';\r\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../../../motion-utils/dist/es/time-conversion.mjs';\r\n\r\n/**\r\n * @internal\r\n */\r\nclass PanSession {\r\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false, } = {}) {\r\n        /**\r\n         * @internal\r\n         */\r\n        this.startEvent = null;\r\n        /**\r\n         * @internal\r\n         */\r\n        this.lastMoveEvent = null;\r\n        /**\r\n         * @internal\r\n         */\r\n        this.lastMoveEventInfo = null;\r\n        /**\r\n         * @internal\r\n         */\r\n        this.handlers = {};\r\n        /**\r\n         * @internal\r\n         */\r\n        this.contextWindow = window;\r\n        this.updatePoint = () => {\r\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\r\n                return;\r\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\r\n            const isPanStarted = this.startEvent !== null;\r\n            // Only start panning if the offset is larger than 3 pixels. If we make it\r\n            // any larger than this we'll want to reset the pointer history\r\n            // on the first update to avoid visual snapping to the cursoe.\r\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\r\n            if (!isPanStarted && !isDistancePastThreshold)\r\n                return;\r\n            const { point } = info;\r\n            const { timestamp } = frameData;\r\n            this.history.push({ ...point, timestamp });\r\n            const { onStart, onMove } = this.handlers;\r\n            if (!isPanStarted) {\r\n                onStart && onStart(this.lastMoveEvent, info);\r\n                this.startEvent = this.lastMoveEvent;\r\n            }\r\n            onMove && onMove(this.lastMoveEvent, info);\r\n        };\r\n        this.handlePointerMove = (event, info) => {\r\n            this.lastMoveEvent = event;\r\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\r\n            // Throttle mouse move event to once per frame\r\n            frame.update(this.updatePoint, true);\r\n        };\r\n        this.handlePointerUp = (event, info) => {\r\n            this.end();\r\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\r\n            if (this.dragSnapToOrigin)\r\n                resumeAnimation && resumeAnimation();\r\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\r\n                return;\r\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\r\n                ? this.lastMoveEventInfo\r\n                : transformPoint(info, this.transformPagePoint), this.history);\r\n            if (this.startEvent && onEnd) {\r\n                onEnd(event, panInfo);\r\n            }\r\n            onSessionEnd && onSessionEnd(event, panInfo);\r\n        };\r\n        // If we have more than one touch, don't start detecting this gesture\r\n        if (!isPrimaryPointer(event))\r\n            return;\r\n        this.dragSnapToOrigin = dragSnapToOrigin;\r\n        this.handlers = handlers;\r\n        this.transformPagePoint = transformPagePoint;\r\n        this.contextWindow = contextWindow || window;\r\n        const info = extractEventInfo(event);\r\n        const initialInfo = transformPoint(info, this.transformPagePoint);\r\n        const { point } = initialInfo;\r\n        const { timestamp } = frameData;\r\n        this.history = [{ ...point, timestamp }];\r\n        const { onSessionStart } = handlers;\r\n        onSessionStart &&\r\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\r\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\r\n    }\r\n    updateHandlers(handlers) {\r\n        this.handlers = handlers;\r\n    }\r\n    end() {\r\n        this.removeListeners && this.removeListeners();\r\n        cancelFrame(this.updatePoint);\r\n    }\r\n}\r\nfunction transformPoint(info, transformPagePoint) {\r\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\r\n}\r\nfunction subtractPoint(a, b) {\r\n    return { x: a.x - b.x, y: a.y - b.y };\r\n}\r\nfunction getPanInfo({ point }, history) {\r\n    return {\r\n        point,\r\n        delta: subtractPoint(point, lastDevicePoint(history)),\r\n        offset: subtractPoint(point, startDevicePoint(history)),\r\n        velocity: getVelocity(history, 0.1),\r\n    };\r\n}\r\nfunction startDevicePoint(history) {\r\n    return history[0];\r\n}\r\nfunction lastDevicePoint(history) {\r\n    return history[history.length - 1];\r\n}\r\nfunction getVelocity(history, timeDelta) {\r\n    if (history.length < 2) {\r\n        return { x: 0, y: 0 };\r\n    }\r\n    let i = history.length - 1;\r\n    let timestampedPoint = null;\r\n    const lastPoint = lastDevicePoint(history);\r\n    while (i >= 0) {\r\n        timestampedPoint = history[i];\r\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\r\n            secondsToMilliseconds(timeDelta)) {\r\n            break;\r\n        }\r\n        i--;\r\n    }\r\n    if (!timestampedPoint) {\r\n        return { x: 0, y: 0 };\r\n    }\r\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\r\n    if (time === 0) {\r\n        return { x: 0, y: 0 };\r\n    }\r\n    const currentVelocity = {\r\n        x: (lastPoint.x - timestampedPoint.x) / time,\r\n        y: (lastPoint.y - timestampedPoint.y) / time,\r\n    };\r\n    if (currentVelocity.x === Infinity) {\r\n        currentVelocity.x = 0;\r\n    }\r\n    if (currentVelocity.y === Infinity) {\r\n        currentVelocity.y = 0;\r\n    }\r\n    return currentVelocity;\r\n}\r\n\r\nexport { PanSession };\r\n","import { calcLength } from '../../../projection/geometry/delta-calc.mjs';\r\nimport { mixNumber } from '../../../../../../motion-dom/dist/es/utils/mix/number.mjs';\r\nimport { progress } from '../../../../../../motion-utils/dist/es/progress.mjs';\r\nimport { clamp } from '../../../../../../motion-utils/dist/es/clamp.mjs';\r\n\r\n/**\r\n * Apply constraints to a point. These constraints are both physical along an\r\n * axis, and an elastic factor that determines how much to constrain the point\r\n * by if it does lie outside the defined parameters.\r\n */\r\nfunction applyConstraints(point, { min, max }, elastic) {\r\n    if (min !== undefined && point < min) {\r\n        // If we have a min point defined, and this is outside of that, constrain\r\n        point = elastic\r\n            ? mixNumber(min, point, elastic.min)\r\n            : Math.max(point, min);\r\n    }\r\n    else if (max !== undefined && point > max) {\r\n        // If we have a max point defined, and this is outside of that, constrain\r\n        point = elastic\r\n            ? mixNumber(max, point, elastic.max)\r\n            : Math.min(point, max);\r\n    }\r\n    return point;\r\n}\r\n/**\r\n * Calculate constraints in terms of the viewport when defined relatively to the\r\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\r\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\r\n */\r\nfunction calcRelativeAxisConstraints(axis, min, max) {\r\n    return {\r\n        min: min !== undefined ? axis.min + min : undefined,\r\n        max: max !== undefined\r\n            ? axis.max + max - (axis.max - axis.min)\r\n            : undefined,\r\n    };\r\n}\r\n/**\r\n * Calculate constraints in terms of the viewport when\r\n * defined relatively to the measured bounding box.\r\n */\r\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\r\n    return {\r\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\r\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\r\n    };\r\n}\r\n/**\r\n * Calculate viewport constraints when defined as another viewport-relative axis\r\n */\r\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\r\n    let min = constraintsAxis.min - layoutAxis.min;\r\n    let max = constraintsAxis.max - layoutAxis.max;\r\n    // If the constraints axis is actually smaller than the layout axis then we can\r\n    // flip the constraints\r\n    if (constraintsAxis.max - constraintsAxis.min <\r\n        layoutAxis.max - layoutAxis.min) {\r\n        [min, max] = [max, min];\r\n    }\r\n    return { min, max };\r\n}\r\n/**\r\n * Calculate viewport constraints when defined as another viewport-relative box\r\n */\r\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\r\n    return {\r\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\r\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\r\n    };\r\n}\r\n/**\r\n * Calculate a transform origin relative to the source axis, between 0-1, that results\r\n * in an asthetically pleasing scale/transform needed to project from source to target.\r\n */\r\nfunction calcOrigin(source, target) {\r\n    let origin = 0.5;\r\n    const sourceLength = calcLength(source);\r\n    const targetLength = calcLength(target);\r\n    if (targetLength > sourceLength) {\r\n        origin = progress(target.min, target.max - sourceLength, source.min);\r\n    }\r\n    else if (sourceLength > targetLength) {\r\n        origin = progress(source.min, source.max - targetLength, target.min);\r\n    }\r\n    return clamp(0, 1, origin);\r\n}\r\n/**\r\n * Rebase the calculated viewport constraints relative to the layout.min point.\r\n */\r\nfunction rebaseAxisConstraints(layout, constraints) {\r\n    const relativeConstraints = {};\r\n    if (constraints.min !== undefined) {\r\n        relativeConstraints.min = constraints.min - layout.min;\r\n    }\r\n    if (constraints.max !== undefined) {\r\n        relativeConstraints.max = constraints.max - layout.min;\r\n    }\r\n    return relativeConstraints;\r\n}\r\nconst defaultElastic = 0.35;\r\n/**\r\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\r\n */\r\nfunction resolveDragElastic(dragElastic = defaultElastic) {\r\n    if (dragElastic === false) {\r\n        dragElastic = 0;\r\n    }\r\n    else if (dragElastic === true) {\r\n        dragElastic = defaultElastic;\r\n    }\r\n    return {\r\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\r\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\r\n    };\r\n}\r\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\r\n    return {\r\n        min: resolvePointElastic(dragElastic, minLabel),\r\n        max: resolvePointElastic(dragElastic, maxLabel),\r\n    };\r\n}\r\nfunction resolvePointElastic(dragElastic, label) {\r\n    return typeof dragElastic === \"number\"\r\n        ? dragElastic\r\n        : dragElastic[label] || 0;\r\n}\r\n\r\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\r\n","const isDragging = {\r\n    x: false,\r\n    y: false,\r\n};\r\nfunction isDragActive() {\r\n    return isDragging.x || isDragging.y;\r\n}\r\n\r\nexport { isDragActive, isDragging };\r\n","import { isDragging } from './is-active.mjs';\r\n\r\nfunction setDragLock(axis) {\r\n    if (axis === \"x\" || axis === \"y\") {\r\n        if (isDragging[axis]) {\r\n            return null;\r\n        }\r\n        else {\r\n            isDragging[axis] = true;\r\n            return () => {\r\n                isDragging[axis] = false;\r\n            };\r\n        }\r\n    }\r\n    else {\r\n        if (isDragging.x || isDragging.y) {\r\n            return null;\r\n        }\r\n        else {\r\n            isDragging.x = isDragging.y = true;\r\n            return () => {\r\n                isDragging.x = isDragging.y = false;\r\n            };\r\n        }\r\n    }\r\n}\r\n\r\nexport { setDragLock };\r\n","import { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\r\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\r\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\r\nimport { extractEventInfo } from '../../events/event-info.mjs';\r\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\r\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\r\nimport { createBox } from '../../projection/geometry/models.mjs';\r\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\r\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\r\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\r\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\r\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\r\nimport { PanSession } from '../pan/PanSession.mjs';\r\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, rebaseAxisConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\r\nimport { frame } from '../../../../../motion-dom/dist/es/frameloop/frame.mjs';\r\nimport { invariant } from '../../../../../motion-utils/dist/es/errors.mjs';\r\nimport { setDragLock } from '../../../../../motion-dom/dist/es/gestures/drag/state/set-active.mjs';\r\nimport { percent } from '../../../../../motion-dom/dist/es/value/types/numbers/units.mjs';\r\nimport { mixNumber } from '../../../../../motion-dom/dist/es/utils/mix/number.mjs';\r\n\r\nconst elementDragControls = new WeakMap();\r\n/**\r\n *\r\n */\r\n// let latestPointerEvent: PointerEvent\r\nclass VisualElementDragControls {\r\n    constructor(visualElement) {\r\n        this.openDragLock = null;\r\n        this.isDragging = false;\r\n        this.currentDirection = null;\r\n        this.originPoint = { x: 0, y: 0 };\r\n        /**\r\n         * The permitted boundaries of travel, in pixels.\r\n         */\r\n        this.constraints = false;\r\n        this.hasMutatedConstraints = false;\r\n        /**\r\n         * The per-axis resolved elastic values.\r\n         */\r\n        this.elastic = createBox();\r\n        this.visualElement = visualElement;\r\n    }\r\n    start(originEvent, { snapToCursor = false } = {}) {\r\n        /**\r\n         * Don't start dragging if this component is exiting\r\n         */\r\n        const { presenceContext } = this.visualElement;\r\n        if (presenceContext && presenceContext.isPresent === false)\r\n            return;\r\n        const onSessionStart = (event) => {\r\n            const { dragSnapToOrigin } = this.getProps();\r\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\r\n            // the component.\r\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\r\n            if (snapToCursor) {\r\n                this.snapToCursor(extractEventInfo(event).point);\r\n            }\r\n        };\r\n        const onStart = (event, info) => {\r\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\r\n            const { drag, dragPropagation, onDragStart } = this.getProps();\r\n            if (drag && !dragPropagation) {\r\n                if (this.openDragLock)\r\n                    this.openDragLock();\r\n                this.openDragLock = setDragLock(drag);\r\n                // If we don 't have the lock, don't start dragging\r\n                if (!this.openDragLock)\r\n                    return;\r\n            }\r\n            this.isDragging = true;\r\n            this.currentDirection = null;\r\n            this.resolveConstraints();\r\n            if (this.visualElement.projection) {\r\n                this.visualElement.projection.isAnimationBlocked = true;\r\n                this.visualElement.projection.target = undefined;\r\n            }\r\n            /**\r\n             * Record gesture origin\r\n             */\r\n            eachAxis((axis) => {\r\n                let current = this.getAxisMotionValue(axis).get() || 0;\r\n                /**\r\n                 * If the MotionValue is a percentage value convert to px\r\n                 */\r\n                if (percent.test(current)) {\r\n                    const { projection } = this.visualElement;\r\n                    if (projection && projection.layout) {\r\n                        const measuredAxis = projection.layout.layoutBox[axis];\r\n                        if (measuredAxis) {\r\n                            const length = calcLength(measuredAxis);\r\n                            current = length * (parseFloat(current) / 100);\r\n                        }\r\n                    }\r\n                }\r\n                this.originPoint[axis] = current;\r\n            });\r\n            // Fire onDragStart event\r\n            if (onDragStart) {\r\n                frame.postRender(() => onDragStart(event, info));\r\n            }\r\n            addValueToWillChange(this.visualElement, \"transform\");\r\n            const { animationState } = this.visualElement;\r\n            animationState && animationState.setActive(\"whileDrag\", true);\r\n        };\r\n        const onMove = (event, info) => {\r\n            // latestPointerEvent = event\r\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\r\n            // If we didn't successfully receive the gesture lock, early return.\r\n            if (!dragPropagation && !this.openDragLock)\r\n                return;\r\n            const { offset } = info;\r\n            // Attempt to detect drag direction if directionLock is true\r\n            if (dragDirectionLock && this.currentDirection === null) {\r\n                this.currentDirection = getCurrentDirection(offset);\r\n                // If we've successfully set a direction, notify listener\r\n                if (this.currentDirection !== null) {\r\n                    onDirectionLock && onDirectionLock(this.currentDirection);\r\n                }\r\n                return;\r\n            }\r\n            // Update each point with the latest position\r\n            this.updateAxis(\"x\", info.point, offset);\r\n            this.updateAxis(\"y\", info.point, offset);\r\n            /**\r\n             * Ideally we would leave the renderer to fire naturally at the end of\r\n             * this frame but if the element is about to change layout as the result\r\n             * of a re-render we want to ensure the browser can read the latest\r\n             * bounding box to ensure the pointer and element don't fall out of sync.\r\n             */\r\n            this.visualElement.render();\r\n            /**\r\n             * This must fire after the render call as it might trigger a state\r\n             * change which itself might trigger a layout update.\r\n             */\r\n            onDrag && onDrag(event, info);\r\n        };\r\n        const onSessionEnd = (event, info) => this.stop(event, info);\r\n        const resumeAnimation = () => eachAxis((axis) => this.getAnimationState(axis) === \"paused\" &&\r\n            this.getAxisMotionValue(axis).animation?.play());\r\n        const { dragSnapToOrigin } = this.getProps();\r\n        this.panSession = new PanSession(originEvent, {\r\n            onSessionStart,\r\n            onStart,\r\n            onMove,\r\n            onSessionEnd,\r\n            resumeAnimation,\r\n        }, {\r\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\r\n            dragSnapToOrigin,\r\n            contextWindow: getContextWindow(this.visualElement),\r\n        });\r\n    }\r\n    stop(event, info) {\r\n        const isDragging = this.isDragging;\r\n        this.cancel();\r\n        if (!isDragging)\r\n            return;\r\n        const { velocity } = info;\r\n        this.startAnimation(velocity);\r\n        const { onDragEnd } = this.getProps();\r\n        if (onDragEnd) {\r\n            frame.postRender(() => onDragEnd(event, info));\r\n        }\r\n    }\r\n    cancel() {\r\n        this.isDragging = false;\r\n        const { projection, animationState } = this.visualElement;\r\n        if (projection) {\r\n            projection.isAnimationBlocked = false;\r\n        }\r\n        this.panSession && this.panSession.end();\r\n        this.panSession = undefined;\r\n        const { dragPropagation } = this.getProps();\r\n        if (!dragPropagation && this.openDragLock) {\r\n            this.openDragLock();\r\n            this.openDragLock = null;\r\n        }\r\n        animationState && animationState.setActive(\"whileDrag\", false);\r\n    }\r\n    updateAxis(axis, _point, offset) {\r\n        const { drag } = this.getProps();\r\n        // If we're not dragging this axis, do an early return.\r\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\r\n            return;\r\n        const axisValue = this.getAxisMotionValue(axis);\r\n        let next = this.originPoint[axis] + offset[axis];\r\n        // Apply constraints\r\n        if (this.constraints && this.constraints[axis]) {\r\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\r\n        }\r\n        axisValue.set(next);\r\n    }\r\n    resolveConstraints() {\r\n        const { dragConstraints, dragElastic } = this.getProps();\r\n        const layout = this.visualElement.projection &&\r\n            !this.visualElement.projection.layout\r\n            ? this.visualElement.projection.measure(false)\r\n            : this.visualElement.projection?.layout;\r\n        const prevConstraints = this.constraints;\r\n        if (dragConstraints && isRefObject(dragConstraints)) {\r\n            if (!this.constraints) {\r\n                this.constraints = this.resolveRefConstraints();\r\n            }\r\n        }\r\n        else {\r\n            if (dragConstraints && layout) {\r\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\r\n            }\r\n            else {\r\n                this.constraints = false;\r\n            }\r\n        }\r\n        this.elastic = resolveDragElastic(dragElastic);\r\n        /**\r\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\r\n         * from viewport-relative to component-relative.\r\n         */\r\n        if (prevConstraints !== this.constraints &&\r\n            layout &&\r\n            this.constraints &&\r\n            !this.hasMutatedConstraints) {\r\n            eachAxis((axis) => {\r\n                if (this.constraints !== false &&\r\n                    this.getAxisMotionValue(axis)) {\r\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    resolveRefConstraints() {\r\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\r\n        if (!constraints || !isRefObject(constraints))\r\n            return false;\r\n        const constraintsElement = constraints.current;\r\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\r\n        const { projection } = this.visualElement;\r\n        // TODO\r\n        if (!projection || !projection.layout)\r\n            return false;\r\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\r\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\r\n        /**\r\n         * If there's an onMeasureDragConstraints listener we call it and\r\n         * if different constraints are returned, set constraints to that\r\n         */\r\n        if (onMeasureDragConstraints) {\r\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\r\n            this.hasMutatedConstraints = !!userConstraints;\r\n            if (userConstraints) {\r\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\r\n            }\r\n        }\r\n        return measuredConstraints;\r\n    }\r\n    startAnimation(velocity) {\r\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\r\n        const constraints = this.constraints || {};\r\n        const momentumAnimations = eachAxis((axis) => {\r\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\r\n                return;\r\n            }\r\n            let transition = (constraints && constraints[axis]) || {};\r\n            if (dragSnapToOrigin)\r\n                transition = { min: 0, max: 0 };\r\n            /**\r\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\r\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\r\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\r\n             * using the value of `dragElastic`.\r\n             */\r\n            const bounceStiffness = dragElastic ? 200 : 1000000;\r\n            const bounceDamping = dragElastic ? 40 : 10000000;\r\n            const inertia = {\r\n                type: \"inertia\",\r\n                velocity: dragMomentum ? velocity[axis] : 0,\r\n                bounceStiffness,\r\n                bounceDamping,\r\n                timeConstant: 750,\r\n                restDelta: 1,\r\n                restSpeed: 10,\r\n                ...dragTransition,\r\n                ...transition,\r\n            };\r\n            // If we're not animating on an externally-provided `MotionValue` we can use the\r\n            // component's animation controls which will handle interactions with whileHover (etc),\r\n            // otherwise we just have to animate the `MotionValue` itself.\r\n            return this.startAxisValueAnimation(axis, inertia);\r\n        });\r\n        // Run all animations and then resolve the new drag constraints.\r\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\r\n    }\r\n    startAxisValueAnimation(axis, transition) {\r\n        const axisValue = this.getAxisMotionValue(axis);\r\n        addValueToWillChange(this.visualElement, axis);\r\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\r\n    }\r\n    stopAnimation() {\r\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\r\n    }\r\n    pauseAnimation() {\r\n        eachAxis((axis) => this.getAxisMotionValue(axis).animation?.pause());\r\n    }\r\n    getAnimationState(axis) {\r\n        return this.getAxisMotionValue(axis).animation?.state;\r\n    }\r\n    /**\r\n     * Drag works differently depending on which props are provided.\r\n     *\r\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\r\n     * - Otherwise, we apply the delta to the x/y motion values.\r\n     */\r\n    getAxisMotionValue(axis) {\r\n        const dragKey = `_drag${axis.toUpperCase()}`;\r\n        const props = this.visualElement.getProps();\r\n        const externalMotionValue = props[dragKey];\r\n        return externalMotionValue\r\n            ? externalMotionValue\r\n            : this.visualElement.getValue(axis, (props.initial\r\n                ? props.initial[axis]\r\n                : undefined) || 0);\r\n    }\r\n    snapToCursor(point) {\r\n        eachAxis((axis) => {\r\n            const { drag } = this.getProps();\r\n            // If we're not dragging this axis, do an early return.\r\n            if (!shouldDrag(axis, drag, this.currentDirection))\r\n                return;\r\n            const { projection } = this.visualElement;\r\n            const axisValue = this.getAxisMotionValue(axis);\r\n            if (projection && projection.layout) {\r\n                const { min, max } = projection.layout.layoutBox[axis];\r\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * When the viewport resizes we want to check if the measured constraints\r\n     * have changed and, if so, reposition the element within those new constraints\r\n     * relative to where it was before the resize.\r\n     */\r\n    scalePositionWithinConstraints() {\r\n        if (!this.visualElement.current)\r\n            return;\r\n        const { drag, dragConstraints } = this.getProps();\r\n        const { projection } = this.visualElement;\r\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\r\n            return;\r\n        /**\r\n         * Stop current animations as there can be visual glitching if we try to do\r\n         * this mid-animation\r\n         */\r\n        this.stopAnimation();\r\n        /**\r\n         * Record the relative position of the dragged element relative to the\r\n         * constraints box and save as a progress value.\r\n         */\r\n        const boxProgress = { x: 0, y: 0 };\r\n        eachAxis((axis) => {\r\n            const axisValue = this.getAxisMotionValue(axis);\r\n            if (axisValue && this.constraints !== false) {\r\n                const latest = axisValue.get();\r\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\r\n            }\r\n        });\r\n        /**\r\n         * Update the layout of this element and resolve the latest drag constraints\r\n         */\r\n        const { transformTemplate } = this.visualElement.getProps();\r\n        this.visualElement.current.style.transform = transformTemplate\r\n            ? transformTemplate({}, \"\")\r\n            : \"none\";\r\n        projection.root && projection.root.updateScroll();\r\n        projection.updateLayout();\r\n        this.resolveConstraints();\r\n        /**\r\n         * For each axis, calculate the current progress of the layout axis\r\n         * within the new constraints.\r\n         */\r\n        eachAxis((axis) => {\r\n            if (!shouldDrag(axis, drag, null))\r\n                return;\r\n            /**\r\n             * Calculate a new transform based on the previous box progress\r\n             */\r\n            const axisValue = this.getAxisMotionValue(axis);\r\n            const { min, max } = this.constraints[axis];\r\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\r\n        });\r\n    }\r\n    addListeners() {\r\n        if (!this.visualElement.current)\r\n            return;\r\n        elementDragControls.set(this.visualElement, this);\r\n        const element = this.visualElement.current;\r\n        /**\r\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\r\n         */\r\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\r\n            const { drag, dragListener = true } = this.getProps();\r\n            drag && dragListener && this.start(event);\r\n        });\r\n        const measureDragConstraints = () => {\r\n            const { dragConstraints } = this.getProps();\r\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\r\n                this.constraints = this.resolveRefConstraints();\r\n            }\r\n        };\r\n        const { projection } = this.visualElement;\r\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\r\n        if (projection && !projection.layout) {\r\n            projection.root && projection.root.updateScroll();\r\n            projection.updateLayout();\r\n        }\r\n        frame.read(measureDragConstraints);\r\n        /**\r\n         * Attach a window resize listener to scale the draggable target within its defined\r\n         * constraints as the window resizes.\r\n         */\r\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\r\n        /**\r\n         * If the element's layout changes, calculate the delta and apply that to\r\n         * the drag gesture's origin point.\r\n         */\r\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\r\n            if (this.isDragging && hasLayoutChanged) {\r\n                eachAxis((axis) => {\r\n                    const motionValue = this.getAxisMotionValue(axis);\r\n                    if (!motionValue)\r\n                        return;\r\n                    this.originPoint[axis] += delta[axis].translate;\r\n                    motionValue.set(motionValue.get() + delta[axis].translate);\r\n                });\r\n                this.visualElement.render();\r\n            }\r\n        }));\r\n        return () => {\r\n            stopResizeListener();\r\n            stopPointerListener();\r\n            stopMeasureLayoutListener();\r\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\r\n        };\r\n    }\r\n    getProps() {\r\n        const props = this.visualElement.getProps();\r\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\r\n        return {\r\n            ...props,\r\n            drag,\r\n            dragDirectionLock,\r\n            dragPropagation,\r\n            dragConstraints,\r\n            dragElastic,\r\n            dragMomentum,\r\n        };\r\n    }\r\n}\r\nfunction shouldDrag(direction, drag, currentDirection) {\r\n    return ((drag === true || drag === direction) &&\r\n        (currentDirection === null || currentDirection === direction));\r\n}\r\n/**\r\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\r\n * than the provided threshold, return `null`.\r\n *\r\n * @param offset - The x/y offset from origin.\r\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\r\n */\r\nfunction getCurrentDirection(offset, lockThreshold = 10) {\r\n    let direction = null;\r\n    if (Math.abs(offset.y) > lockThreshold) {\r\n        direction = \"y\";\r\n    }\r\n    else if (Math.abs(offset.x) > lockThreshold) {\r\n        direction = \"x\";\r\n    }\r\n    return direction;\r\n}\r\n\r\nexport { VisualElementDragControls, elementDragControls };\r\n","import { Feature } from '../../motion/features/Feature.mjs';\r\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\r\nimport { noop } from '../../../../../motion-utils/dist/es/noop.mjs';\r\n\r\nclass DragGesture extends Feature {\r\n    constructor(node) {\r\n        super(node);\r\n        this.removeGroupControls = noop;\r\n        this.removeListeners = noop;\r\n        this.controls = new VisualElementDragControls(node);\r\n    }\r\n    mount() {\r\n        // If we've been provided a DragControls for manual control over the drag gesture,\r\n        // subscribe this component to it on mount.\r\n        const { dragControls } = this.node.getProps();\r\n        if (dragControls) {\r\n            this.removeGroupControls = dragControls.subscribe(this.controls);\r\n        }\r\n        this.removeListeners = this.controls.addListeners() || noop;\r\n    }\r\n    unmount() {\r\n        this.removeGroupControls();\r\n        this.removeListeners();\r\n    }\r\n}\r\n\r\nexport { DragGesture };\r\n","import { addPointerEvent } from '../../events/add-pointer-event.mjs';\r\nimport { Feature } from '../../motion/features/Feature.mjs';\r\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\r\nimport { PanSession } from './PanSession.mjs';\r\nimport { noop } from '../../../../../motion-utils/dist/es/noop.mjs';\r\nimport { frame } from '../../../../../motion-dom/dist/es/frameloop/frame.mjs';\r\n\r\nconst asyncHandler = (handler) => (event, info) => {\r\n    if (handler) {\r\n        frame.postRender(() => handler(event, info));\r\n    }\r\n};\r\nclass PanGesture extends Feature {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.removePointerDownListener = noop;\r\n    }\r\n    onPointerDown(pointerDownEvent) {\r\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\r\n            transformPagePoint: this.node.getTransformPagePoint(),\r\n            contextWindow: getContextWindow(this.node),\r\n        });\r\n    }\r\n    createPanHandlers() {\r\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\r\n        return {\r\n            onSessionStart: asyncHandler(onPanSessionStart),\r\n            onStart: asyncHandler(onPanStart),\r\n            onMove: onPan,\r\n            onEnd: (event, info) => {\r\n                delete this.session;\r\n                if (onPanEnd) {\r\n                    frame.postRender(() => onPanEnd(event, info));\r\n                }\r\n            },\r\n        };\r\n    }\r\n    mount() {\r\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\r\n    }\r\n    update() {\r\n        this.session && this.session.updateHandlers(this.createPanHandlers());\r\n    }\r\n    unmount() {\r\n        this.removePointerDownListener();\r\n        this.session && this.session.end();\r\n    }\r\n}\r\n\r\nexport { PanGesture };\r\n","/**\r\n * This should only ever be modified on the client otherwise it'll\r\n * persist through server requests. If we need instanced states we\r\n * could lazy-init via root.\r\n */\r\nconst globalProjectionState = {\r\n    /**\r\n     * Global flag as to whether the tree has animated since the last time\r\n     * we resized the window\r\n     */\r\n    hasAnimatedSinceResize: true,\r\n    /**\r\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\r\n     * update will be given a `data-projection-id` attribute.\r\n     */\r\n    hasEverUpdated: false,\r\n};\r\n\r\nexport { globalProjectionState };\r\n","import { px } from '../../../../../motion-dom/dist/es/value/types/numbers/units.mjs';\r\n\r\nfunction pixelsToPercent(pixels, axis) {\r\n    if (axis.max === axis.min)\r\n        return 0;\r\n    return (pixels / (axis.max - axis.min)) * 100;\r\n}\r\n/**\r\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\r\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\r\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\r\n * borderRadius in both states. If we animate between the two in pixels that will trigger\r\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\r\n */\r\nconst correctBorderRadius = {\r\n    correct: (latest, node) => {\r\n        if (!node.target)\r\n            return latest;\r\n        /**\r\n         * If latest is a string, if it's a percentage we can return immediately as it's\r\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\r\n         */\r\n        if (typeof latest === \"string\") {\r\n            if (px.test(latest)) {\r\n                latest = parseFloat(latest);\r\n            }\r\n            else {\r\n                return latest;\r\n            }\r\n        }\r\n        /**\r\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\r\n         * pixel value as a percentage of each axis\r\n         */\r\n        const x = pixelsToPercent(latest, node.target.x);\r\n        const y = pixelsToPercent(latest, node.target.y);\r\n        return `${x}% ${y}%`;\r\n    },\r\n};\r\n\r\nexport { correctBorderRadius, pixelsToPercent };\r\n","import { complex } from '../../../../../motion-dom/dist/es/value/types/complex/index.mjs';\r\nimport { mixNumber } from '../../../../../motion-dom/dist/es/utils/mix/number.mjs';\r\n\r\nconst correctBoxShadow = {\r\n    correct: (latest, { treeScale, projectionDelta }) => {\r\n        const original = latest;\r\n        const shadow = complex.parse(latest);\r\n        // TODO: Doesn't support multiple shadows\r\n        if (shadow.length > 5)\r\n            return original;\r\n        const template = complex.createTransformer(latest);\r\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\r\n        // Calculate the overall context scale\r\n        const xScale = projectionDelta.x.scale * treeScale.x;\r\n        const yScale = projectionDelta.y.scale * treeScale.y;\r\n        shadow[0 + offset] /= xScale;\r\n        shadow[1 + offset] /= yScale;\r\n        /**\r\n         * Ideally we'd correct x and y scales individually, but because blur and\r\n         * spread apply to both we have to take a scale average and apply that instead.\r\n         * We could potentially improve the outcome of this by incorporating the ratio between\r\n         * the two scales.\r\n         */\r\n        const averageScale = mixNumber(xScale, yScale, 0.5);\r\n        // Blur\r\n        if (typeof shadow[2 + offset] === \"number\")\r\n            shadow[2 + offset] /= averageScale;\r\n        // Spread\r\n        if (typeof shadow[3 + offset] === \"number\")\r\n            shadow[3 + offset] /= averageScale;\r\n        return template(shadow);\r\n    },\r\n};\r\n\r\nexport { correctBoxShadow };\r\n","\"use client\";\r\nimport { jsx } from 'react/jsx-runtime';\r\nimport { useContext, Component } from 'react';\r\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\r\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\r\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\r\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\r\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\r\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\r\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\r\nimport { frame } from '../../../../../../motion-dom/dist/es/frameloop/frame.mjs';\r\nimport { microtask } from '../../../../../../motion-dom/dist/es/frameloop/microtask.mjs';\r\n\r\nclass MeasureLayoutWithContext extends Component {\r\n    /**\r\n     * This only mounts projection nodes for components that\r\n     * need measuring, we might want to do it for all components\r\n     * in order to incorporate transforms\r\n     */\r\n    componentDidMount() {\r\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\r\n        const { projection } = visualElement;\r\n        addScaleCorrector(defaultScaleCorrectors);\r\n        if (projection) {\r\n            if (layoutGroup.group)\r\n                layoutGroup.group.add(projection);\r\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\r\n                switchLayoutGroup.register(projection);\r\n            }\r\n            projection.root.didUpdate();\r\n            projection.addEventListener(\"animationComplete\", () => {\r\n                this.safeToRemove();\r\n            });\r\n            projection.setOptions({\r\n                ...projection.options,\r\n                onExitComplete: () => this.safeToRemove(),\r\n            });\r\n        }\r\n        globalProjectionState.hasEverUpdated = true;\r\n    }\r\n    getSnapshotBeforeUpdate(prevProps) {\r\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\r\n        const { projection } = visualElement;\r\n        if (!projection)\r\n            return null;\r\n        /**\r\n         * TODO: We use this data in relegate to determine whether to\r\n         * promote a previous element. There's no guarantee its presence data\r\n         * will have updated by this point - if a bug like this arises it will\r\n         * have to be that we markForRelegation and then find a new lead some other way,\r\n         * perhaps in didUpdate\r\n         */\r\n        projection.isPresent = isPresent;\r\n        if (drag ||\r\n            prevProps.layoutDependency !== layoutDependency ||\r\n            layoutDependency === undefined ||\r\n            prevProps.isPresent !== isPresent) {\r\n            projection.willUpdate();\r\n        }\r\n        else {\r\n            this.safeToRemove();\r\n        }\r\n        if (prevProps.isPresent !== isPresent) {\r\n            if (isPresent) {\r\n                projection.promote();\r\n            }\r\n            else if (!projection.relegate()) {\r\n                /**\r\n                 * If there's another stack member taking over from this one,\r\n                 * it's in charge of the exit animation and therefore should\r\n                 * be in charge of the safe to remove. Otherwise we call it here.\r\n                 */\r\n                frame.postRender(() => {\r\n                    const stack = projection.getStack();\r\n                    if (!stack || !stack.members.length) {\r\n                        this.safeToRemove();\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    componentDidUpdate() {\r\n        const { projection } = this.props.visualElement;\r\n        if (projection) {\r\n            projection.root.didUpdate();\r\n            microtask.postRender(() => {\r\n                if (!projection.currentAnimation && projection.isLead()) {\r\n                    this.safeToRemove();\r\n                }\r\n            });\r\n        }\r\n    }\r\n    componentWillUnmount() {\r\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\r\n        const { projection } = visualElement;\r\n        if (projection) {\r\n            projection.scheduleCheckAfterUnmount();\r\n            if (layoutGroup && layoutGroup.group)\r\n                layoutGroup.group.remove(projection);\r\n            if (promoteContext && promoteContext.deregister)\r\n                promoteContext.deregister(projection);\r\n        }\r\n    }\r\n    safeToRemove() {\r\n        const { safeToRemove } = this.props;\r\n        safeToRemove && safeToRemove();\r\n    }\r\n    render() {\r\n        return null;\r\n    }\r\n}\r\nfunction MeasureLayout(props) {\r\n    const [isPresent, safeToRemove] = usePresence();\r\n    const layoutGroup = useContext(LayoutGroupContext);\r\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\r\n}\r\nconst defaultScaleCorrectors = {\r\n    borderRadius: {\r\n        ...correctBorderRadius,\r\n        applyTo: [\r\n            \"borderTopLeftRadius\",\r\n            \"borderTopRightRadius\",\r\n            \"borderBottomLeftRadius\",\r\n            \"borderBottomRightRadius\",\r\n        ],\r\n    },\r\n    borderTopLeftRadius: correctBorderRadius,\r\n    borderTopRightRadius: correctBorderRadius,\r\n    borderBottomLeftRadius: correctBorderRadius,\r\n    borderBottomRightRadius: correctBorderRadius,\r\n    boxShadow: correctBoxShadow,\r\n};\r\n\r\nexport { MeasureLayout };\r\n","import { animateMotionValue } from '../interfaces/motion-value.mjs';\r\nimport { isMotionValue } from '../../../../../motion-dom/dist/es/value/utils/is-motion-value.mjs';\r\nimport { motionValue } from '../../../../../motion-dom/dist/es/value/index.mjs';\r\n\r\nfunction animateSingleValue(value, keyframes, options) {\r\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\r\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\r\n    return motionValue$1.animation;\r\n}\r\n\r\nexport { animateSingleValue };\r\n","const compareByDepth = (a, b) => a.depth - b.depth;\r\n\r\nexport { compareByDepth };\r\n","import { compareByDepth } from './compare-by-depth.mjs';\r\nimport { addUniqueItem, removeItem } from '../../../../../motion-utils/dist/es/array.mjs';\r\n\r\nclass FlatTree {\r\n    constructor() {\r\n        this.children = [];\r\n        this.isDirty = false;\r\n    }\r\n    add(child) {\r\n        addUniqueItem(this.children, child);\r\n        this.isDirty = true;\r\n    }\r\n    remove(child) {\r\n        removeItem(this.children, child);\r\n        this.isDirty = true;\r\n    }\r\n    forEach(callback) {\r\n        this.isDirty && this.children.sort(compareByDepth);\r\n        this.isDirty = false;\r\n        this.children.forEach(callback);\r\n    }\r\n}\r\n\r\nexport { FlatTree };\r\n","import { time } from '../../../../motion-dom/dist/es/frameloop/sync-time.mjs';\r\nimport { frame, cancelFrame } from '../../../../motion-dom/dist/es/frameloop/frame.mjs';\r\nimport { secondsToMilliseconds } from '../../../../motion-utils/dist/es/time-conversion.mjs';\r\n\r\n/**\r\n * Timeout defined in ms\r\n */\r\nfunction delay(callback, timeout) {\r\n    const start = time.now();\r\n    const checkElapsed = ({ timestamp }) => {\r\n        const elapsed = timestamp - start;\r\n        if (elapsed >= timeout) {\r\n            cancelFrame(checkElapsed);\r\n            callback(elapsed - timeout);\r\n        }\r\n    };\r\n    frame.setup(checkElapsed, true);\r\n    return () => cancelFrame(checkElapsed);\r\n}\r\nfunction delayInSeconds(callback, timeout) {\r\n    return delay(callback, secondsToMilliseconds(timeout));\r\n}\r\n\r\nexport { delay, delayInSeconds };\r\n","import { mixNumber } from '../../../../../motion-dom/dist/es/utils/mix/number.mjs';\r\nimport { percent, px } from '../../../../../motion-dom/dist/es/value/types/numbers/units.mjs';\r\nimport { progress } from '../../../../../motion-utils/dist/es/progress.mjs';\r\nimport { circOut } from '../../../../../motion-utils/dist/es/easing/circ.mjs';\r\nimport { noop } from '../../../../../motion-utils/dist/es/noop.mjs';\r\n\r\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\r\nconst numBorders = borders.length;\r\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\r\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\r\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\r\n    if (shouldCrossfadeOpacity) {\r\n        target.opacity = mixNumber(0, lead.opacity ?? 1, easeCrossfadeIn(progress));\r\n        target.opacityExit = mixNumber(follow.opacity ?? 1, 0, easeCrossfadeOut(progress));\r\n    }\r\n    else if (isOnlyMember) {\r\n        target.opacity = mixNumber(follow.opacity ?? 1, lead.opacity ?? 1, progress);\r\n    }\r\n    /**\r\n     * Mix border radius\r\n     */\r\n    for (let i = 0; i < numBorders; i++) {\r\n        const borderLabel = `border${borders[i]}Radius`;\r\n        let followRadius = getRadius(follow, borderLabel);\r\n        let leadRadius = getRadius(lead, borderLabel);\r\n        if (followRadius === undefined && leadRadius === undefined)\r\n            continue;\r\n        followRadius || (followRadius = 0);\r\n        leadRadius || (leadRadius = 0);\r\n        const canMix = followRadius === 0 ||\r\n            leadRadius === 0 ||\r\n            isPx(followRadius) === isPx(leadRadius);\r\n        if (canMix) {\r\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\r\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\r\n                target[borderLabel] += \"%\";\r\n            }\r\n        }\r\n        else {\r\n            target[borderLabel] = leadRadius;\r\n        }\r\n    }\r\n    /**\r\n     * Mix rotation\r\n     */\r\n    if (follow.rotate || lead.rotate) {\r\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\r\n    }\r\n}\r\nfunction getRadius(values, radiusName) {\r\n    return values[radiusName] !== undefined\r\n        ? values[radiusName]\r\n        : values.borderRadius;\r\n}\r\n// /**\r\n//  * We only want to mix the background color if there's a follow element\r\n//  * that we're not crossfading opacity between. For instance with switch\r\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\r\n//  * element being animated but also cuts down on the number of paints triggered\r\n//  * for elements where opacity is doing that work for us.\r\n//  */\r\n// if (\r\n//     !hasFollowElement &&\r\n//     latestLeadValues.backgroundColor &&\r\n//     latestFollowValues.backgroundColor\r\n// ) {\r\n//     /**\r\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\r\n//      * We could probably create a mixer that runs at the start of the animation but\r\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\r\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\r\n//      */\r\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\r\n//         latestFollowValues.backgroundColor as string,\r\n//         latestLeadValues.backgroundColor as string\r\n//     )(p)\r\n// }\r\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\r\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\r\nfunction compress(min, max, easing) {\r\n    return (p) => {\r\n        // Could replace ifs with clamp\r\n        if (p < min)\r\n            return 0;\r\n        if (p > max)\r\n            return 1;\r\n        return easing(progress(min, max, p));\r\n    };\r\n}\r\n\r\nexport { mixValues };\r\n","/**\r\n * Reset an axis to the provided origin box.\r\n *\r\n * This is a mutative operation.\r\n */\r\nfunction copyAxisInto(axis, originAxis) {\r\n    axis.min = originAxis.min;\r\n    axis.max = originAxis.max;\r\n}\r\n/**\r\n * Reset a box to the provided origin box.\r\n *\r\n * This is a mutative operation.\r\n */\r\nfunction copyBoxInto(box, originBox) {\r\n    copyAxisInto(box.x, originBox.x);\r\n    copyAxisInto(box.y, originBox.y);\r\n}\r\n/**\r\n * Reset a delta to the provided origin box.\r\n *\r\n * This is a mutative operation.\r\n */\r\nfunction copyAxisDeltaInto(delta, originDelta) {\r\n    delta.translate = originDelta.translate;\r\n    delta.scale = originDelta.scale;\r\n    delta.originPoint = originDelta.originPoint;\r\n    delta.origin = originDelta.origin;\r\n}\r\n\r\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\r\n","import { scalePoint } from './delta-apply.mjs';\r\nimport { percent } from '../../../../../motion-dom/dist/es/value/types/numbers/units.mjs';\r\nimport { mixNumber } from '../../../../../motion-dom/dist/es/utils/mix/number.mjs';\r\n\r\n/**\r\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\r\n */\r\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\r\n    point -= translate;\r\n    point = scalePoint(point, 1 / scale, originPoint);\r\n    if (boxScale !== undefined) {\r\n        point = scalePoint(point, 1 / boxScale, originPoint);\r\n    }\r\n    return point;\r\n}\r\n/**\r\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\r\n */\r\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\r\n    if (percent.test(translate)) {\r\n        translate = parseFloat(translate);\r\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\r\n        translate = relativeProgress - sourceAxis.min;\r\n    }\r\n    if (typeof translate !== \"number\")\r\n        return;\r\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\r\n    if (axis === originAxis)\r\n        originPoint -= translate;\r\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\r\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\r\n}\r\n/**\r\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\r\n * and acts as a bridge between motion values and removeAxisDelta\r\n */\r\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\r\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\r\n}\r\n/**\r\n * The names of the motion values we want to apply as translation, scale and origin.\r\n */\r\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\r\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\r\n/**\r\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\r\n * and acts as a bridge between motion values and removeAxisDelta\r\n */\r\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\r\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\r\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\r\n}\r\n\r\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\r\n","import { calcLength } from './delta-calc.mjs';\r\n\r\nfunction isAxisDeltaZero(delta) {\r\n    return delta.translate === 0 && delta.scale === 1;\r\n}\r\nfunction isDeltaZero(delta) {\r\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\r\n}\r\nfunction axisEquals(a, b) {\r\n    return a.min === b.min && a.max === b.max;\r\n}\r\nfunction boxEquals(a, b) {\r\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\r\n}\r\nfunction axisEqualsRounded(a, b) {\r\n    return (Math.round(a.min) === Math.round(b.min) &&\r\n        Math.round(a.max) === Math.round(b.max));\r\n}\r\nfunction boxEqualsRounded(a, b) {\r\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\r\n}\r\nfunction aspectRatio(box) {\r\n    return calcLength(box.x) / calcLength(box.y);\r\n}\r\nfunction axisDeltaEquals(a, b) {\r\n    return (a.translate === b.translate &&\r\n        a.scale === b.scale &&\r\n        a.originPoint === b.originPoint);\r\n}\r\n\r\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\r\n","import { addUniqueItem, removeItem } from '../../../../../motion-utils/dist/es/array.mjs';\r\n\r\nclass NodeStack {\r\n    constructor() {\r\n        this.members = [];\r\n    }\r\n    add(node) {\r\n        addUniqueItem(this.members, node);\r\n        node.scheduleRender();\r\n    }\r\n    remove(node) {\r\n        removeItem(this.members, node);\r\n        if (node === this.prevLead) {\r\n            this.prevLead = undefined;\r\n        }\r\n        if (node === this.lead) {\r\n            const prevLead = this.members[this.members.length - 1];\r\n            if (prevLead) {\r\n                this.promote(prevLead);\r\n            }\r\n        }\r\n    }\r\n    relegate(node) {\r\n        const indexOfNode = this.members.findIndex((member) => node === member);\r\n        if (indexOfNode === 0)\r\n            return false;\r\n        /**\r\n         * Find the next projection node that is present\r\n         */\r\n        let prevLead;\r\n        for (let i = indexOfNode; i >= 0; i--) {\r\n            const member = this.members[i];\r\n            if (member.isPresent !== false) {\r\n                prevLead = member;\r\n                break;\r\n            }\r\n        }\r\n        if (prevLead) {\r\n            this.promote(prevLead);\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    promote(node, preserveFollowOpacity) {\r\n        const prevLead = this.lead;\r\n        if (node === prevLead)\r\n            return;\r\n        this.prevLead = prevLead;\r\n        this.lead = node;\r\n        node.show();\r\n        if (prevLead) {\r\n            prevLead.instance && prevLead.scheduleRender();\r\n            node.scheduleRender();\r\n            node.resumeFrom = prevLead;\r\n            if (preserveFollowOpacity) {\r\n                node.resumeFrom.preserveOpacity = true;\r\n            }\r\n            if (prevLead.snapshot) {\r\n                node.snapshot = prevLead.snapshot;\r\n                node.snapshot.latestValues =\r\n                    prevLead.animationValues || prevLead.latestValues;\r\n            }\r\n            if (node.root && node.root.isUpdating) {\r\n                node.isLayoutDirty = true;\r\n            }\r\n            const { crossfade } = node.options;\r\n            if (crossfade === false) {\r\n                prevLead.hide();\r\n            }\r\n            /**\r\n             * TODO:\r\n             *   - Test border radius when previous node was deleted\r\n             *   - boxShadow mixing\r\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\r\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\r\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\r\n             * ---\r\n             *   - Crossfade opacity of root nodes\r\n             *   - layoutId changes after animation\r\n             *   - layoutId changes mid animation\r\n             */\r\n        }\r\n    }\r\n    exitAnimationComplete() {\r\n        this.members.forEach((node) => {\r\n            const { options, resumingFrom } = node;\r\n            options.onExitComplete && options.onExitComplete();\r\n            if (resumingFrom) {\r\n                resumingFrom.options.onExitComplete &&\r\n                    resumingFrom.options.onExitComplete();\r\n            }\r\n        });\r\n    }\r\n    scheduleRender() {\r\n        this.members.forEach((node) => {\r\n            node.instance && node.scheduleRender(false);\r\n        });\r\n    }\r\n    /**\r\n     * Clear any leads that have been removed this render to prevent them from being\r\n     * used in future animations and to prevent memory leaks\r\n     */\r\n    removeLeadSnapshot() {\r\n        if (this.lead && this.lead.snapshot) {\r\n            this.lead.snapshot = undefined;\r\n        }\r\n    }\r\n}\r\n\r\nexport { NodeStack };\r\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\r\n    let transform = \"\";\r\n    /**\r\n     * The translations we use to calculate are always relative to the viewport coordinate space.\r\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\r\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\r\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\r\n     */\r\n    const xTranslate = delta.x.translate / treeScale.x;\r\n    const yTranslate = delta.y.translate / treeScale.y;\r\n    const zTranslate = latestTransform?.z || 0;\r\n    if (xTranslate || yTranslate || zTranslate) {\r\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\r\n    }\r\n    /**\r\n     * Apply scale correction for the tree transform.\r\n     * This will apply scale to the screen-orientated axes.\r\n     */\r\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\r\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\r\n    }\r\n    if (latestTransform) {\r\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\r\n        if (transformPerspective)\r\n            transform = `perspective(${transformPerspective}px) ${transform}`;\r\n        if (rotate)\r\n            transform += `rotate(${rotate}deg) `;\r\n        if (rotateX)\r\n            transform += `rotateX(${rotateX}deg) `;\r\n        if (rotateY)\r\n            transform += `rotateY(${rotateY}deg) `;\r\n        if (skewX)\r\n            transform += `skewX(${skewX}deg) `;\r\n        if (skewY)\r\n            transform += `skewY(${skewY}deg) `;\r\n    }\r\n    /**\r\n     * Apply scale to match the size of the element to the size we want it.\r\n     * This will apply scale to the element-orientated axes.\r\n     */\r\n    const elementScaleX = delta.x.scale * treeScale.x;\r\n    const elementScaleY = delta.y.scale * treeScale.y;\r\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\r\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\r\n    }\r\n    return transform || \"none\";\r\n}\r\n\r\nexport { buildProjectionTransform };\r\n","import { isObject } from '../../../../motion-utils/dist/es/is-object.mjs';\r\n\r\n/**\r\n * Checks if an element is an SVG element in a way\r\n * that works across iframes\r\n */\r\nfunction isSVGElement(element) {\r\n    return isObject(element) && \"ownerSVGElement\" in element;\r\n}\r\n\r\nexport { isSVGElement };\r\n","import { isSVGElement } from './is-svg-element.mjs';\r\n\r\n/**\r\n * Checks if an element is specifically an SVGSVGElement (the root SVG element)\r\n * in a way that works across iframes\r\n */\r\nfunction isSVGSVGElement(element) {\r\n    return isSVGElement(element) && element.tagName === \"svg\";\r\n}\r\n\r\nexport { isSVGSVGElement };\r\n","import { animateSingleValue } from '../../animation/animate/single-value.mjs';\r\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\r\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\r\nimport { delay } from '../../utils/delay.mjs';\r\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\r\nimport { mixValues } from '../animation/mix-values.mjs';\r\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\r\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\r\nimport { calcLength, calcRelativePosition, calcRelativeBox, calcBoxDelta, isNear } from '../geometry/delta-calc.mjs';\r\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\r\nimport { createBox, createDelta } from '../geometry/models.mjs';\r\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\r\nimport { NodeStack } from '../shared/stack.mjs';\r\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\r\nimport { buildProjectionTransform } from '../styles/transform.mjs';\r\nimport { eachAxis } from '../utils/each-axis.mjs';\r\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\r\nimport { globalProjectionState } from './state.mjs';\r\nimport { statsBuffer } from '../../../../../motion-dom/dist/es/stats/buffer.mjs';\r\nimport { SubscriptionManager } from '../../../../../motion-utils/dist/es/subscription-manager.mjs';\r\nimport { isSVGElement } from '../../../../../motion-dom/dist/es/utils/is-svg-element.mjs';\r\nimport { isSVGSVGElement } from '../../../../../motion-dom/dist/es/utils/is-svg-svg-element.mjs';\r\nimport { getValueTransition } from '../../../../../motion-dom/dist/es/animation/utils/get-value-transition.mjs';\r\nimport { cancelFrame, frameData, frameSteps, frame } from '../../../../../motion-dom/dist/es/frameloop/frame.mjs';\r\nimport { time } from '../../../../../motion-dom/dist/es/frameloop/sync-time.mjs';\r\nimport { clamp } from '../../../../../motion-utils/dist/es/clamp.mjs';\r\nimport { microtask } from '../../../../../motion-dom/dist/es/frameloop/microtask.mjs';\r\nimport { activeAnimations } from '../../../../../motion-dom/dist/es/stats/animation-count.mjs';\r\nimport { motionValue } from '../../../../../motion-dom/dist/es/value/index.mjs';\r\nimport { mixNumber } from '../../../../../motion-dom/dist/es/utils/mix/number.mjs';\r\nimport { noop } from '../../../../../motion-utils/dist/es/noop.mjs';\r\n\r\nconst metrics = {\r\n    nodes: 0,\r\n    calculatedTargetDeltas: 0,\r\n    calculatedProjections: 0,\r\n};\r\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\r\nconst hiddenVisibility = { visibility: \"hidden\" };\r\n/**\r\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\r\n * which has a noticeable difference in spring animations\r\n */\r\nconst animationTarget = 1000;\r\nlet id = 0;\r\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\r\n    const { latestValues } = visualElement;\r\n    // Record the distorting transform and then temporarily set it to 0\r\n    if (latestValues[key]) {\r\n        values[key] = latestValues[key];\r\n        visualElement.setStaticValue(key, 0);\r\n        if (sharedAnimationValues) {\r\n            sharedAnimationValues[key] = 0;\r\n        }\r\n    }\r\n}\r\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\r\n    projectionNode.hasCheckedOptimisedAppear = true;\r\n    if (projectionNode.root === projectionNode)\r\n        return;\r\n    const { visualElement } = projectionNode.options;\r\n    if (!visualElement)\r\n        return;\r\n    const appearId = getOptimisedAppearId(visualElement);\r\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\r\n        const { layout, layoutId } = projectionNode.options;\r\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\r\n    }\r\n    const { parent } = projectionNode;\r\n    if (parent && !parent.hasCheckedOptimisedAppear) {\r\n        cancelTreeOptimisedTransformAnimations(parent);\r\n    }\r\n}\r\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\r\n    return class ProjectionNode {\r\n        constructor(latestValues = {}, parent = defaultParent?.()) {\r\n            /**\r\n             * A unique ID generated for every projection node.\r\n             */\r\n            this.id = id++;\r\n            /**\r\n             * An id that represents a unique session instigated by startUpdate.\r\n             */\r\n            this.animationId = 0;\r\n            /**\r\n             * A Set containing all this component's children. This is used to iterate\r\n             * through the children.\r\n             *\r\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\r\n             */\r\n            this.children = new Set();\r\n            /**\r\n             * Options for the node. We use this to configure what kind of layout animations\r\n             * we should perform (if any).\r\n             */\r\n            this.options = {};\r\n            /**\r\n             * We use this to detect when its safe to shut down part of a projection tree.\r\n             * We have to keep projecting children for scale correction and relative projection\r\n             * until all their parents stop performing layout animations.\r\n             */\r\n            this.isTreeAnimating = false;\r\n            this.isAnimationBlocked = false;\r\n            /**\r\n             * Flag to true if we think this layout has been changed. We can't always know this,\r\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\r\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\r\n             * and if one node is dirtied, they all are.\r\n             */\r\n            this.isLayoutDirty = false;\r\n            /**\r\n             * Flag to true if we think the projection calculations for this node needs\r\n             * recalculating as a result of an updated transform or layout animation.\r\n             */\r\n            this.isProjectionDirty = false;\r\n            /**\r\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\r\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\r\n             */\r\n            this.isSharedProjectionDirty = false;\r\n            /**\r\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\r\n             * respected by shared nodes.\r\n             */\r\n            this.isTransformDirty = false;\r\n            /**\r\n             * Block layout updates for instant layout transitions throughout the tree.\r\n             */\r\n            this.updateManuallyBlocked = false;\r\n            this.updateBlockedByResize = false;\r\n            /**\r\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\r\n             * call.\r\n             */\r\n            this.isUpdating = false;\r\n            /**\r\n             * If this is an SVG element we currently disable projection transforms\r\n             */\r\n            this.isSVG = false;\r\n            /**\r\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\r\n             * its projection styles.\r\n             */\r\n            this.needsReset = false;\r\n            /**\r\n             * Flags whether this node should have its transform reset prior to measuring.\r\n             */\r\n            this.shouldResetTransform = false;\r\n            /**\r\n             * Store whether this node has been checked for optimised appear animations. As\r\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\r\n             * this makes sure we only check each path once, stopping at nodes that\r\n             * have already been checked.\r\n             */\r\n            this.hasCheckedOptimisedAppear = false;\r\n            /**\r\n             * An object representing the calculated contextual/accumulated/tree scale.\r\n             * This will be used to scale calculcated projection transforms, as these are\r\n             * calculated in screen-space but need to be scaled for elements to layoutly\r\n             * make it to their calculated destinations.\r\n             *\r\n             * TODO: Lazy-init\r\n             */\r\n            this.treeScale = { x: 1, y: 1 };\r\n            /**\r\n             *\r\n             */\r\n            this.eventHandlers = new Map();\r\n            this.hasTreeAnimated = false;\r\n            // Note: Currently only running on root node\r\n            this.updateScheduled = false;\r\n            this.scheduleUpdate = () => this.update();\r\n            this.projectionUpdateScheduled = false;\r\n            this.checkUpdateFailed = () => {\r\n                if (this.isUpdating) {\r\n                    this.isUpdating = false;\r\n                    this.clearAllSnapshots();\r\n                }\r\n            };\r\n            /**\r\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\r\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\r\n             * the next step.\r\n             */\r\n            this.updateProjection = () => {\r\n                this.projectionUpdateScheduled = false;\r\n                /**\r\n                 * Reset debug counts. Manually resetting rather than creating a new\r\n                 * object each frame.\r\n                 */\r\n                if (statsBuffer.value) {\r\n                    metrics.nodes =\r\n                        metrics.calculatedTargetDeltas =\r\n                            metrics.calculatedProjections =\r\n                                0;\r\n                }\r\n                this.nodes.forEach(propagateDirtyNodes);\r\n                this.nodes.forEach(resolveTargetDelta);\r\n                this.nodes.forEach(calcProjection);\r\n                this.nodes.forEach(cleanDirtyNodes);\r\n                if (statsBuffer.addProjectionMetrics) {\r\n                    statsBuffer.addProjectionMetrics(metrics);\r\n                }\r\n            };\r\n            /**\r\n             * Frame calculations\r\n             */\r\n            this.resolvedRelativeTargetAt = 0.0;\r\n            this.hasProjected = false;\r\n            this.isVisible = true;\r\n            this.animationProgress = 0;\r\n            /**\r\n             * Shared layout\r\n             */\r\n            // TODO Only running on root node\r\n            this.sharedNodes = new Map();\r\n            this.latestValues = latestValues;\r\n            this.root = parent ? parent.root || parent : this;\r\n            this.path = parent ? [...parent.path, parent] : [];\r\n            this.parent = parent;\r\n            this.depth = parent ? parent.depth + 1 : 0;\r\n            for (let i = 0; i < this.path.length; i++) {\r\n                this.path[i].shouldResetTransform = true;\r\n            }\r\n            if (this.root === this)\r\n                this.nodes = new FlatTree();\r\n        }\r\n        addEventListener(name, handler) {\r\n            if (!this.eventHandlers.has(name)) {\r\n                this.eventHandlers.set(name, new SubscriptionManager());\r\n            }\r\n            return this.eventHandlers.get(name).add(handler);\r\n        }\r\n        notifyListeners(name, ...args) {\r\n            const subscriptionManager = this.eventHandlers.get(name);\r\n            subscriptionManager && subscriptionManager.notify(...args);\r\n        }\r\n        hasListeners(name) {\r\n            return this.eventHandlers.has(name);\r\n        }\r\n        /**\r\n         * Lifecycles\r\n         */\r\n        mount(instance) {\r\n            if (this.instance)\r\n                return;\r\n            this.isSVG = isSVGElement(instance) && !isSVGSVGElement(instance);\r\n            this.instance = instance;\r\n            const { layoutId, layout, visualElement } = this.options;\r\n            if (visualElement && !visualElement.current) {\r\n                visualElement.mount(instance);\r\n            }\r\n            this.root.nodes.add(this);\r\n            this.parent && this.parent.children.add(this);\r\n            if (this.root.hasTreeAnimated && (layout || layoutId)) {\r\n                this.isLayoutDirty = true;\r\n            }\r\n            if (attachResizeListener) {\r\n                let cancelDelay;\r\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\r\n                attachResizeListener(instance, () => {\r\n                    this.root.updateBlockedByResize = true;\r\n                    cancelDelay && cancelDelay();\r\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\r\n                    if (globalProjectionState.hasAnimatedSinceResize) {\r\n                        globalProjectionState.hasAnimatedSinceResize = false;\r\n                        this.nodes.forEach(finishAnimation);\r\n                    }\r\n                });\r\n            }\r\n            if (layoutId) {\r\n                this.root.registerSharedNode(layoutId, this);\r\n            }\r\n            // Only register the handler if it requires layout animation\r\n            if (this.options.animate !== false &&\r\n                visualElement &&\r\n                (layoutId || layout)) {\r\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeLayoutChanged, layout: newLayout, }) => {\r\n                    if (this.isTreeAnimationBlocked()) {\r\n                        this.target = undefined;\r\n                        this.relativeTarget = undefined;\r\n                        return;\r\n                    }\r\n                    // TODO: Check here if an animation exists\r\n                    const layoutTransition = this.options.transition ||\r\n                        visualElement.getDefaultTransition() ||\r\n                        defaultLayoutTransition;\r\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\r\n                    /**\r\n                     * The target layout of the element might stay the same,\r\n                     * but its position relative to its parent has changed.\r\n                     */\r\n                    const hasTargetChanged = !this.targetLayout ||\r\n                        !boxEqualsRounded(this.targetLayout, newLayout);\r\n                    /*\r\n                     * Note: Disabled to fix relative animations always triggering new\r\n                     * layout animations. If this causes further issues, we can try\r\n                     * a different approach to detecting relative target changes.\r\n                     */\r\n                    // || hasRelativeLayoutChanged\r\n                    /**\r\n                     * If the layout hasn't seemed to have changed, it might be that the\r\n                     * element is visually in the same place in the document but its position\r\n                     * relative to its parent has indeed changed. So here we check for that.\r\n                     */\r\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeLayoutChanged;\r\n                    if (this.options.layoutRoot ||\r\n                        this.resumeFrom ||\r\n                        hasOnlyRelativeTargetChanged ||\r\n                        (hasLayoutChanged &&\r\n                            (hasTargetChanged || !this.currentAnimation))) {\r\n                        if (this.resumeFrom) {\r\n                            this.resumingFrom = this.resumeFrom;\r\n                            this.resumingFrom.resumingFrom = undefined;\r\n                        }\r\n                        const animationOptions = {\r\n                            ...getValueTransition(layoutTransition, \"layout\"),\r\n                            onPlay: onLayoutAnimationStart,\r\n                            onComplete: onLayoutAnimationComplete,\r\n                        };\r\n                        if (visualElement.shouldReduceMotion ||\r\n                            this.options.layoutRoot) {\r\n                            animationOptions.delay = 0;\r\n                            animationOptions.type = false;\r\n                        }\r\n                        this.startAnimation(animationOptions);\r\n                        /**\r\n                         * Set animation origin after starting animation to avoid layout jump\r\n                         * caused by stopping previous layout animation\r\n                         */\r\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\r\n                    }\r\n                    else {\r\n                        /**\r\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\r\n                         * finish it immediately. Otherwise it will be animating from a location\r\n                         * that was probably never commited to screen and look like a jumpy box.\r\n                         */\r\n                        if (!hasLayoutChanged) {\r\n                            finishAnimation(this);\r\n                        }\r\n                        if (this.isLead() && this.options.onExitComplete) {\r\n                            this.options.onExitComplete();\r\n                        }\r\n                    }\r\n                    this.targetLayout = newLayout;\r\n                });\r\n            }\r\n        }\r\n        unmount() {\r\n            this.options.layoutId && this.willUpdate();\r\n            this.root.nodes.remove(this);\r\n            const stack = this.getStack();\r\n            stack && stack.remove(this);\r\n            this.parent && this.parent.children.delete(this);\r\n            this.instance = undefined;\r\n            this.eventHandlers.clear();\r\n            cancelFrame(this.updateProjection);\r\n        }\r\n        // only on the root\r\n        blockUpdate() {\r\n            this.updateManuallyBlocked = true;\r\n        }\r\n        unblockUpdate() {\r\n            this.updateManuallyBlocked = false;\r\n        }\r\n        isUpdateBlocked() {\r\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\r\n        }\r\n        isTreeAnimationBlocked() {\r\n            return (this.isAnimationBlocked ||\r\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\r\n                false);\r\n        }\r\n        // Note: currently only running on root node\r\n        startUpdate() {\r\n            if (this.isUpdateBlocked())\r\n                return;\r\n            this.isUpdating = true;\r\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\r\n            this.animationId++;\r\n        }\r\n        getTransformTemplate() {\r\n            const { visualElement } = this.options;\r\n            return visualElement && visualElement.getProps().transformTemplate;\r\n        }\r\n        willUpdate(shouldNotifyListeners = true) {\r\n            this.root.hasTreeAnimated = true;\r\n            if (this.root.isUpdateBlocked()) {\r\n                this.options.onExitComplete && this.options.onExitComplete();\r\n                return;\r\n            }\r\n            /**\r\n             * If we're running optimised appear animations then these must be\r\n             * cancelled before measuring the DOM. This is so we can measure\r\n             * the true layout of the element rather than the WAAPI animation\r\n             * which will be unaffected by the resetSkewAndRotate step.\r\n             *\r\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\r\n             * between other snapshot reads which will cause unnecessary style recalculations.\r\n             * This has to happen here though, as we don't yet know which nodes will need\r\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\r\n             * if a layout animation measurement is actually going to be affected by them.\r\n             */\r\n            if (window.MotionCancelOptimisedAnimation &&\r\n                !this.hasCheckedOptimisedAppear) {\r\n                cancelTreeOptimisedTransformAnimations(this);\r\n            }\r\n            !this.root.isUpdating && this.root.startUpdate();\r\n            if (this.isLayoutDirty)\r\n                return;\r\n            this.isLayoutDirty = true;\r\n            for (let i = 0; i < this.path.length; i++) {\r\n                const node = this.path[i];\r\n                node.shouldResetTransform = true;\r\n                node.updateScroll(\"snapshot\");\r\n                if (node.options.layoutRoot) {\r\n                    node.willUpdate(false);\r\n                }\r\n            }\r\n            const { layoutId, layout } = this.options;\r\n            if (layoutId === undefined && !layout)\r\n                return;\r\n            const transformTemplate = this.getTransformTemplate();\r\n            this.prevTransformTemplateValue = transformTemplate\r\n                ? transformTemplate(this.latestValues, \"\")\r\n                : undefined;\r\n            this.updateSnapshot();\r\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\r\n        }\r\n        update() {\r\n            this.updateScheduled = false;\r\n            const updateWasBlocked = this.isUpdateBlocked();\r\n            // When doing an instant transition, we skip the layout update,\r\n            // but should still clean up the measurements so that the next\r\n            // snapshot could be taken correctly.\r\n            if (updateWasBlocked) {\r\n                this.unblockUpdate();\r\n                this.clearAllSnapshots();\r\n                this.nodes.forEach(clearMeasurements);\r\n                return;\r\n            }\r\n            if (!this.isUpdating) {\r\n                this.nodes.forEach(clearIsLayoutDirty);\r\n            }\r\n            this.isUpdating = false;\r\n            /**\r\n             * Write\r\n             */\r\n            this.nodes.forEach(resetTransformStyle);\r\n            /**\r\n             * Read ==================\r\n             */\r\n            // Update layout measurements of updated children\r\n            this.nodes.forEach(updateLayout);\r\n            /**\r\n             * Write\r\n             */\r\n            // Notify listeners that the layout is updated\r\n            this.nodes.forEach(notifyLayoutUpdate);\r\n            this.clearAllSnapshots();\r\n            /**\r\n             * Manually flush any pending updates. Ideally\r\n             * we could leave this to the following requestAnimationFrame but this seems\r\n             * to leave a flash of incorrectly styled content.\r\n             */\r\n            const now = time.now();\r\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\r\n            frameData.timestamp = now;\r\n            frameData.isProcessing = true;\r\n            frameSteps.update.process(frameData);\r\n            frameSteps.preRender.process(frameData);\r\n            frameSteps.render.process(frameData);\r\n            frameData.isProcessing = false;\r\n        }\r\n        didUpdate() {\r\n            if (!this.updateScheduled) {\r\n                this.updateScheduled = true;\r\n                microtask.read(this.scheduleUpdate);\r\n            }\r\n        }\r\n        clearAllSnapshots() {\r\n            this.nodes.forEach(clearSnapshot);\r\n            this.sharedNodes.forEach(removeLeadSnapshots);\r\n        }\r\n        scheduleUpdateProjection() {\r\n            if (!this.projectionUpdateScheduled) {\r\n                this.projectionUpdateScheduled = true;\r\n                frame.preRender(this.updateProjection, false, true);\r\n            }\r\n        }\r\n        scheduleCheckAfterUnmount() {\r\n            /**\r\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\r\n             * we manually call didUpdate to give a chance to the siblings to animate.\r\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\r\n             */\r\n            frame.postRender(() => {\r\n                if (this.isLayoutDirty) {\r\n                    this.root.didUpdate();\r\n                }\r\n                else {\r\n                    this.root.checkUpdateFailed();\r\n                }\r\n            });\r\n        }\r\n        /**\r\n         * Update measurements\r\n         */\r\n        updateSnapshot() {\r\n            if (this.snapshot || !this.instance)\r\n                return;\r\n            this.snapshot = this.measure();\r\n            if (this.snapshot &&\r\n                !calcLength(this.snapshot.measuredBox.x) &&\r\n                !calcLength(this.snapshot.measuredBox.y)) {\r\n                this.snapshot = undefined;\r\n            }\r\n        }\r\n        updateLayout() {\r\n            if (!this.instance)\r\n                return;\r\n            // TODO: Incorporate into a forwarded scroll offset\r\n            this.updateScroll();\r\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\r\n                !this.isLayoutDirty) {\r\n                return;\r\n            }\r\n            /**\r\n             * When a node is mounted, it simply resumes from the prevLead's\r\n             * snapshot instead of taking a new one, but the ancestors scroll\r\n             * might have updated while the prevLead is unmounted. We need to\r\n             * update the scroll again to make sure the layout we measure is\r\n             * up to date.\r\n             */\r\n            if (this.resumeFrom && !this.resumeFrom.instance) {\r\n                for (let i = 0; i < this.path.length; i++) {\r\n                    const node = this.path[i];\r\n                    node.updateScroll();\r\n                }\r\n            }\r\n            const prevLayout = this.layout;\r\n            this.layout = this.measure(false);\r\n            this.layoutCorrected = createBox();\r\n            this.isLayoutDirty = false;\r\n            this.projectionDelta = undefined;\r\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\r\n            const { visualElement } = this.options;\r\n            visualElement &&\r\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\r\n        }\r\n        updateScroll(phase = \"measure\") {\r\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\r\n            if (this.scroll &&\r\n                this.scroll.animationId === this.root.animationId &&\r\n                this.scroll.phase === phase) {\r\n                needsMeasurement = false;\r\n            }\r\n            if (needsMeasurement && this.instance) {\r\n                const isRoot = checkIsScrollRoot(this.instance);\r\n                this.scroll = {\r\n                    animationId: this.root.animationId,\r\n                    phase,\r\n                    isRoot,\r\n                    offset: measureScroll(this.instance),\r\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\r\n                };\r\n            }\r\n        }\r\n        resetTransform() {\r\n            if (!resetTransform)\r\n                return;\r\n            const isResetRequested = this.isLayoutDirty ||\r\n                this.shouldResetTransform ||\r\n                this.options.alwaysMeasureLayout;\r\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\r\n            const transformTemplate = this.getTransformTemplate();\r\n            const transformTemplateValue = transformTemplate\r\n                ? transformTemplate(this.latestValues, \"\")\r\n                : undefined;\r\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\r\n            if (isResetRequested &&\r\n                this.instance &&\r\n                (hasProjection ||\r\n                    hasTransform(this.latestValues) ||\r\n                    transformTemplateHasChanged)) {\r\n                resetTransform(this.instance, transformTemplateValue);\r\n                this.shouldResetTransform = false;\r\n                this.scheduleRender();\r\n            }\r\n        }\r\n        measure(removeTransform = true) {\r\n            const pageBox = this.measurePageBox();\r\n            let layoutBox = this.removeElementScroll(pageBox);\r\n            /**\r\n             * Measurements taken during the pre-render stage\r\n             * still have transforms applied so we remove them\r\n             * via calculation.\r\n             */\r\n            if (removeTransform) {\r\n                layoutBox = this.removeTransform(layoutBox);\r\n            }\r\n            roundBox(layoutBox);\r\n            return {\r\n                animationId: this.root.animationId,\r\n                measuredBox: pageBox,\r\n                layoutBox,\r\n                latestValues: {},\r\n                source: this.id,\r\n            };\r\n        }\r\n        measurePageBox() {\r\n            const { visualElement } = this.options;\r\n            if (!visualElement)\r\n                return createBox();\r\n            const box = visualElement.measureViewportBox();\r\n            const wasInScrollRoot = this.scroll?.wasRoot || this.path.some(checkNodeWasScrollRoot);\r\n            if (!wasInScrollRoot) {\r\n                // Remove viewport scroll to give page-relative coordinates\r\n                const { scroll } = this.root;\r\n                if (scroll) {\r\n                    translateAxis(box.x, scroll.offset.x);\r\n                    translateAxis(box.y, scroll.offset.y);\r\n                }\r\n            }\r\n            return box;\r\n        }\r\n        removeElementScroll(box) {\r\n            const boxWithoutScroll = createBox();\r\n            copyBoxInto(boxWithoutScroll, box);\r\n            if (this.scroll?.wasRoot) {\r\n                return boxWithoutScroll;\r\n            }\r\n            /**\r\n             * Performance TODO: Keep a cumulative scroll offset down the tree\r\n             * rather than loop back up the path.\r\n             */\r\n            for (let i = 0; i < this.path.length; i++) {\r\n                const node = this.path[i];\r\n                const { scroll, options } = node;\r\n                if (node !== this.root && scroll && options.layoutScroll) {\r\n                    /**\r\n                     * If this is a new scroll root, we want to remove all previous scrolls\r\n                     * from the viewport box.\r\n                     */\r\n                    if (scroll.wasRoot) {\r\n                        copyBoxInto(boxWithoutScroll, box);\r\n                    }\r\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\r\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\r\n                }\r\n            }\r\n            return boxWithoutScroll;\r\n        }\r\n        applyTransform(box, transformOnly = false) {\r\n            const withTransforms = createBox();\r\n            copyBoxInto(withTransforms, box);\r\n            for (let i = 0; i < this.path.length; i++) {\r\n                const node = this.path[i];\r\n                if (!transformOnly &&\r\n                    node.options.layoutScroll &&\r\n                    node.scroll &&\r\n                    node !== node.root) {\r\n                    transformBox(withTransforms, {\r\n                        x: -node.scroll.offset.x,\r\n                        y: -node.scroll.offset.y,\r\n                    });\r\n                }\r\n                if (!hasTransform(node.latestValues))\r\n                    continue;\r\n                transformBox(withTransforms, node.latestValues);\r\n            }\r\n            if (hasTransform(this.latestValues)) {\r\n                transformBox(withTransforms, this.latestValues);\r\n            }\r\n            return withTransforms;\r\n        }\r\n        removeTransform(box) {\r\n            const boxWithoutTransform = createBox();\r\n            copyBoxInto(boxWithoutTransform, box);\r\n            for (let i = 0; i < this.path.length; i++) {\r\n                const node = this.path[i];\r\n                if (!node.instance)\r\n                    continue;\r\n                if (!hasTransform(node.latestValues))\r\n                    continue;\r\n                hasScale(node.latestValues) && node.updateSnapshot();\r\n                const sourceBox = createBox();\r\n                const nodeBox = node.measurePageBox();\r\n                copyBoxInto(sourceBox, nodeBox);\r\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\r\n            }\r\n            if (hasTransform(this.latestValues)) {\r\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\r\n            }\r\n            return boxWithoutTransform;\r\n        }\r\n        setTargetDelta(delta) {\r\n            this.targetDelta = delta;\r\n            this.root.scheduleUpdateProjection();\r\n            this.isProjectionDirty = true;\r\n        }\r\n        setOptions(options) {\r\n            this.options = {\r\n                ...this.options,\r\n                ...options,\r\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\r\n            };\r\n        }\r\n        clearMeasurements() {\r\n            this.scroll = undefined;\r\n            this.layout = undefined;\r\n            this.snapshot = undefined;\r\n            this.prevTransformTemplateValue = undefined;\r\n            this.targetDelta = undefined;\r\n            this.target = undefined;\r\n            this.isLayoutDirty = false;\r\n        }\r\n        forceRelativeParentToResolveTarget() {\r\n            if (!this.relativeParent)\r\n                return;\r\n            /**\r\n             * If the parent target isn't up-to-date, force it to update.\r\n             * This is an unfortunate de-optimisation as it means any updating relative\r\n             * projection will cause all the relative parents to recalculate back\r\n             * up the tree.\r\n             */\r\n            if (this.relativeParent.resolvedRelativeTargetAt !==\r\n                frameData.timestamp) {\r\n                this.relativeParent.resolveTargetDelta(true);\r\n            }\r\n        }\r\n        resolveTargetDelta(forceRecalculation = false) {\r\n            /**\r\n             * Once the dirty status of nodes has been spread through the tree, we also\r\n             * need to check if we have a shared node of a different depth that has itself\r\n             * been dirtied.\r\n             */\r\n            const lead = this.getLead();\r\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\r\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\r\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\r\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\r\n            /**\r\n             * We don't use transform for this step of processing so we don't\r\n             * need to check whether any nodes have changed transform.\r\n             */\r\n            const canSkip = !(forceRecalculation ||\r\n                (isShared && this.isSharedProjectionDirty) ||\r\n                this.isProjectionDirty ||\r\n                this.parent?.isProjectionDirty ||\r\n                this.attemptToResolveRelativeTarget ||\r\n                this.root.updateBlockedByResize);\r\n            if (canSkip)\r\n                return;\r\n            const { layout, layoutId } = this.options;\r\n            /**\r\n             * If we have no layout, we can't perform projection, so early return\r\n             */\r\n            if (!this.layout || !(layout || layoutId))\r\n                return;\r\n            this.resolvedRelativeTargetAt = frameData.timestamp;\r\n            /**\r\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\r\n             * a relativeParent. This will allow a component to perform scale correction\r\n             * even if no animation has started.\r\n             */\r\n            if (!this.targetDelta && !this.relativeTarget) {\r\n                const relativeParent = this.getClosestProjectingParent();\r\n                if (relativeParent &&\r\n                    relativeParent.layout &&\r\n                    this.animationProgress !== 1) {\r\n                    this.relativeParent = relativeParent;\r\n                    this.forceRelativeParentToResolveTarget();\r\n                    this.relativeTarget = createBox();\r\n                    this.relativeTargetOrigin = createBox();\r\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\r\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\r\n                }\r\n                else {\r\n                    this.relativeParent = this.relativeTarget = undefined;\r\n                }\r\n            }\r\n            /**\r\n             * If we have no relative target or no target delta our target isn't valid\r\n             * for this frame.\r\n             */\r\n            if (!this.relativeTarget && !this.targetDelta)\r\n                return;\r\n            /**\r\n             * Lazy-init target data structure\r\n             */\r\n            if (!this.target) {\r\n                this.target = createBox();\r\n                this.targetWithTransforms = createBox();\r\n            }\r\n            /**\r\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\r\n             */\r\n            if (this.relativeTarget &&\r\n                this.relativeTargetOrigin &&\r\n                this.relativeParent &&\r\n                this.relativeParent.target) {\r\n                this.forceRelativeParentToResolveTarget();\r\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\r\n                /**\r\n                 * If we've only got a targetDelta, resolve it into a target\r\n                 */\r\n            }\r\n            else if (this.targetDelta) {\r\n                if (Boolean(this.resumingFrom)) {\r\n                    // TODO: This is creating a new object every frame\r\n                    this.target = this.applyTransform(this.layout.layoutBox);\r\n                }\r\n                else {\r\n                    copyBoxInto(this.target, this.layout.layoutBox);\r\n                }\r\n                applyBoxDelta(this.target, this.targetDelta);\r\n            }\r\n            else {\r\n                /**\r\n                 * If no target, use own layout as target\r\n                 */\r\n                copyBoxInto(this.target, this.layout.layoutBox);\r\n            }\r\n            /**\r\n             * If we've been told to attempt to resolve a relative target, do so.\r\n             */\r\n            if (this.attemptToResolveRelativeTarget) {\r\n                this.attemptToResolveRelativeTarget = false;\r\n                const relativeParent = this.getClosestProjectingParent();\r\n                if (relativeParent &&\r\n                    Boolean(relativeParent.resumingFrom) ===\r\n                        Boolean(this.resumingFrom) &&\r\n                    !relativeParent.options.layoutScroll &&\r\n                    relativeParent.target &&\r\n                    this.animationProgress !== 1) {\r\n                    this.relativeParent = relativeParent;\r\n                    this.forceRelativeParentToResolveTarget();\r\n                    this.relativeTarget = createBox();\r\n                    this.relativeTargetOrigin = createBox();\r\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\r\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\r\n                }\r\n                else {\r\n                    this.relativeParent = this.relativeTarget = undefined;\r\n                }\r\n            }\r\n            /**\r\n             * Increase debug counter for resolved target deltas\r\n             */\r\n            if (statsBuffer.value) {\r\n                metrics.calculatedTargetDeltas++;\r\n            }\r\n        }\r\n        getClosestProjectingParent() {\r\n            if (!this.parent ||\r\n                hasScale(this.parent.latestValues) ||\r\n                has2DTranslate(this.parent.latestValues)) {\r\n                return undefined;\r\n            }\r\n            if (this.parent.isProjecting()) {\r\n                return this.parent;\r\n            }\r\n            else {\r\n                return this.parent.getClosestProjectingParent();\r\n            }\r\n        }\r\n        isProjecting() {\r\n            return Boolean((this.relativeTarget ||\r\n                this.targetDelta ||\r\n                this.options.layoutRoot) &&\r\n                this.layout);\r\n        }\r\n        calcProjection() {\r\n            const lead = this.getLead();\r\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\r\n            let canSkip = true;\r\n            /**\r\n             * If this is a normal layout animation and neither this node nor its nearest projecting\r\n             * is dirty then we can't skip.\r\n             */\r\n            if (this.isProjectionDirty || this.parent?.isProjectionDirty) {\r\n                canSkip = false;\r\n            }\r\n            /**\r\n             * If this is a shared layout animation and this node's shared projection is dirty then\r\n             * we can't skip.\r\n             */\r\n            if (isShared &&\r\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\r\n                canSkip = false;\r\n            }\r\n            /**\r\n             * If we have resolved the target this frame we must recalculate the\r\n             * projection to ensure it visually represents the internal calculations.\r\n             */\r\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\r\n                canSkip = false;\r\n            }\r\n            if (canSkip)\r\n                return;\r\n            const { layout, layoutId } = this.options;\r\n            /**\r\n             * If this section of the tree isn't animating we can\r\n             * delete our target sources for the following frame.\r\n             */\r\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\r\n                this.currentAnimation ||\r\n                this.pendingAnimation);\r\n            if (!this.isTreeAnimating) {\r\n                this.targetDelta = this.relativeTarget = undefined;\r\n            }\r\n            if (!this.layout || !(layout || layoutId))\r\n                return;\r\n            /**\r\n             * Reset the corrected box with the latest values from box, as we're then going\r\n             * to perform mutative operations on it.\r\n             */\r\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\r\n            /**\r\n             * Record previous tree scales before updating.\r\n             */\r\n            const prevTreeScaleX = this.treeScale.x;\r\n            const prevTreeScaleY = this.treeScale.y;\r\n            /**\r\n             * Apply all the parent deltas to this box to produce the corrected box. This\r\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\r\n             */\r\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\r\n            /**\r\n             * If this layer needs to perform scale correction but doesn't have a target,\r\n             * use the layout as the target.\r\n             */\r\n            if (lead.layout &&\r\n                !lead.target &&\r\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\r\n                lead.target = lead.layout.layoutBox;\r\n                lead.targetWithTransforms = createBox();\r\n            }\r\n            const { target } = lead;\r\n            if (!target) {\r\n                /**\r\n                 * If we don't have a target to project into, but we were previously\r\n                 * projecting, we want to remove the stored transform and schedule\r\n                 * a render to ensure the elements reflect the removed transform.\r\n                 */\r\n                if (this.prevProjectionDelta) {\r\n                    this.createProjectionDeltas();\r\n                    this.scheduleRender();\r\n                }\r\n                return;\r\n            }\r\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\r\n                this.createProjectionDeltas();\r\n            }\r\n            else {\r\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\r\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\r\n            }\r\n            /**\r\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\r\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\r\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\r\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\r\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\r\n             * to allow people to choose whether these styles are corrected based on just the\r\n             * layout reprojection or the final bounding box.\r\n             */\r\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\r\n            if (this.treeScale.x !== prevTreeScaleX ||\r\n                this.treeScale.y !== prevTreeScaleY ||\r\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\r\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\r\n                this.hasProjected = true;\r\n                this.scheduleRender();\r\n                this.notifyListeners(\"projectionUpdate\", target);\r\n            }\r\n            /**\r\n             * Increase debug counter for recalculated projections\r\n             */\r\n            if (statsBuffer.value) {\r\n                metrics.calculatedProjections++;\r\n            }\r\n        }\r\n        hide() {\r\n            this.isVisible = false;\r\n            // TODO: Schedule render\r\n        }\r\n        show() {\r\n            this.isVisible = true;\r\n            // TODO: Schedule render\r\n        }\r\n        scheduleRender(notifyAll = true) {\r\n            this.options.visualElement?.scheduleRender();\r\n            if (notifyAll) {\r\n                const stack = this.getStack();\r\n                stack && stack.scheduleRender();\r\n            }\r\n            if (this.resumingFrom && !this.resumingFrom.instance) {\r\n                this.resumingFrom = undefined;\r\n            }\r\n        }\r\n        createProjectionDeltas() {\r\n            this.prevProjectionDelta = createDelta();\r\n            this.projectionDelta = createDelta();\r\n            this.projectionDeltaWithTransform = createDelta();\r\n        }\r\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\r\n            const snapshot = this.snapshot;\r\n            const snapshotLatestValues = snapshot ? snapshot.latestValues : {};\r\n            const mixedValues = { ...this.latestValues };\r\n            const targetDelta = createDelta();\r\n            if (!this.relativeParent ||\r\n                !this.relativeParent.options.layoutRoot) {\r\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\r\n            }\r\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\r\n            const relativeLayout = createBox();\r\n            const snapshotSource = snapshot ? snapshot.source : undefined;\r\n            const layoutSource = this.layout ? this.layout.source : undefined;\r\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\r\n            const stack = this.getStack();\r\n            const isOnlyMember = !stack || stack.members.length <= 1;\r\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\r\n                !isOnlyMember &&\r\n                this.options.crossfade === true &&\r\n                !this.path.some(hasOpacityCrossfade));\r\n            this.animationProgress = 0;\r\n            let prevRelativeTarget;\r\n            this.mixTargetDelta = (latest) => {\r\n                const progress = latest / 1000;\r\n                mixAxisDelta(targetDelta.x, delta.x, progress);\r\n                mixAxisDelta(targetDelta.y, delta.y, progress);\r\n                this.setTargetDelta(targetDelta);\r\n                if (this.relativeTarget &&\r\n                    this.relativeTargetOrigin &&\r\n                    this.layout &&\r\n                    this.relativeParent &&\r\n                    this.relativeParent.layout) {\r\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\r\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\r\n                    /**\r\n                     * If this is an unchanged relative target we can consider the\r\n                     * projection not dirty.\r\n                     */\r\n                    if (prevRelativeTarget &&\r\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\r\n                        this.isProjectionDirty = false;\r\n                    }\r\n                    if (!prevRelativeTarget)\r\n                        prevRelativeTarget = createBox();\r\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\r\n                }\r\n                if (isSharedLayoutAnimation) {\r\n                    this.animationValues = mixedValues;\r\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\r\n                }\r\n                this.root.scheduleUpdateProjection();\r\n                this.scheduleRender();\r\n                this.animationProgress = progress;\r\n            };\r\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\r\n        }\r\n        startAnimation(options) {\r\n            this.notifyListeners(\"animationStart\");\r\n            this.currentAnimation?.stop();\r\n            this.resumingFrom?.currentAnimation?.stop();\r\n            if (this.pendingAnimation) {\r\n                cancelFrame(this.pendingAnimation);\r\n                this.pendingAnimation = undefined;\r\n            }\r\n            /**\r\n             * Start the animation in the next frame to have a frame with progress 0,\r\n             * where the target is the same as when the animation started, so we can\r\n             * calculate the relative positions correctly for instant transitions.\r\n             */\r\n            this.pendingAnimation = frame.update(() => {\r\n                globalProjectionState.hasAnimatedSinceResize = true;\r\n                activeAnimations.layout++;\r\n                this.motionValue || (this.motionValue = motionValue(0));\r\n                this.currentAnimation = animateSingleValue(this.motionValue, [0, 1000], {\r\n                    ...options,\r\n                    isSync: true,\r\n                    onUpdate: (latest) => {\r\n                        this.mixTargetDelta(latest);\r\n                        options.onUpdate && options.onUpdate(latest);\r\n                    },\r\n                    onStop: () => {\r\n                        activeAnimations.layout--;\r\n                    },\r\n                    onComplete: () => {\r\n                        activeAnimations.layout--;\r\n                        options.onComplete && options.onComplete();\r\n                        this.completeAnimation();\r\n                    },\r\n                });\r\n                if (this.resumingFrom) {\r\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\r\n                }\r\n                this.pendingAnimation = undefined;\r\n            });\r\n        }\r\n        completeAnimation() {\r\n            if (this.resumingFrom) {\r\n                this.resumingFrom.currentAnimation = undefined;\r\n                this.resumingFrom.preserveOpacity = undefined;\r\n            }\r\n            const stack = this.getStack();\r\n            stack && stack.exitAnimationComplete();\r\n            this.resumingFrom =\r\n                this.currentAnimation =\r\n                    this.animationValues =\r\n                        undefined;\r\n            this.notifyListeners(\"animationComplete\");\r\n        }\r\n        finishAnimation() {\r\n            if (this.currentAnimation) {\r\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\r\n                this.currentAnimation.stop();\r\n            }\r\n            this.completeAnimation();\r\n        }\r\n        applyTransformsToTarget() {\r\n            const lead = this.getLead();\r\n            let { targetWithTransforms, target, layout, latestValues } = lead;\r\n            if (!targetWithTransforms || !target || !layout)\r\n                return;\r\n            /**\r\n             * If we're only animating position, and this element isn't the lead element,\r\n             * then instead of projecting into the lead box we instead want to calculate\r\n             * a new target that aligns the two boxes but maintains the layout shape.\r\n             */\r\n            if (this !== lead &&\r\n                this.layout &&\r\n                layout &&\r\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\r\n                target = this.target || createBox();\r\n                const xLength = calcLength(this.layout.layoutBox.x);\r\n                target.x.min = lead.target.x.min;\r\n                target.x.max = target.x.min + xLength;\r\n                const yLength = calcLength(this.layout.layoutBox.y);\r\n                target.y.min = lead.target.y.min;\r\n                target.y.max = target.y.min + yLength;\r\n            }\r\n            copyBoxInto(targetWithTransforms, target);\r\n            /**\r\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\r\n             * This is the final box that we will then project into by calculating a transform delta and\r\n             * applying it to the corrected box.\r\n             */\r\n            transformBox(targetWithTransforms, latestValues);\r\n            /**\r\n             * Update the delta between the corrected box and the final target box, after\r\n             * user-set transforms are applied to it. This will be used by the renderer to\r\n             * create a transform style that will reproject the element from its layout layout\r\n             * into the desired bounding box.\r\n             */\r\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\r\n        }\r\n        registerSharedNode(layoutId, node) {\r\n            if (!this.sharedNodes.has(layoutId)) {\r\n                this.sharedNodes.set(layoutId, new NodeStack());\r\n            }\r\n            const stack = this.sharedNodes.get(layoutId);\r\n            stack.add(node);\r\n            const config = node.options.initialPromotionConfig;\r\n            node.promote({\r\n                transition: config ? config.transition : undefined,\r\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\r\n                    ? config.shouldPreserveFollowOpacity(node)\r\n                    : undefined,\r\n            });\r\n        }\r\n        isLead() {\r\n            const stack = this.getStack();\r\n            return stack ? stack.lead === this : true;\r\n        }\r\n        getLead() {\r\n            const { layoutId } = this.options;\r\n            return layoutId ? this.getStack()?.lead || this : this;\r\n        }\r\n        getPrevLead() {\r\n            const { layoutId } = this.options;\r\n            return layoutId ? this.getStack()?.prevLead : undefined;\r\n        }\r\n        getStack() {\r\n            const { layoutId } = this.options;\r\n            if (layoutId)\r\n                return this.root.sharedNodes.get(layoutId);\r\n        }\r\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\r\n            const stack = this.getStack();\r\n            if (stack)\r\n                stack.promote(this, preserveFollowOpacity);\r\n            if (needsReset) {\r\n                this.projectionDelta = undefined;\r\n                this.needsReset = true;\r\n            }\r\n            if (transition)\r\n                this.setOptions({ transition });\r\n        }\r\n        relegate() {\r\n            const stack = this.getStack();\r\n            if (stack) {\r\n                return stack.relegate(this);\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n        resetSkewAndRotation() {\r\n            const { visualElement } = this.options;\r\n            if (!visualElement)\r\n                return;\r\n            // If there's no detected skew or rotation values, we can early return without a forced render.\r\n            let hasDistortingTransform = false;\r\n            /**\r\n             * An unrolled check for rotation values. Most elements don't have any rotation and\r\n             * skipping the nested loop and new object creation is 50% faster.\r\n             */\r\n            const { latestValues } = visualElement;\r\n            if (latestValues.z ||\r\n                latestValues.rotate ||\r\n                latestValues.rotateX ||\r\n                latestValues.rotateY ||\r\n                latestValues.rotateZ ||\r\n                latestValues.skewX ||\r\n                latestValues.skewY) {\r\n                hasDistortingTransform = true;\r\n            }\r\n            // If there's no distorting values, we don't need to do any more.\r\n            if (!hasDistortingTransform)\r\n                return;\r\n            const resetValues = {};\r\n            if (latestValues.z) {\r\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\r\n            }\r\n            // Check the skew and rotate value of all axes and reset to 0\r\n            for (let i = 0; i < transformAxes.length; i++) {\r\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\r\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\r\n            }\r\n            // Force a render of this element to apply the transform with all skews and rotations\r\n            // set to 0.\r\n            visualElement.render();\r\n            // Put back all the values we reset\r\n            for (const key in resetValues) {\r\n                visualElement.setStaticValue(key, resetValues[key]);\r\n                if (this.animationValues) {\r\n                    this.animationValues[key] = resetValues[key];\r\n                }\r\n            }\r\n            // Schedule a render for the next frame. This ensures we won't visually\r\n            // see the element with the reset rotate value applied.\r\n            visualElement.scheduleRender();\r\n        }\r\n        getProjectionStyles(styleProp) {\r\n            if (!this.instance || this.isSVG)\r\n                return undefined;\r\n            if (!this.isVisible) {\r\n                return hiddenVisibility;\r\n            }\r\n            const styles = {\r\n                visibility: \"\",\r\n            };\r\n            const transformTemplate = this.getTransformTemplate();\r\n            if (this.needsReset) {\r\n                this.needsReset = false;\r\n                styles.opacity = \"\";\r\n                styles.pointerEvents =\r\n                    resolveMotionValue(styleProp?.pointerEvents) || \"\";\r\n                styles.transform = transformTemplate\r\n                    ? transformTemplate(this.latestValues, \"\")\r\n                    : \"none\";\r\n                return styles;\r\n            }\r\n            const lead = this.getLead();\r\n            if (!this.projectionDelta || !this.layout || !lead.target) {\r\n                const emptyStyles = {};\r\n                if (this.options.layoutId) {\r\n                    emptyStyles.opacity =\r\n                        this.latestValues.opacity !== undefined\r\n                            ? this.latestValues.opacity\r\n                            : 1;\r\n                    emptyStyles.pointerEvents =\r\n                        resolveMotionValue(styleProp?.pointerEvents) || \"\";\r\n                }\r\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\r\n                    emptyStyles.transform = transformTemplate\r\n                        ? transformTemplate({}, \"\")\r\n                        : \"none\";\r\n                    this.hasProjected = false;\r\n                }\r\n                return emptyStyles;\r\n            }\r\n            const valuesToRender = lead.animationValues || lead.latestValues;\r\n            this.applyTransformsToTarget();\r\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\r\n            if (transformTemplate) {\r\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\r\n            }\r\n            const { x, y } = this.projectionDelta;\r\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\r\n            if (lead.animationValues) {\r\n                /**\r\n                 * If the lead component is animating, assign this either the entering/leaving\r\n                 * opacity\r\n                 */\r\n                styles.opacity =\r\n                    lead === this\r\n                        ? valuesToRender.opacity ??\r\n                            this.latestValues.opacity ??\r\n                            1\r\n                        : this.preserveOpacity\r\n                            ? this.latestValues.opacity\r\n                            : valuesToRender.opacityExit;\r\n            }\r\n            else {\r\n                /**\r\n                 * Or we're not animating at all, set the lead component to its layout\r\n                 * opacity and other components to hidden.\r\n                 */\r\n                styles.opacity =\r\n                    lead === this\r\n                        ? valuesToRender.opacity !== undefined\r\n                            ? valuesToRender.opacity\r\n                            : \"\"\r\n                        : valuesToRender.opacityExit !== undefined\r\n                            ? valuesToRender.opacityExit\r\n                            : 0;\r\n            }\r\n            /**\r\n             * Apply scale correction\r\n             */\r\n            for (const key in scaleCorrectors) {\r\n                if (valuesToRender[key] === undefined)\r\n                    continue;\r\n                const { correct, applyTo, isCSSVariable } = scaleCorrectors[key];\r\n                /**\r\n                 * Only apply scale correction to the value if we have an\r\n                 * active projection transform. Otherwise these values become\r\n                 * vulnerable to distortion if the element changes size without\r\n                 * a corresponding layout animation.\r\n                 */\r\n                const corrected = styles.transform === \"none\"\r\n                    ? valuesToRender[key]\r\n                    : correct(valuesToRender[key], lead);\r\n                if (applyTo) {\r\n                    const num = applyTo.length;\r\n                    for (let i = 0; i < num; i++) {\r\n                        styles[applyTo[i]] = corrected;\r\n                    }\r\n                }\r\n                else {\r\n                    // If this is a CSS variable, set it directly on the instance.\r\n                    // Replacing this function from creating styles to setting them\r\n                    // would be a good place to remove per frame object creation\r\n                    if (isCSSVariable) {\r\n                        this.options.visualElement.renderState.vars[key] = corrected;\r\n                    }\r\n                    else {\r\n                        styles[key] = corrected;\r\n                    }\r\n                }\r\n            }\r\n            /**\r\n             * Disable pointer events on follow components. This is to ensure\r\n             * that if a follow component covers a lead component it doesn't block\r\n             * pointer events on the lead.\r\n             */\r\n            if (this.options.layoutId) {\r\n                styles.pointerEvents =\r\n                    lead === this\r\n                        ? resolveMotionValue(styleProp?.pointerEvents) || \"\"\r\n                        : \"none\";\r\n            }\r\n            return styles;\r\n        }\r\n        clearSnapshot() {\r\n            this.resumeFrom = this.snapshot = undefined;\r\n        }\r\n        // Only run on root\r\n        resetTree() {\r\n            this.root.nodes.forEach((node) => node.currentAnimation?.stop());\r\n            this.root.nodes.forEach(clearMeasurements);\r\n            this.root.sharedNodes.clear();\r\n        }\r\n    };\r\n}\r\nfunction updateLayout(node) {\r\n    node.updateLayout();\r\n}\r\nfunction notifyLayoutUpdate(node) {\r\n    const snapshot = node.resumeFrom?.snapshot || node.snapshot;\r\n    if (node.isLead() &&\r\n        node.layout &&\r\n        snapshot &&\r\n        node.hasListeners(\"didUpdate\")) {\r\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\r\n        const { animationType } = node.options;\r\n        const isShared = snapshot.source !== node.layout.source;\r\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\r\n        // animations for instance if layout=\"size\" and an element has only changed position\r\n        if (animationType === \"size\") {\r\n            eachAxis((axis) => {\r\n                const axisSnapshot = isShared\r\n                    ? snapshot.measuredBox[axis]\r\n                    : snapshot.layoutBox[axis];\r\n                const length = calcLength(axisSnapshot);\r\n                axisSnapshot.min = layout[axis].min;\r\n                axisSnapshot.max = axisSnapshot.min + length;\r\n            });\r\n        }\r\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\r\n            eachAxis((axis) => {\r\n                const axisSnapshot = isShared\r\n                    ? snapshot.measuredBox[axis]\r\n                    : snapshot.layoutBox[axis];\r\n                const length = calcLength(layout[axis]);\r\n                axisSnapshot.max = axisSnapshot.min + length;\r\n                /**\r\n                 * Ensure relative target gets resized and rerendererd\r\n                 */\r\n                if (node.relativeTarget && !node.currentAnimation) {\r\n                    node.isProjectionDirty = true;\r\n                    node.relativeTarget[axis].max =\r\n                        node.relativeTarget[axis].min + length;\r\n                }\r\n            });\r\n        }\r\n        const layoutDelta = createDelta();\r\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\r\n        const visualDelta = createDelta();\r\n        if (isShared) {\r\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\r\n        }\r\n        else {\r\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\r\n        }\r\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\r\n        let hasRelativeLayoutChanged = false;\r\n        if (!node.resumeFrom) {\r\n            const relativeParent = node.getClosestProjectingParent();\r\n            /**\r\n             * If the relativeParent is itself resuming from a different element then\r\n             * the relative snapshot is not relavent\r\n             */\r\n            if (relativeParent && !relativeParent.resumeFrom) {\r\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\r\n                if (parentSnapshot && parentLayout) {\r\n                    const relativeSnapshot = createBox();\r\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\r\n                    const relativeLayout = createBox();\r\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\r\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\r\n                        hasRelativeLayoutChanged = true;\r\n                    }\r\n                    if (relativeParent.options.layoutRoot) {\r\n                        node.relativeTarget = relativeLayout;\r\n                        node.relativeTargetOrigin = relativeSnapshot;\r\n                        node.relativeParent = relativeParent;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        node.notifyListeners(\"didUpdate\", {\r\n            layout,\r\n            snapshot,\r\n            delta: visualDelta,\r\n            layoutDelta,\r\n            hasLayoutChanged,\r\n            hasRelativeLayoutChanged,\r\n        });\r\n    }\r\n    else if (node.isLead()) {\r\n        const { onExitComplete } = node.options;\r\n        onExitComplete && onExitComplete();\r\n    }\r\n    /**\r\n     * Clearing transition\r\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\r\n     * and why we need it at all\r\n     */\r\n    node.options.transition = undefined;\r\n}\r\nfunction propagateDirtyNodes(node) {\r\n    /**\r\n     * Increase debug counter for nodes encountered this frame\r\n     */\r\n    if (statsBuffer.value) {\r\n        metrics.nodes++;\r\n    }\r\n    if (!node.parent)\r\n        return;\r\n    /**\r\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\r\n     * no performance impact but it will allow the next child that *is* projecting\r\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\r\n     * correcting.\r\n     */\r\n    if (!node.isProjecting()) {\r\n        node.isProjectionDirty = node.parent.isProjectionDirty;\r\n    }\r\n    /**\r\n     * Propagate isSharedProjectionDirty and isTransformDirty\r\n     * throughout the whole tree. A future revision can take another look at\r\n     * this but for safety we still recalcualte shared nodes.\r\n     */\r\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\r\n        node.parent.isProjectionDirty ||\r\n        node.parent.isSharedProjectionDirty));\r\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\r\n}\r\nfunction cleanDirtyNodes(node) {\r\n    node.isProjectionDirty =\r\n        node.isSharedProjectionDirty =\r\n            node.isTransformDirty =\r\n                false;\r\n}\r\nfunction clearSnapshot(node) {\r\n    node.clearSnapshot();\r\n}\r\nfunction clearMeasurements(node) {\r\n    node.clearMeasurements();\r\n}\r\nfunction clearIsLayoutDirty(node) {\r\n    node.isLayoutDirty = false;\r\n}\r\nfunction resetTransformStyle(node) {\r\n    const { visualElement } = node.options;\r\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\r\n        visualElement.notify(\"BeforeLayoutMeasure\");\r\n    }\r\n    node.resetTransform();\r\n}\r\nfunction finishAnimation(node) {\r\n    node.finishAnimation();\r\n    node.targetDelta = node.relativeTarget = node.target = undefined;\r\n    node.isProjectionDirty = true;\r\n}\r\nfunction resolveTargetDelta(node) {\r\n    node.resolveTargetDelta();\r\n}\r\nfunction calcProjection(node) {\r\n    node.calcProjection();\r\n}\r\nfunction resetSkewAndRotation(node) {\r\n    node.resetSkewAndRotation();\r\n}\r\nfunction removeLeadSnapshots(stack) {\r\n    stack.removeLeadSnapshot();\r\n}\r\nfunction mixAxisDelta(output, delta, p) {\r\n    output.translate = mixNumber(delta.translate, 0, p);\r\n    output.scale = mixNumber(delta.scale, 1, p);\r\n    output.origin = delta.origin;\r\n    output.originPoint = delta.originPoint;\r\n}\r\nfunction mixAxis(output, from, to, p) {\r\n    output.min = mixNumber(from.min, to.min, p);\r\n    output.max = mixNumber(from.max, to.max, p);\r\n}\r\nfunction mixBox(output, from, to, p) {\r\n    mixAxis(output.x, from.x, to.x, p);\r\n    mixAxis(output.y, from.y, to.y, p);\r\n}\r\nfunction hasOpacityCrossfade(node) {\r\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\r\n}\r\nconst defaultLayoutTransition = {\r\n    duration: 0.45,\r\n    ease: [0.4, 0, 0.1, 1],\r\n};\r\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\r\n    navigator.userAgent &&\r\n    navigator.userAgent.toLowerCase().includes(string);\r\n/**\r\n * Measured bounding boxes must be rounded in Safari and\r\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\r\n * can appear to jump.\r\n */\r\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\r\n    ? Math.round\r\n    : noop;\r\nfunction roundAxis(axis) {\r\n    // Round to the nearest .5 pixels to support subpixel layouts\r\n    axis.min = roundPoint(axis.min);\r\n    axis.max = roundPoint(axis.max);\r\n}\r\nfunction roundBox(box) {\r\n    roundAxis(box.x);\r\n    roundAxis(box.y);\r\n}\r\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\r\n    return (animationType === \"position\" ||\r\n        (animationType === \"preserve-aspect\" &&\r\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\r\n}\r\nfunction checkNodeWasScrollRoot(node) {\r\n    return node !== node.root && node.scroll?.wasRoot;\r\n}\r\n\r\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\r\n","import { createProjectionNode } from './create-projection-node.mjs';\r\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\r\n\r\nconst DocumentProjectionNode = createProjectionNode({\r\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\r\n    measureScroll: () => ({\r\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\r\n        y: document.documentElement.scrollTop || document.body.scrollTop,\r\n    }),\r\n    checkIsScrollRoot: () => true,\r\n});\r\n\r\nexport { DocumentProjectionNode };\r\n","import { createProjectionNode } from './create-projection-node.mjs';\r\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\r\n\r\nconst rootProjectionNode = {\r\n    current: undefined,\r\n};\r\nconst HTMLProjectionNode = createProjectionNode({\r\n    measureScroll: (instance) => ({\r\n        x: instance.scrollLeft,\r\n        y: instance.scrollTop,\r\n    }),\r\n    defaultParent: () => {\r\n        if (!rootProjectionNode.current) {\r\n            const documentNode = new DocumentProjectionNode({});\r\n            documentNode.mount(window);\r\n            documentNode.setOptions({ layoutScroll: true });\r\n            rootProjectionNode.current = documentNode;\r\n        }\r\n        return rootProjectionNode.current;\r\n    },\r\n    resetTransform: (instance, value) => {\r\n        instance.style.transform = value !== undefined ? value : \"none\";\r\n    },\r\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\r\n});\r\n\r\nexport { HTMLProjectionNode, rootProjectionNode };\r\n","import { DragGesture } from '../../gestures/drag/index.mjs';\r\nimport { PanGesture } from '../../gestures/pan/index.mjs';\r\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\r\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\r\n\r\nconst drag = {\r\n    pan: {\r\n        Feature: PanGesture,\r\n    },\r\n    drag: {\r\n        Feature: DragGesture,\r\n        ProjectionNode: HTMLProjectionNode,\r\n        MeasureLayout,\r\n    },\r\n};\r\n\r\nexport { drag };\r\n","function resolveElements(elementOrSelector, scope, selectorCache) {\r\n    if (elementOrSelector instanceof EventTarget) {\r\n        return [elementOrSelector];\r\n    }\r\n    else if (typeof elementOrSelector === \"string\") {\r\n        let root = document;\r\n        if (scope) {\r\n            root = scope.current;\r\n        }\r\n        const elements = selectorCache?.[elementOrSelector] ??\r\n            root.querySelectorAll(elementOrSelector);\r\n        return elements ? Array.from(elements) : [];\r\n    }\r\n    return Array.from(elementOrSelector);\r\n}\r\n\r\nexport { resolveElements };\r\n","import { resolveElements } from '../../utils/resolve-elements.mjs';\r\n\r\nfunction setupGesture(elementOrSelector, options) {\r\n    const elements = resolveElements(elementOrSelector);\r\n    const gestureAbortController = new AbortController();\r\n    const eventOptions = {\r\n        passive: true,\r\n        ...options,\r\n        signal: gestureAbortController.signal,\r\n    };\r\n    const cancel = () => gestureAbortController.abort();\r\n    return [elements, eventOptions, cancel];\r\n}\r\n\r\nexport { setupGesture };\r\n","import { isDragActive } from './drag/state/is-active.mjs';\r\nimport { setupGesture } from './utils/setup.mjs';\r\n\r\nfunction isValidHover(event) {\r\n    return !(event.pointerType === \"touch\" || isDragActive());\r\n}\r\n/**\r\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\r\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\r\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\r\n *\r\n * @public\r\n */\r\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\r\n    const [elements, eventOptions, cancel] = setupGesture(elementOrSelector, options);\r\n    const onPointerEnter = (enterEvent) => {\r\n        if (!isValidHover(enterEvent))\r\n            return;\r\n        const { target } = enterEvent;\r\n        const onHoverEnd = onHoverStart(target, enterEvent);\r\n        if (typeof onHoverEnd !== \"function\" || !target)\r\n            return;\r\n        const onPointerLeave = (leaveEvent) => {\r\n            if (!isValidHover(leaveEvent))\r\n                return;\r\n            onHoverEnd(leaveEvent);\r\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\r\n        };\r\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\r\n    };\r\n    elements.forEach((element) => {\r\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\r\n    });\r\n    return cancel;\r\n}\r\n\r\nexport { hover };\r\n","import { extractEventInfo } from '../events/event-info.mjs';\r\nimport { Feature } from '../motion/features/Feature.mjs';\r\nimport { hover } from '../../../../motion-dom/dist/es/gestures/hover.mjs';\r\nimport { frame } from '../../../../motion-dom/dist/es/frameloop/frame.mjs';\r\n\r\nfunction handleHoverEvent(node, event, lifecycle) {\r\n    const { props } = node;\r\n    if (node.animationState && props.whileHover) {\r\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\r\n    }\r\n    const eventName = (\"onHover\" + lifecycle);\r\n    const callback = props[eventName];\r\n    if (callback) {\r\n        frame.postRender(() => callback(event, extractEventInfo(event)));\r\n    }\r\n}\r\nclass HoverGesture extends Feature {\r\n    mount() {\r\n        const { current } = this.node;\r\n        if (!current)\r\n            return;\r\n        this.unmount = hover(current, (_element, startEvent) => {\r\n            handleHoverEvent(this.node, startEvent, \"Start\");\r\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\r\n        });\r\n    }\r\n    unmount() { }\r\n}\r\n\r\nexport { HoverGesture };\r\n","import { addDomEvent } from '../events/add-dom-event.mjs';\r\nimport { Feature } from '../motion/features/Feature.mjs';\r\nimport { pipe } from '../../../../motion-utils/dist/es/pipe.mjs';\r\n\r\nclass FocusGesture extends Feature {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.isActive = false;\r\n    }\r\n    onFocus() {\r\n        let isFocusVisible = false;\r\n        /**\r\n         * If this element doesn't match focus-visible then don't\r\n         * apply whileHover. But, if matches throws that focus-visible\r\n         * is not a valid selector then in that browser outline styles will be applied\r\n         * to the element by default and we want to match that behaviour with whileFocus.\r\n         */\r\n        try {\r\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\r\n        }\r\n        catch (e) {\r\n            isFocusVisible = true;\r\n        }\r\n        if (!isFocusVisible || !this.node.animationState)\r\n            return;\r\n        this.node.animationState.setActive(\"whileFocus\", true);\r\n        this.isActive = true;\r\n    }\r\n    onBlur() {\r\n        if (!this.isActive || !this.node.animationState)\r\n            return;\r\n        this.node.animationState.setActive(\"whileFocus\", false);\r\n        this.isActive = false;\r\n    }\r\n    mount() {\r\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\r\n    }\r\n    unmount() { }\r\n}\r\n\r\nexport { FocusGesture };\r\n","/**\r\n * Recursively traverse up the tree to check whether the provided child node\r\n * is the parent or a descendant of it.\r\n *\r\n * @param parent - Element to find\r\n * @param child - Element to test against parent\r\n */\r\nconst isNodeOrChild = (parent, child) => {\r\n    if (!child) {\r\n        return false;\r\n    }\r\n    else if (parent === child) {\r\n        return true;\r\n    }\r\n    else {\r\n        return isNodeOrChild(parent, child.parentElement);\r\n    }\r\n};\r\n\r\nexport { isNodeOrChild };\r\n","const focusableElements = new Set([\r\n    \"BUTTON\",\r\n    \"INPUT\",\r\n    \"SELECT\",\r\n    \"TEXTAREA\",\r\n    \"A\",\r\n]);\r\nfunction isElementKeyboardAccessible(element) {\r\n    return (focusableElements.has(element.tagName) ||\r\n        element.tabIndex !== -1);\r\n}\r\n\r\nexport { isElementKeyboardAccessible };\r\n","const isPressing = new WeakSet();\r\n\r\nexport { isPressing };\r\n","import { isPressing } from './state.mjs';\r\n\r\n/**\r\n * Filter out events that are not \"Enter\" keys.\r\n */\r\nfunction filterEvents(callback) {\r\n    return (event) => {\r\n        if (event.key !== \"Enter\")\r\n            return;\r\n        callback(event);\r\n    };\r\n}\r\nfunction firePointerEvent(target, type) {\r\n    target.dispatchEvent(new PointerEvent(\"pointer\" + type, { isPrimary: true, bubbles: true }));\r\n}\r\nconst enableKeyboardPress = (focusEvent, eventOptions) => {\r\n    const element = focusEvent.currentTarget;\r\n    if (!element)\r\n        return;\r\n    const handleKeydown = filterEvents(() => {\r\n        if (isPressing.has(element))\r\n            return;\r\n        firePointerEvent(element, \"down\");\r\n        const handleKeyup = filterEvents(() => {\r\n            firePointerEvent(element, \"up\");\r\n        });\r\n        const handleBlur = () => firePointerEvent(element, \"cancel\");\r\n        element.addEventListener(\"keyup\", handleKeyup, eventOptions);\r\n        element.addEventListener(\"blur\", handleBlur, eventOptions);\r\n    });\r\n    element.addEventListener(\"keydown\", handleKeydown, eventOptions);\r\n    /**\r\n     * Add an event listener that fires on blur to remove the keydown events.\r\n     */\r\n    element.addEventListener(\"blur\", () => element.removeEventListener(\"keydown\", handleKeydown), eventOptions);\r\n};\r\n\r\nexport { enableKeyboardPress };\r\n","import { isHTMLElement } from '../../utils/is-html-element.mjs';\r\nimport { isDragActive } from '../drag/state/is-active.mjs';\r\nimport { isNodeOrChild } from '../utils/is-node-or-child.mjs';\r\nimport { isPrimaryPointer } from '../utils/is-primary-pointer.mjs';\r\nimport { setupGesture } from '../utils/setup.mjs';\r\nimport { isElementKeyboardAccessible } from './utils/is-keyboard-accessible.mjs';\r\nimport { enableKeyboardPress } from './utils/keyboard.mjs';\r\nimport { isPressing } from './utils/state.mjs';\r\n\r\n/**\r\n * Filter out events that are not primary pointer events, or are triggering\r\n * while a Motion gesture is active.\r\n */\r\nfunction isValidPressEvent(event) {\r\n    return isPrimaryPointer(event) && !isDragActive();\r\n}\r\n/**\r\n * Create a press gesture.\r\n *\r\n * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\r\n * automatically filters out secondary pointer events like right\r\n * click and multitouch.\r\n *\r\n * It also adds accessibility support for keyboards, where\r\n * an element with a press gesture will receive focus and\r\n *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\r\n *\r\n * This is different to a browser's `\"click\"` event, which does\r\n * respond to keyboards but only for the `\"click\"` itself, rather\r\n * than the press start and end/cancel. The element also needs\r\n * to be focusable for this to work, whereas a press gesture will\r\n * make an element focusable by default.\r\n *\r\n * @public\r\n */\r\nfunction press(targetOrSelector, onPressStart, options = {}) {\r\n    const [targets, eventOptions, cancelEvents] = setupGesture(targetOrSelector, options);\r\n    const startPress = (startEvent) => {\r\n        const target = startEvent.currentTarget;\r\n        if (!isValidPressEvent(startEvent))\r\n            return;\r\n        isPressing.add(target);\r\n        const onPressEnd = onPressStart(target, startEvent);\r\n        const onPointerEnd = (endEvent, success) => {\r\n            window.removeEventListener(\"pointerup\", onPointerUp);\r\n            window.removeEventListener(\"pointercancel\", onPointerCancel);\r\n            if (isPressing.has(target)) {\r\n                isPressing.delete(target);\r\n            }\r\n            if (!isValidPressEvent(endEvent)) {\r\n                return;\r\n            }\r\n            if (typeof onPressEnd === \"function\") {\r\n                onPressEnd(endEvent, { success });\r\n            }\r\n        };\r\n        const onPointerUp = (upEvent) => {\r\n            onPointerEnd(upEvent, target === window ||\r\n                target === document ||\r\n                options.useGlobalTarget ||\r\n                isNodeOrChild(target, upEvent.target));\r\n        };\r\n        const onPointerCancel = (cancelEvent) => {\r\n            onPointerEnd(cancelEvent, false);\r\n        };\r\n        window.addEventListener(\"pointerup\", onPointerUp, eventOptions);\r\n        window.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\r\n    };\r\n    targets.forEach((target) => {\r\n        const pointerDownTarget = options.useGlobalTarget ? window : target;\r\n        pointerDownTarget.addEventListener(\"pointerdown\", startPress, eventOptions);\r\n        if (isHTMLElement(target)) {\r\n            target.addEventListener(\"focus\", (event) => enableKeyboardPress(event, eventOptions));\r\n            if (!isElementKeyboardAccessible(target) &&\r\n                !target.hasAttribute(\"tabindex\")) {\r\n                target.tabIndex = 0;\r\n            }\r\n        }\r\n    });\r\n    return cancelEvents;\r\n}\r\n\r\nexport { press };\r\n","import { extractEventInfo } from '../events/event-info.mjs';\r\nimport { Feature } from '../motion/features/Feature.mjs';\r\nimport { press } from '../../../../motion-dom/dist/es/gestures/press/index.mjs';\r\nimport { frame } from '../../../../motion-dom/dist/es/frameloop/frame.mjs';\r\n\r\nfunction handlePressEvent(node, event, lifecycle) {\r\n    const { props } = node;\r\n    if (node.current instanceof HTMLButtonElement && node.current.disabled) {\r\n        return;\r\n    }\r\n    if (node.animationState && props.whileTap) {\r\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\r\n    }\r\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\r\n    const callback = props[eventName];\r\n    if (callback) {\r\n        frame.postRender(() => callback(event, extractEventInfo(event)));\r\n    }\r\n}\r\nclass PressGesture extends Feature {\r\n    mount() {\r\n        const { current } = this.node;\r\n        if (!current)\r\n            return;\r\n        this.unmount = press(current, (_element, startEvent) => {\r\n            handlePressEvent(this.node, startEvent, \"Start\");\r\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\r\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\r\n    }\r\n    unmount() { }\r\n}\r\n\r\nexport { PressGesture };\r\n","/**\r\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\r\n * element, so even though these handlers might all be triggered by different\r\n * observers, we can keep them in the same map.\r\n */\r\nconst observerCallbacks = new WeakMap();\r\n/**\r\n * Multiple observers can be created for multiple element/document roots. Each with\r\n * different settings. So here we store dictionaries of observers to each root,\r\n * using serialised settings (threshold/margin) as lookup keys.\r\n */\r\nconst observers = new WeakMap();\r\nconst fireObserverCallback = (entry) => {\r\n    const callback = observerCallbacks.get(entry.target);\r\n    callback && callback(entry);\r\n};\r\nconst fireAllObserverCallbacks = (entries) => {\r\n    entries.forEach(fireObserverCallback);\r\n};\r\nfunction initIntersectionObserver({ root, ...options }) {\r\n    const lookupRoot = root || document;\r\n    /**\r\n     * If we don't have an observer lookup map for this root, create one.\r\n     */\r\n    if (!observers.has(lookupRoot)) {\r\n        observers.set(lookupRoot, {});\r\n    }\r\n    const rootObservers = observers.get(lookupRoot);\r\n    const key = JSON.stringify(options);\r\n    /**\r\n     * If we don't have an observer for this combination of root and settings,\r\n     * create one.\r\n     */\r\n    if (!rootObservers[key]) {\r\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\r\n    }\r\n    return rootObservers[key];\r\n}\r\nfunction observeIntersection(element, options, callback) {\r\n    const rootInteresectionObserver = initIntersectionObserver(options);\r\n    observerCallbacks.set(element, callback);\r\n    rootInteresectionObserver.observe(element);\r\n    return () => {\r\n        observerCallbacks.delete(element);\r\n        rootInteresectionObserver.unobserve(element);\r\n    };\r\n}\r\n\r\nexport { observeIntersection };\r\n","import { Feature } from '../Feature.mjs';\r\nimport { observeIntersection } from './observers.mjs';\r\n\r\nconst thresholdNames = {\r\n    some: 0,\r\n    all: 1,\r\n};\r\nclass InViewFeature extends Feature {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.hasEnteredView = false;\r\n        this.isInView = false;\r\n    }\r\n    startObserver() {\r\n        this.unmount();\r\n        const { viewport = {} } = this.node.getProps();\r\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\r\n        const options = {\r\n            root: root ? root.current : undefined,\r\n            rootMargin,\r\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\r\n        };\r\n        const onIntersectionUpdate = (entry) => {\r\n            const { isIntersecting } = entry;\r\n            /**\r\n             * If there's been no change in the viewport state, early return.\r\n             */\r\n            if (this.isInView === isIntersecting)\r\n                return;\r\n            this.isInView = isIntersecting;\r\n            /**\r\n             * Handle hasEnteredView. If this is only meant to run once, and\r\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\r\n             */\r\n            if (once && !isIntersecting && this.hasEnteredView) {\r\n                return;\r\n            }\r\n            else if (isIntersecting) {\r\n                this.hasEnteredView = true;\r\n            }\r\n            if (this.node.animationState) {\r\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\r\n            }\r\n            /**\r\n             * Use the latest committed props rather than the ones in scope\r\n             * when this observer is created\r\n             */\r\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\r\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\r\n            callback && callback(entry);\r\n        };\r\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\r\n    }\r\n    mount() {\r\n        this.startObserver();\r\n    }\r\n    update() {\r\n        if (typeof IntersectionObserver === \"undefined\")\r\n            return;\r\n        const { props, prevProps } = this.node;\r\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\r\n        if (hasOptionsChanged) {\r\n            this.startObserver();\r\n        }\r\n    }\r\n    unmount() { }\r\n}\r\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\r\n    return (name) => viewport[name] !== prevViewport[name];\r\n}\r\n\r\nexport { InViewFeature };\r\n","import { HoverGesture } from '../../gestures/hover.mjs';\r\nimport { FocusGesture } from '../../gestures/focus.mjs';\r\nimport { PressGesture } from '../../gestures/press.mjs';\r\nimport { InViewFeature } from './viewport/index.mjs';\r\n\r\nconst gestureAnimations = {\r\n    inView: {\r\n        Feature: InViewFeature,\r\n    },\r\n    tap: {\r\n        Feature: PressGesture,\r\n    },\r\n    focus: {\r\n        Feature: FocusGesture,\r\n    },\r\n    hover: {\r\n        Feature: HoverGesture,\r\n    },\r\n};\r\n\r\nexport { gestureAnimations };\r\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\r\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\r\n\r\nconst layout = {\r\n    layout: {\r\n        ProjectionNode: HTMLProjectionNode,\r\n        MeasureLayout,\r\n    },\r\n};\r\n\r\nexport { layout };\r\n","// Does this device prefer reduced motion? Returns `null` server-side.\r\nconst prefersReducedMotion = { current: null };\r\nconst hasReducedMotionListener = { current: false };\r\n\r\nexport { hasReducedMotionListener, prefersReducedMotion };\r\n","import { isBrowser } from '../is-browser.mjs';\r\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\r\n\r\nfunction initPrefersReducedMotion() {\r\n    hasReducedMotionListener.current = true;\r\n    if (!isBrowser)\r\n        return;\r\n    if (window.matchMedia) {\r\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\r\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\r\n        motionMediaQuery.addListener(setReducedMotionPreferences);\r\n        setReducedMotionPreferences();\r\n    }\r\n    else {\r\n        prefersReducedMotion.current = false;\r\n    }\r\n}\r\n\r\nexport { initPrefersReducedMotion };\r\n","const visualElementStore = new WeakMap();\r\n\r\nexport { visualElementStore };\r\n","import { isMotionValue } from '../../../../../motion-dom/dist/es/value/utils/is-motion-value.mjs';\r\nimport { motionValue } from '../../../../../motion-dom/dist/es/value/index.mjs';\r\n\r\nfunction updateMotionValuesFromProps(element, next, prev) {\r\n    for (const key in next) {\r\n        const nextValue = next[key];\r\n        const prevValue = prev[key];\r\n        if (isMotionValue(nextValue)) {\r\n            /**\r\n             * If this is a motion value found in props or style, we want to add it\r\n             * to our visual element's motion value map.\r\n             */\r\n            element.addValue(key, nextValue);\r\n        }\r\n        else if (isMotionValue(prevValue)) {\r\n            /**\r\n             * If we're swapping from a motion value to a static value,\r\n             * create a new motion value from that\r\n             */\r\n            element.addValue(key, motionValue(nextValue, { owner: element }));\r\n        }\r\n        else if (prevValue !== nextValue) {\r\n            /**\r\n             * If this is a flat value that has changed, update the motion value\r\n             * or create one if it doesn't exist. We only want to do this if we're\r\n             * not handling the value with our animation state.\r\n             */\r\n            if (element.hasValue(key)) {\r\n                const existingValue = element.getValue(key);\r\n                if (existingValue.liveStyle === true) {\r\n                    existingValue.jump(nextValue);\r\n                }\r\n                else if (!existingValue.hasAnimated) {\r\n                    existingValue.set(nextValue);\r\n                }\r\n            }\r\n            else {\r\n                const latestValue = element.getStaticValue(key);\r\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\r\n            }\r\n        }\r\n    }\r\n    // Handle removed values\r\n    for (const key in prev) {\r\n        if (next[key] === undefined)\r\n            element.removeValue(key);\r\n    }\r\n    return next;\r\n}\r\n\r\nexport { updateMotionValuesFromProps };\r\n","/**\r\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\r\n */\r\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\r\n\r\nexport { isNumericalString };\r\n","/**\r\n * Check if the value is a zero value string like \"0px\" or \"0%\"\r\n */\r\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\r\n\r\nexport { isZeroValueString };\r\n","/**\r\n * ValueType for \"auto\"\r\n */\r\nconst auto = {\r\n    test: (v) => v === \"auto\",\r\n    parse: (v) => v,\r\n};\r\n\r\nexport { auto };\r\n","/**\r\n * Tests a provided value against a ValueType\r\n */\r\nconst testValueType = (v) => (type) => type.test(v);\r\n\r\nexport { testValueType };\r\n","import { auto } from './auto.mjs';\r\nimport { number } from './numbers/index.mjs';\r\nimport { px, percent, degrees, vw, vh } from './numbers/units.mjs';\r\nimport { testValueType } from './test.mjs';\r\n\r\n/**\r\n * A list of value types commonly used for dimensions\r\n */\r\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\r\n/**\r\n * Tests a dimensional value against the list of dimension ValueTypes\r\n */\r\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\r\n\r\nexport { dimensionValueTypes, findDimensionValueType };\r\n","import { color } from '../color/index.mjs';\r\nimport { complex } from '../complex/index.mjs';\r\nimport { dimensionValueTypes } from '../dimensions.mjs';\r\nimport { testValueType } from '../test.mjs';\r\n\r\n/**\r\n * A list of all ValueTypes\r\n */\r\nconst valueTypes = [...dimensionValueTypes, color, complex];\r\n/**\r\n * Tests a value against the list of ValueTypes\r\n */\r\nconst findValueType = (v) => valueTypes.find(testValueType(v));\r\n\r\nexport { findValueType };\r\n","import { complex } from './index.mjs';\r\nimport { floatRegex } from '../utils/float-regex.mjs';\r\n\r\n/**\r\n * Properties that should default to 1 or 100%\r\n */\r\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\r\nfunction applyDefaultFilter(v) {\r\n    const [name, value] = v.slice(0, -1).split(\"(\");\r\n    if (name === \"drop-shadow\")\r\n        return v;\r\n    const [number] = value.match(floatRegex) || [];\r\n    if (!number)\r\n        return v;\r\n    const unit = value.replace(number, \"\");\r\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\r\n    if (number !== value)\r\n        defaultValue *= 100;\r\n    return name + \"(\" + defaultValue + unit + \")\";\r\n}\r\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\r\nconst filter = {\r\n    ...complex,\r\n    getAnimatableNone: (v) => {\r\n        const functions = v.match(functionRegex);\r\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\r\n    },\r\n};\r\n\r\nexport { filter };\r\n","import { color } from '../color/index.mjs';\r\nimport { filter } from '../complex/filter.mjs';\r\nimport { numberValueTypes } from './number.mjs';\r\n\r\n/**\r\n * A map of default value types for common values\r\n */\r\nconst defaultValueTypes = {\r\n    ...numberValueTypes,\r\n    // Color props\r\n    color,\r\n    backgroundColor: color,\r\n    outlineColor: color,\r\n    fill: color,\r\n    stroke: color,\r\n    // Border props\r\n    borderColor: color,\r\n    borderTopColor: color,\r\n    borderRightColor: color,\r\n    borderBottomColor: color,\r\n    borderLeftColor: color,\r\n    filter,\r\n    WebkitFilter: filter,\r\n};\r\n/**\r\n * Gets the default ValueType for the provided value key\r\n */\r\nconst getDefaultValueType = (key) => defaultValueTypes[key];\r\n\r\nexport { defaultValueTypes, getDefaultValueType };\r\n","import { complex } from '../complex/index.mjs';\r\nimport { filter } from '../complex/filter.mjs';\r\nimport { getDefaultValueType } from '../maps/defaults.mjs';\r\n\r\nfunction getAnimatableNone(key, value) {\r\n    let defaultValueType = getDefaultValueType(key);\r\n    if (defaultValueType !== filter)\r\n        defaultValueType = complex;\r\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\r\n    return defaultValueType.getAnimatableNone\r\n        ? defaultValueType.getAnimatableNone(value)\r\n        : undefined;\r\n}\r\n\r\nexport { getAnimatableNone };\r\n","import { featureDefinitions } from '../motion/features/definitions.mjs';\r\nimport { createBox } from '../projection/geometry/models.mjs';\r\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\r\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\r\nimport { visualElementStore } from './store.mjs';\r\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\r\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\r\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\r\nimport { KeyframeResolver } from '../../../../motion-dom/dist/es/animation/keyframes/KeyframesResolver.mjs';\r\nimport { time } from '../../../../motion-dom/dist/es/frameloop/sync-time.mjs';\r\nimport { frame, cancelFrame } from '../../../../motion-dom/dist/es/frameloop/frame.mjs';\r\nimport { isMotionValue } from '../../../../motion-dom/dist/es/value/utils/is-motion-value.mjs';\r\nimport { warnOnce } from '../../../../motion-utils/dist/es/warn-once.mjs';\r\nimport { transformProps } from '../../../../motion-dom/dist/es/render/utils/keys-transform.mjs';\r\nimport { motionValue } from '../../../../motion-dom/dist/es/value/index.mjs';\r\nimport { isNumericalString } from '../../../../motion-utils/dist/es/is-numerical-string.mjs';\r\nimport { isZeroValueString } from '../../../../motion-utils/dist/es/is-zero-value-string.mjs';\r\nimport { findValueType } from '../../../../motion-dom/dist/es/value/types/utils/find.mjs';\r\nimport { complex } from '../../../../motion-dom/dist/es/value/types/complex/index.mjs';\r\nimport { getAnimatableNone } from '../../../../motion-dom/dist/es/value/types/utils/animatable-none.mjs';\r\nimport { SubscriptionManager } from '../../../../motion-utils/dist/es/subscription-manager.mjs';\r\n\r\nconst propEventHandlers = [\r\n    \"AnimationStart\",\r\n    \"AnimationComplete\",\r\n    \"Update\",\r\n    \"BeforeLayoutMeasure\",\r\n    \"LayoutMeasure\",\r\n    \"LayoutAnimationStart\",\r\n    \"LayoutAnimationComplete\",\r\n];\r\n/**\r\n * A VisualElement is an imperative abstraction around UI elements such as\r\n * HTMLElement, SVGElement, Three.Object3D etc.\r\n */\r\nclass VisualElement {\r\n    /**\r\n     * This method takes React props and returns found MotionValues. For example, HTML\r\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\r\n     *\r\n     * This isn't an abstract method as it needs calling in the constructor, but it is\r\n     * intended to be one.\r\n     */\r\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\r\n        return {};\r\n    }\r\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\r\n        /**\r\n         * A reference to the current underlying Instance, e.g. a HTMLElement\r\n         * or Three.Mesh etc.\r\n         */\r\n        this.current = null;\r\n        /**\r\n         * A set containing references to this VisualElement's children.\r\n         */\r\n        this.children = new Set();\r\n        /**\r\n         * Determine what role this visual element should take in the variant tree.\r\n         */\r\n        this.isVariantNode = false;\r\n        this.isControllingVariants = false;\r\n        /**\r\n         * Decides whether this VisualElement should animate in reduced motion\r\n         * mode.\r\n         *\r\n         * TODO: This is currently set on every individual VisualElement but feels\r\n         * like it could be set globally.\r\n         */\r\n        this.shouldReduceMotion = null;\r\n        /**\r\n         * A map of all motion values attached to this visual element. Motion\r\n         * values are source of truth for any given animated value. A motion\r\n         * value might be provided externally by the component via props.\r\n         */\r\n        this.values = new Map();\r\n        this.KeyframeResolver = KeyframeResolver;\r\n        /**\r\n         * Cleanup functions for active features (hover/tap/exit etc)\r\n         */\r\n        this.features = {};\r\n        /**\r\n         * A map of every subscription that binds the provided or generated\r\n         * motion values onChange listeners to this visual element.\r\n         */\r\n        this.valueSubscriptions = new Map();\r\n        /**\r\n         * A reference to the previously-provided motion values as returned\r\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\r\n         * if any motion values need to be removed after props are updated.\r\n         */\r\n        this.prevMotionValues = {};\r\n        /**\r\n         * An object containing a SubscriptionManager for each active event.\r\n         */\r\n        this.events = {};\r\n        /**\r\n         * An object containing an unsubscribe function for each prop event subscription.\r\n         * For example, every \"Update\" event can have multiple subscribers via\r\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\r\n         */\r\n        this.propEventSubscriptions = {};\r\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\r\n        this.render = () => {\r\n            if (!this.current)\r\n                return;\r\n            this.triggerBuild();\r\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\r\n        };\r\n        this.renderScheduledAt = 0.0;\r\n        this.scheduleRender = () => {\r\n            const now = time.now();\r\n            if (this.renderScheduledAt < now) {\r\n                this.renderScheduledAt = now;\r\n                frame.render(this.render, false, true);\r\n            }\r\n        };\r\n        const { latestValues, renderState } = visualState;\r\n        this.latestValues = latestValues;\r\n        this.baseTarget = { ...latestValues };\r\n        this.initialValues = props.initial ? { ...latestValues } : {};\r\n        this.renderState = renderState;\r\n        this.parent = parent;\r\n        this.props = props;\r\n        this.presenceContext = presenceContext;\r\n        this.depth = parent ? parent.depth + 1 : 0;\r\n        this.reducedMotionConfig = reducedMotionConfig;\r\n        this.options = options;\r\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\r\n        this.isControllingVariants = isControllingVariants(props);\r\n        this.isVariantNode = isVariantNode(props);\r\n        if (this.isVariantNode) {\r\n            this.variantChildren = new Set();\r\n        }\r\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\r\n        /**\r\n         * Any motion values that are provided to the element when created\r\n         * aren't yet bound to the element, as this would technically be impure.\r\n         * However, we iterate through the motion values and set them to the\r\n         * initial values for this component.\r\n         *\r\n         * TODO: This is impure and we should look at changing this to run on mount.\r\n         * Doing so will break some tests but this isn't necessarily a breaking change,\r\n         * more a reflection of the test.\r\n         */\r\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\r\n        for (const key in initialMotionValues) {\r\n            const value = initialMotionValues[key];\r\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\r\n                value.set(latestValues[key], false);\r\n            }\r\n        }\r\n    }\r\n    mount(instance) {\r\n        this.current = instance;\r\n        visualElementStore.set(instance, this);\r\n        if (this.projection && !this.projection.instance) {\r\n            this.projection.mount(instance);\r\n        }\r\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\r\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\r\n        }\r\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\r\n        if (!hasReducedMotionListener.current) {\r\n            initPrefersReducedMotion();\r\n        }\r\n        this.shouldReduceMotion =\r\n            this.reducedMotionConfig === \"never\"\r\n                ? false\r\n                : this.reducedMotionConfig === \"always\"\r\n                    ? true\r\n                    : prefersReducedMotion.current;\r\n        if (process.env.NODE_ENV !== \"production\") {\r\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\r\n        }\r\n        if (this.parent)\r\n            this.parent.children.add(this);\r\n        this.update(this.props, this.presenceContext);\r\n    }\r\n    unmount() {\r\n        this.projection && this.projection.unmount();\r\n        cancelFrame(this.notifyUpdate);\r\n        cancelFrame(this.render);\r\n        this.valueSubscriptions.forEach((remove) => remove());\r\n        this.valueSubscriptions.clear();\r\n        this.removeFromVariantTree && this.removeFromVariantTree();\r\n        this.parent && this.parent.children.delete(this);\r\n        for (const key in this.events) {\r\n            this.events[key].clear();\r\n        }\r\n        for (const key in this.features) {\r\n            const feature = this.features[key];\r\n            if (feature) {\r\n                feature.unmount();\r\n                feature.isMounted = false;\r\n            }\r\n        }\r\n        this.current = null;\r\n    }\r\n    bindToMotionValue(key, value) {\r\n        if (this.valueSubscriptions.has(key)) {\r\n            this.valueSubscriptions.get(key)();\r\n        }\r\n        const valueIsTransform = transformProps.has(key);\r\n        if (valueIsTransform && this.onBindTransform) {\r\n            this.onBindTransform();\r\n        }\r\n        const removeOnChange = value.on(\"change\", (latestValue) => {\r\n            this.latestValues[key] = latestValue;\r\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\r\n            if (valueIsTransform && this.projection) {\r\n                this.projection.isTransformDirty = true;\r\n            }\r\n        });\r\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\r\n        let removeSyncCheck;\r\n        if (window.MotionCheckAppearSync) {\r\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\r\n        }\r\n        this.valueSubscriptions.set(key, () => {\r\n            removeOnChange();\r\n            removeOnRenderRequest();\r\n            if (removeSyncCheck)\r\n                removeSyncCheck();\r\n            if (value.owner)\r\n                value.stop();\r\n        });\r\n    }\r\n    sortNodePosition(other) {\r\n        /**\r\n         * If these nodes aren't even of the same type we can't compare their depth.\r\n         */\r\n        if (!this.current ||\r\n            !this.sortInstanceNodePosition ||\r\n            this.type !== other.type) {\r\n            return 0;\r\n        }\r\n        return this.sortInstanceNodePosition(this.current, other.current);\r\n    }\r\n    updateFeatures() {\r\n        let key = \"animation\";\r\n        for (key in featureDefinitions) {\r\n            const featureDefinition = featureDefinitions[key];\r\n            if (!featureDefinition)\r\n                continue;\r\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\r\n            /**\r\n             * If this feature is enabled but not active, make a new instance.\r\n             */\r\n            if (!this.features[key] &&\r\n                FeatureConstructor &&\r\n                isEnabled(this.props)) {\r\n                this.features[key] = new FeatureConstructor(this);\r\n            }\r\n            /**\r\n             * If we have a feature, mount or update it.\r\n             */\r\n            if (this.features[key]) {\r\n                const feature = this.features[key];\r\n                if (feature.isMounted) {\r\n                    feature.update();\r\n                }\r\n                else {\r\n                    feature.mount();\r\n                    feature.isMounted = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    triggerBuild() {\r\n        this.build(this.renderState, this.latestValues, this.props);\r\n    }\r\n    /**\r\n     * Measure the current viewport box with or without transforms.\r\n     * Only measures axis-aligned boxes, rotate and skew must be manually\r\n     * removed with a re-render to work.\r\n     */\r\n    measureViewportBox() {\r\n        return this.current\r\n            ? this.measureInstanceViewportBox(this.current, this.props)\r\n            : createBox();\r\n    }\r\n    getStaticValue(key) {\r\n        return this.latestValues[key];\r\n    }\r\n    setStaticValue(key, value) {\r\n        this.latestValues[key] = value;\r\n    }\r\n    /**\r\n     * Update the provided props. Ensure any newly-added motion values are\r\n     * added to our map, old ones removed, and listeners updated.\r\n     */\r\n    update(props, presenceContext) {\r\n        if (props.transformTemplate || this.props.transformTemplate) {\r\n            this.scheduleRender();\r\n        }\r\n        this.prevProps = this.props;\r\n        this.props = props;\r\n        this.prevPresenceContext = this.presenceContext;\r\n        this.presenceContext = presenceContext;\r\n        /**\r\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\r\n         */\r\n        for (let i = 0; i < propEventHandlers.length; i++) {\r\n            const key = propEventHandlers[i];\r\n            if (this.propEventSubscriptions[key]) {\r\n                this.propEventSubscriptions[key]();\r\n                delete this.propEventSubscriptions[key];\r\n            }\r\n            const listenerName = (\"on\" + key);\r\n            const listener = props[listenerName];\r\n            if (listener) {\r\n                this.propEventSubscriptions[key] = this.on(key, listener);\r\n            }\r\n        }\r\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\r\n        if (this.handleChildMotionValue) {\r\n            this.handleChildMotionValue();\r\n        }\r\n    }\r\n    getProps() {\r\n        return this.props;\r\n    }\r\n    /**\r\n     * Returns the variant definition with a given name.\r\n     */\r\n    getVariant(name) {\r\n        return this.props.variants ? this.props.variants[name] : undefined;\r\n    }\r\n    /**\r\n     * Returns the defined default transition on this component.\r\n     */\r\n    getDefaultTransition() {\r\n        return this.props.transition;\r\n    }\r\n    getTransformPagePoint() {\r\n        return this.props.transformPagePoint;\r\n    }\r\n    getClosestVariantNode() {\r\n        return this.isVariantNode\r\n            ? this\r\n            : this.parent\r\n                ? this.parent.getClosestVariantNode()\r\n                : undefined;\r\n    }\r\n    /**\r\n     * Add a child visual element to our set of children.\r\n     */\r\n    addVariantChild(child) {\r\n        const closestVariantNode = this.getClosestVariantNode();\r\n        if (closestVariantNode) {\r\n            closestVariantNode.variantChildren &&\r\n                closestVariantNode.variantChildren.add(child);\r\n            return () => closestVariantNode.variantChildren.delete(child);\r\n        }\r\n    }\r\n    /**\r\n     * Add a motion value and bind it to this visual element.\r\n     */\r\n    addValue(key, value) {\r\n        // Remove existing value if it exists\r\n        const existingValue = this.values.get(key);\r\n        if (value !== existingValue) {\r\n            if (existingValue)\r\n                this.removeValue(key);\r\n            this.bindToMotionValue(key, value);\r\n            this.values.set(key, value);\r\n            this.latestValues[key] = value.get();\r\n        }\r\n    }\r\n    /**\r\n     * Remove a motion value and unbind any active subscriptions.\r\n     */\r\n    removeValue(key) {\r\n        this.values.delete(key);\r\n        const unsubscribe = this.valueSubscriptions.get(key);\r\n        if (unsubscribe) {\r\n            unsubscribe();\r\n            this.valueSubscriptions.delete(key);\r\n        }\r\n        delete this.latestValues[key];\r\n        this.removeValueFromRenderState(key, this.renderState);\r\n    }\r\n    /**\r\n     * Check whether we have a motion value for this key\r\n     */\r\n    hasValue(key) {\r\n        return this.values.has(key);\r\n    }\r\n    getValue(key, defaultValue) {\r\n        if (this.props.values && this.props.values[key]) {\r\n            return this.props.values[key];\r\n        }\r\n        let value = this.values.get(key);\r\n        if (value === undefined && defaultValue !== undefined) {\r\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\r\n            this.addValue(key, value);\r\n        }\r\n        return value;\r\n    }\r\n    /**\r\n     * If we're trying to animate to a previously unencountered value,\r\n     * we need to check for it in our state and as a last resort read it\r\n     * directly from the instance (which might have performance implications).\r\n     */\r\n    readValue(key, target) {\r\n        let value = this.latestValues[key] !== undefined || !this.current\r\n            ? this.latestValues[key]\r\n            : this.getBaseTargetFromProps(this.props, key) ??\r\n                this.readValueFromInstance(this.current, key, this.options);\r\n        if (value !== undefined && value !== null) {\r\n            if (typeof value === \"string\" &&\r\n                (isNumericalString(value) || isZeroValueString(value))) {\r\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\r\n                value = parseFloat(value);\r\n            }\r\n            else if (!findValueType(value) && complex.test(target)) {\r\n                value = getAnimatableNone(key, target);\r\n            }\r\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\r\n        }\r\n        return isMotionValue(value) ? value.get() : value;\r\n    }\r\n    /**\r\n     * Set the base target to later animate back to. This is currently\r\n     * only hydrated on creation and when we first read a value.\r\n     */\r\n    setBaseTarget(key, value) {\r\n        this.baseTarget[key] = value;\r\n    }\r\n    /**\r\n     * Find the base target for a value thats been removed from all animation\r\n     * props.\r\n     */\r\n    getBaseTarget(key) {\r\n        const { initial } = this.props;\r\n        let valueFromInitial;\r\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\r\n            const variant = resolveVariantFromProps(this.props, initial, this.presenceContext?.custom);\r\n            if (variant) {\r\n                valueFromInitial = variant[key];\r\n            }\r\n        }\r\n        /**\r\n         * If this value still exists in the current initial variant, read that.\r\n         */\r\n        if (initial && valueFromInitial !== undefined) {\r\n            return valueFromInitial;\r\n        }\r\n        /**\r\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\r\n         * so we can read the value from an alternative source, try that.\r\n         */\r\n        const target = this.getBaseTargetFromProps(this.props, key);\r\n        if (target !== undefined && !isMotionValue(target))\r\n            return target;\r\n        /**\r\n         * If the value was initially defined on initial, but it doesn't any more,\r\n         * return undefined. Otherwise return the value as initially read from the DOM.\r\n         */\r\n        return this.initialValues[key] !== undefined &&\r\n            valueFromInitial === undefined\r\n            ? undefined\r\n            : this.baseTarget[key];\r\n    }\r\n    on(eventName, callback) {\r\n        if (!this.events[eventName]) {\r\n            this.events[eventName] = new SubscriptionManager();\r\n        }\r\n        return this.events[eventName].add(callback);\r\n    }\r\n    notify(eventName, ...args) {\r\n        if (this.events[eventName]) {\r\n            this.events[eventName].notify(...args);\r\n        }\r\n    }\r\n}\r\n\r\nexport { VisualElement };\r\n","import { isCSSVariableToken } from './is-css-variable.mjs';\r\nimport { invariant } from '../../../../../motion-utils/dist/es/errors.mjs';\r\nimport { isNumericalString } from '../../../../../motion-utils/dist/es/is-numerical-string.mjs';\r\n\r\n/**\r\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\r\n *\r\n * ```\r\n * `var(--foo, #fff)` => [`--foo`, '#fff']\r\n * ```\r\n *\r\n * @param current\r\n */\r\nconst splitCSSVariableRegex = \r\n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\r\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\r\nfunction parseCSSVariable(current) {\r\n    const match = splitCSSVariableRegex.exec(current);\r\n    if (!match)\r\n        return [,];\r\n    const [, token1, token2, fallback] = match;\r\n    return [`--${token1 ?? token2}`, fallback];\r\n}\r\nconst maxDepth = 4;\r\nfunction getVariableValue(current, element, depth = 1) {\r\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\r\n    const [token, fallback] = parseCSSVariable(current);\r\n    // No CSS variable detected\r\n    if (!token)\r\n        return;\r\n    // Attempt to read this CSS variable off the element\r\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\r\n    if (resolved) {\r\n        const trimmed = resolved.trim();\r\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\r\n    }\r\n    return isCSSVariableToken(fallback)\r\n        ? getVariableValue(fallback, element, depth + 1)\r\n        : fallback;\r\n}\r\n\r\nexport { getVariableValue, parseCSSVariable };\r\n","import { isZeroValueString } from '../../../../../../motion-utils/dist/es/is-zero-value-string.mjs';\r\n\r\nfunction isNone(value) {\r\n    if (typeof value === \"number\") {\r\n        return value === 0;\r\n    }\r\n    else if (value !== null) {\r\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\r\n    }\r\n    else {\r\n        return true;\r\n    }\r\n}\r\n\r\nexport { isNone };\r\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\r\nimport { getAnimatableNone } from '../../../value/types/utils/animatable-none.mjs';\r\n\r\n/**\r\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\r\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\r\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\r\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\r\n */\r\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\r\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\r\n    let i = 0;\r\n    let animatableTemplate = undefined;\r\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\r\n        const keyframe = unresolvedKeyframes[i];\r\n        if (typeof keyframe === \"string\" &&\r\n            !invalidTemplates.has(keyframe) &&\r\n            analyseComplexValue(keyframe).values.length) {\r\n            animatableTemplate = unresolvedKeyframes[i];\r\n        }\r\n        i++;\r\n    }\r\n    if (animatableTemplate && name) {\r\n        for (const noneIndex of noneKeyframeIndexes) {\r\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\r\n        }\r\n    }\r\n}\r\n\r\nexport { makeNoneKeyframesAnimatable };\r\n","import { positionalKeys } from '../../render/utils/keys-position.mjs';\r\nimport { findDimensionValueType } from '../../value/types/dimensions.mjs';\r\nimport { getVariableValue } from '../utils/css-variables-conversion.mjs';\r\nimport { isCSSVariableToken } from '../utils/is-css-variable.mjs';\r\nimport { KeyframeResolver } from './KeyframesResolver.mjs';\r\nimport { isNone } from './utils/is-none.mjs';\r\nimport { makeNoneKeyframesAnimatable } from './utils/make-none-animatable.mjs';\r\nimport { isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\r\n\r\nclass DOMKeyframesResolver extends KeyframeResolver {\r\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\r\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\r\n    }\r\n    readKeyframes() {\r\n        const { unresolvedKeyframes, element, name } = this;\r\n        if (!element || !element.current)\r\n            return;\r\n        super.readKeyframes();\r\n        /**\r\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\r\n         */\r\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\r\n            let keyframe = unresolvedKeyframes[i];\r\n            if (typeof keyframe === \"string\") {\r\n                keyframe = keyframe.trim();\r\n                if (isCSSVariableToken(keyframe)) {\r\n                    const resolved = getVariableValue(keyframe, element.current);\r\n                    if (resolved !== undefined) {\r\n                        unresolvedKeyframes[i] = resolved;\r\n                    }\r\n                    if (i === unresolvedKeyframes.length - 1) {\r\n                        this.finalKeyframe = keyframe;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        /**\r\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\r\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\r\n         * have a far bigger performance impact.\r\n         */\r\n        this.resolveNoneKeyframes();\r\n        /**\r\n         * Check to see if unit type has changed. If so schedule jobs that will\r\n         * temporarily set styles to the destination keyframes.\r\n         * Skip if we have more than two keyframes or this isn't a positional value.\r\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\r\n         */\r\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\r\n            return;\r\n        }\r\n        const [origin, target] = unresolvedKeyframes;\r\n        const originType = findDimensionValueType(origin);\r\n        const targetType = findDimensionValueType(target);\r\n        /**\r\n         * Either we don't recognise these value types or we can animate between them.\r\n         */\r\n        if (originType === targetType)\r\n            return;\r\n        /**\r\n         * If both values are numbers or pixels, we can animate between them by\r\n         * converting them to numbers.\r\n         */\r\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\r\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\r\n                const value = unresolvedKeyframes[i];\r\n                if (typeof value === \"string\") {\r\n                    unresolvedKeyframes[i] = parseFloat(value);\r\n                }\r\n            }\r\n        }\r\n        else if (positionalValues[name]) {\r\n            /**\r\n             * Else, the only way to resolve this is by measuring the element.\r\n             */\r\n            this.needsMeasurement = true;\r\n        }\r\n    }\r\n    resolveNoneKeyframes() {\r\n        const { unresolvedKeyframes, name } = this;\r\n        const noneKeyframeIndexes = [];\r\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\r\n            if (unresolvedKeyframes[i] === null ||\r\n                isNone(unresolvedKeyframes[i])) {\r\n                noneKeyframeIndexes.push(i);\r\n            }\r\n        }\r\n        if (noneKeyframeIndexes.length) {\r\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\r\n        }\r\n    }\r\n    measureInitialState() {\r\n        const { element, unresolvedKeyframes, name } = this;\r\n        if (!element || !element.current)\r\n            return;\r\n        if (name === \"height\") {\r\n            this.suspendedScrollY = window.pageYOffset;\r\n        }\r\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\r\n        unresolvedKeyframes[0] = this.measuredOrigin;\r\n        // Set final key frame to measure after next render\r\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\r\n        if (measureKeyframe !== undefined) {\r\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\r\n        }\r\n    }\r\n    measureEndState() {\r\n        const { element, name, unresolvedKeyframes } = this;\r\n        if (!element || !element.current)\r\n            return;\r\n        const value = element.getValue(name);\r\n        value && value.jump(this.measuredOrigin, false);\r\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\r\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\r\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\r\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\r\n            this.finalKeyframe = finalKeyframe;\r\n        }\r\n        // If we removed transform values, reapply them before the next render\r\n        if (this.removedTransforms?.length) {\r\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\r\n                element\r\n                    .getValue(unsetTransformName)\r\n                    .set(unsetTransformValue);\r\n            });\r\n        }\r\n        this.resolveNoneKeyframes();\r\n    }\r\n}\r\n\r\nexport { DOMKeyframesResolver };\r\n","import { VisualElement } from '../VisualElement.mjs';\r\nimport { DOMKeyframesResolver } from '../../../../../motion-dom/dist/es/animation/keyframes/DOMKeyframesResolver.mjs';\r\nimport { isMotionValue } from '../../../../../motion-dom/dist/es/value/utils/is-motion-value.mjs';\r\n\r\nclass DOMVisualElement extends VisualElement {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.KeyframeResolver = DOMKeyframesResolver;\r\n    }\r\n    sortInstanceNodePosition(a, b) {\r\n        /**\r\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\r\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\r\n         * to true if b preceeds a.\r\n         */\r\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\r\n    }\r\n    getBaseTargetFromProps(props, key) {\r\n        return props.style\r\n            ? props.style[key]\r\n            : undefined;\r\n    }\r\n    removeValueFromRenderState(key, { vars, style }) {\r\n        delete vars[key];\r\n        delete style[key];\r\n    }\r\n    handleChildMotionValue() {\r\n        if (this.childSubscription) {\r\n            this.childSubscription();\r\n            delete this.childSubscription;\r\n        }\r\n        const { children } = this.props;\r\n        if (isMotionValue(children)) {\r\n            this.childSubscription = children.on(\"change\", (latest) => {\r\n                if (this.current) {\r\n                    this.current.textContent = `${latest}`;\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport { DOMVisualElement };\r\n","function renderHTML(element, { style, vars }, styleProp, projection) {\r\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\r\n    // Loop over any CSS variables and assign those.\r\n    for (const key in vars) {\r\n        element.style.setProperty(key, vars[key]);\r\n    }\r\n}\r\n\r\nexport { renderHTML };\r\n","import { measureViewportBox } from '../../projection/utils/measure.mjs';\r\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\r\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\r\nimport { renderHTML } from './utils/render.mjs';\r\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\r\nimport { transformProps } from '../../../../../motion-dom/dist/es/render/utils/keys-transform.mjs';\r\nimport { defaultTransformValue, readTransformValue } from '../../../../../motion-dom/dist/es/render/dom/parse-transform.mjs';\r\nimport { isCSSVariableName } from '../../../../../motion-dom/dist/es/animation/utils/is-css-variable.mjs';\r\n\r\nfunction getComputedStyle(element) {\r\n    return window.getComputedStyle(element);\r\n}\r\nclass HTMLVisualElement extends DOMVisualElement {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.type = \"html\";\r\n        this.renderInstance = renderHTML;\r\n    }\r\n    readValueFromInstance(instance, key) {\r\n        if (transformProps.has(key)) {\r\n            return this.projection?.isProjecting\r\n                ? defaultTransformValue(key)\r\n                : readTransformValue(instance, key);\r\n        }\r\n        else {\r\n            const computedStyle = getComputedStyle(instance);\r\n            const value = (isCSSVariableName(key)\r\n                ? computedStyle.getPropertyValue(key)\r\n                : computedStyle[key]) || 0;\r\n            return typeof value === \"string\" ? value.trim() : value;\r\n        }\r\n    }\r\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\r\n        return measureViewportBox(instance, transformPagePoint);\r\n    }\r\n    build(renderState, latestValues, props) {\r\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\r\n    }\r\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\r\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\r\n    }\r\n}\r\n\r\nexport { HTMLVisualElement, getComputedStyle };\r\n","/**\r\n * A set of attribute names that are always read/written as camel case.\r\n */\r\nconst camelCaseAttributes = new Set([\r\n    \"baseFrequency\",\r\n    \"diffuseConstant\",\r\n    \"kernelMatrix\",\r\n    \"kernelUnitLength\",\r\n    \"keySplines\",\r\n    \"keyTimes\",\r\n    \"limitingConeAngle\",\r\n    \"markerHeight\",\r\n    \"markerWidth\",\r\n    \"numOctaves\",\r\n    \"targetX\",\r\n    \"targetY\",\r\n    \"surfaceScale\",\r\n    \"specularConstant\",\r\n    \"specularExponent\",\r\n    \"stdDeviation\",\r\n    \"tableValues\",\r\n    \"viewBox\",\r\n    \"gradientTransform\",\r\n    \"pathLength\",\r\n    \"startOffset\",\r\n    \"textLength\",\r\n    \"lengthAdjust\",\r\n]);\r\n\r\nexport { camelCaseAttributes };\r\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\r\nimport { renderHTML } from '../../html/utils/render.mjs';\r\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\r\n\r\nfunction renderSVG(element, renderState, _styleProp, projection) {\r\n    renderHTML(element, renderState, undefined, projection);\r\n    for (const key in renderState.attrs) {\r\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\r\n    }\r\n}\r\n\r\nexport { renderSVG };\r\n","import { createBox } from '../../projection/geometry/models.mjs';\r\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\r\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\r\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\r\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\r\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\r\nimport { renderSVG } from './utils/render.mjs';\r\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\r\nimport { transformProps } from '../../../../../motion-dom/dist/es/render/utils/keys-transform.mjs';\r\nimport { getDefaultValueType } from '../../../../../motion-dom/dist/es/value/types/maps/defaults.mjs';\r\n\r\nclass SVGVisualElement extends DOMVisualElement {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.type = \"svg\";\r\n        this.isSVGTag = false;\r\n        this.measureInstanceViewportBox = createBox;\r\n    }\r\n    getBaseTargetFromProps(props, key) {\r\n        return props[key];\r\n    }\r\n    readValueFromInstance(instance, key) {\r\n        if (transformProps.has(key)) {\r\n            const defaultType = getDefaultValueType(key);\r\n            return defaultType ? defaultType.default || 0 : 0;\r\n        }\r\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\r\n        return instance.getAttribute(key);\r\n    }\r\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\r\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\r\n    }\r\n    build(renderState, latestValues, props) {\r\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate, props.style);\r\n    }\r\n    renderInstance(instance, renderState, styleProp, projection) {\r\n        renderSVG(instance, renderState, styleProp, projection);\r\n    }\r\n    mount(instance) {\r\n        this.isSVGTag = isSVGTag(instance.tagName);\r\n        super.mount(instance);\r\n    }\r\n}\r\n\r\nexport { SVGVisualElement };\r\n","import { Fragment } from 'react';\r\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\r\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\r\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\r\n\r\nconst createDomVisualElement = (Component, options) => {\r\n    return isSVGComponent(Component)\r\n        ? new SVGVisualElement(options)\r\n        : new HTMLVisualElement(options, {\r\n            allowProjection: Component !== Fragment,\r\n        });\r\n};\r\n\r\nexport { createDomVisualElement };\r\n","import { animations } from '../../../motion/features/animations.mjs';\r\nimport { drag } from '../../../motion/features/drag.mjs';\r\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\r\nimport { layout } from '../../../motion/features/layout.mjs';\r\nimport { createMotionComponentFactory } from '../create-factory.mjs';\r\nimport { createDomVisualElement } from '../../dom/create-visual-element.mjs';\r\n\r\nconst createMotionComponent = /*@__PURE__*/ createMotionComponentFactory({\r\n    ...animations,\r\n    ...gestureAnimations,\r\n    ...drag,\r\n    ...layout,\r\n}, createDomVisualElement);\r\n\r\nexport { createMotionComponent };\r\n","import { createDOMMotionComponentProxy } from '../create-proxy.mjs';\r\nimport { createMotionComponent } from './create.mjs';\r\n\r\nconst motion = /*@__PURE__*/ createDOMMotionComponentProxy(createMotionComponent);\r\n\r\nexport { motion };\r\n","import React, { useState, useRef, useEffect, useCallback } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport { motion, AnimatePresence } from 'motion/react';\r\nimport { X } from 'lucide-react';\r\nimport { usePrefersReducedMotion } from '../hooks/usePrefersReducedMotion'; // Import the hook\r\n\r\ninterface ZoomableImageProps {\r\n  src: string;\r\n  alt: string;\r\n  className?: string;\r\n}\r\n\r\nconst ZoomableImage: React.FC<ZoomableImageProps> = React.memo(({ src, alt, className = '' }) => { // Wrapped with React.memo\r\n  const [isZoomed, setIsZoomed] = useState(false);\r\n  const [position, setPosition] = useState({ x: 0, y: 0 });\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const imageRef = useRef<HTMLImageElement>(null);\r\n  const prefersReducedMotion = usePrefersReducedMotion(); // Use the hook\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n  const closeButtonRef = useRef<HTMLButtonElement>(null);\r\n\r\n  const handleClose = useCallback(() => { // Wrapped handleClose with useCallback\r\n    setIsZoomed(false);\r\n    containerRef.current?.focus();\r\n  }, []); // No dependencies as setIsZoomed is stable and containerRef is a ref\r\n\r\n  const handleClick = useCallback(() => { // Wrapped handleClick with useCallback\r\n    if (!isLoading) {\r\n      setIsZoomed(prevIsZoomed => !prevIsZoomed); // Use functional update for setIsZoomed\r\n    }\r\n  }, [isLoading]); // Dependency: isLoading\r\n\r\n  const handleKeyDown = useCallback((e: React.KeyboardEvent) => { // Wrapped handleKeyDown with useCallback\r\n    if (e.key === 'Escape' && isZoomed) {\r\n      handleClose();\r\n    } else if ((e.key === 'Enter' || e.key === ' ') && !isLoading) {\r\n      e.preventDefault();\r\n      handleClick();\r\n    }\r\n  }, [isZoomed, isLoading, handleClose, handleClick]); // Dependencies: isZoomed, isLoading, handleClose, handleClick\r\n\r\n  const handleMouseMove = useCallback((e: React.MouseEvent<HTMLDivElement>) => { // Wrapped handleMouseMove with useCallback\r\n    if (!containerRef.current || !imageRef.current || !isZoomed) return;\r\n\r\n    const { left, top, width, height } = containerRef.current.getBoundingClientRect();\r\n    const x = ((e.clientX - left) / width) * 100;\r\n    const y = ((e.clientY - top) / height) * 100;\r\n    setPosition({ x, y });\r\n  }, [isZoomed]); // Dependency: isZoomed\r\n\r\n  useEffect(() => {\r\n    // Define event handlers within useEffect or ensure they are stable via useCallback if defined outside\r\n    // For this effect, handleClickOutside and handleEscapeAndTab are only relevant when isZoomed is true\r\n    // and are re-added/removed based on isZoomed.\r\n    // handleClose is already memoized with useCallback.\r\n\r\n    const localHandleClickOutside = (e: MouseEvent) => {\r\n      if (containerRef.current && !containerRef.current.contains(e.target as Node)) {\r\n        handleClose(); // handleClose is stable\r\n      }\r\n    };\r\n\r\n    const localHandleEscapeAndTab = (e: KeyboardEvent) => {\r\n      if (e.key === 'Escape') {\r\n        handleClose(); // handleClose is stable\r\n      } else if (e.key === 'Tab') {\r\n        if (closeButtonRef.current && document.activeElement === closeButtonRef.current) {\r\n          e.preventDefault();\r\n        } else if (closeButtonRef.current) {\r\n          closeButtonRef.current.focus();\r\n          e.preventDefault();\r\n        }\r\n      }\r\n    };\r\n\r\n    if (isZoomed) {\r\n      document.addEventListener('mousedown', localHandleClickOutside);\r\n      document.addEventListener('keydown', localHandleEscapeAndTab);\r\n      const timer = setTimeout(() => {\r\n        closeButtonRef.current?.focus();\r\n      }, 100);\r\n      return () => {\r\n        clearTimeout(timer);\r\n        document.removeEventListener('mousedown', localHandleClickOutside);\r\n        document.removeEventListener('keydown', localHandleEscapeAndTab);\r\n      };\r\n    }\r\n    // No explicit cleanup needed for the 'else' case here if listeners are only added when isZoomed\r\n  }, [isZoomed, handleClose]); // Dependency: isZoomed and the stable handleClose\r\n\r\n  return (\r\n    <div\r\n      ref={containerRef}\r\n      className={`relative overflow-hidden ${!isLoading ? 'cursor-zoom-in' : 'cursor-wait'} ${className} focus:outline-none focus-visible:ring-2 focus-visible:ring-brand-primary focus-visible:ring-offset-2 focus-visible:ring-offset-background rounded-lg`}\r\n      onClick={handleClick}\r\n      onMouseMove={handleMouseMove}\r\n      onKeyDown={handleKeyDown}\r\n      role=\"button\"\r\n      tabIndex={0}\r\n      aria-label={`${isZoomed ? 'Close' : 'Zoom'} image: ${alt}`}\r\n    >\r\n      {isLoading && (\r\n        <div className=\"absolute inset-0 flex items-center justify-center bg-accent-bg dark:bg-slate-800 rounded-lg\"> {/* Themed loading background, added rounded-lg to match image container */}\r\n          <div className=\"w-8 h-8 border-4 border-brand-primary border-t-transparent rounded-full animate-spin\"></div> {/* Ensured border-brand-primary */}\r\n        </div>\r\n      )}\r\n      <img\r\n        ref={imageRef}\r\n        src={src}\r\n        alt={alt}\r\n        className={`w-full h-full object-cover transition-transform duration-300 ${\r\n          isZoomed ? 'scale-150' : 'hover:scale-105'\r\n        } ${isLoading ? 'opacity-0' : 'opacity-100'}`}\r\n        // Removed srcset generation since responsive images don't exist\r\n        // sizes=\"(max-width: 768px) 100vw, (max-width: 1200px) 70vw, 800px\"\r\n        style={\r\n          isZoomed\r\n            ? {\r\n                transformOrigin: `${position.x}% ${position.y}%`,\r\n              }\r\n            : {}\r\n        }\r\n        onLoad={() => setIsLoading(false)}\r\n        loading=\"lazy\" // Already present, good.\r\n      />\r\n\r\n      <AnimatePresence>\r\n        {isZoomed && typeof document !== 'undefined' && createPortal(\r\n          <motion.div\r\n            initial={{ opacity: 0 }}\r\n            animate={{ opacity: 1 }}\r\n            exit={{ opacity: 0 }}\r\n            transition={prefersReducedMotion ? { duration: 0 } : { duration: 0.3 }} // Modal fade\r\n            className=\"fixed inset-0 bg-black/95 z-[10000] flex items-center justify-center p-4 backdrop-blur-sm\"\r\n            onClick={handleClose}\r\n            role=\"dialog\"\r\n            aria-modal=\"true\"\r\n            aria-label=\"Zoomed image view\"\r\n          >\r\n            <motion.img\r\n              initial={{ scale: prefersReducedMotion ? 1 : 0.5 }}\r\n              animate={{ scale: 1 }}\r\n              exit={{ scale: prefersReducedMotion ? 1 : 0.5 }}\r\n              transition={prefersReducedMotion ? { duration: 0 } : { duration: 0.3 }} // Image scale\r\n              src={src}\r\n              alt={alt}\r\n              className=\"max-w-full max-h-full object-contain shadow-2xl\"\r\n              onClick={(e) => e.stopPropagation()}\r\n              style={{ maxWidth: '95vw', maxHeight: '95vh' }}\r\n            />\r\n            <button\r\n              ref={closeButtonRef}\r\n              className=\"absolute top-4 right-4 z-[10001] text-white bg-black/50 rounded-full p-3 hover:bg-black/70 focus:outline-none focus:ring-2 focus:ring-white/50 transition-colors backdrop-blur-sm\"\r\n              onClick={handleClose}\r\n              aria-label=\"Close zoomed view (Press Escape)\"\r\n              title=\"Close zoomed view (Press Escape)\"\r\n            >\r\n              <X className=\"w-6 h-6\" />\r\n            </button>\r\n\r\n            {/* Instructions */}\r\n            <div className=\"absolute bottom-4 left-1/2 transform -translate-x-1/2 text-white text-sm bg-black/50 px-4 py-2 rounded-full backdrop-blur-sm\">\r\n              Click outside or press Escape to close\r\n            </div>\r\n          </motion.div>,\r\n          document.body\r\n        )}\r\n      </AnimatePresence>\r\n    </div>\r\n  );\r\n});\r\nZoomableImage.displayName = \"ZoomableImage\"; // Optional: for better debugging\r\n\r\nexport default ZoomableImage;"],"names":["LayoutGroupContext","createContext","useConstant","init","ref","useRef","isBrowser","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","PresenceContext","MotionConfigContext","p","isObject","value","isHTMLElement","element","PopChildMeasure","React.Component","prevProps","parent","parentWidth","size","PopChild","children","isPresent","anchorX","id","useId","nonce","useContext","useInsertionEffect","width","height","top","left","right","x","style","jsx","React.cloneElement","PresenceChild","initial","onExitComplete","custom","presenceAffectsLayout","mode","presenceChildren","newChildrenMap","isReusedContext","context","useMemo","childId","isComplete","_","key","React.useEffect","usePresence","subscribe","register","safeToRemove","useCallback","getChildKey","child","onlyElements","filtered","Children","isValidElement","AnimatePresence","propagate","isParentPresent","presentChildren","presentKeys","isInitialRender","pendingPresentChildren","exitComplete","diffedChildren","setDiffedChildren","useState","renderedChildren","setRenderedChildren","i","exitingChildren","nextChildren","forceRender","Fragment","onExit","isEveryExitComplete","isExitComplete","stepsOrder","statsBuffer","createRenderStep","runNextFrame","stepName","thisFrame","nextFrame","isProcessing","flushNextFrame","toKeepAlive","latestFrameData","numCalls","triggerCallback","callback","step","keepAlive","immediate","queue","frameData","MotionGlobalConfig","maxElapsed","createRenderBatcher","scheduleNextBatch","allowKeepAlive","useDefaultElapsed","state","flagRunNextFrame","steps","acc","setup","read","resolveKeyframes","preUpdate","update","preRender","render","postRender","processBatch","timestamp","wake","process","noop","any","frame","cancelFrame","frameSteps","LazyContext","featureProps","featureDefinitions","props","name","loadFeatures","features","validMotionProps","isValidMotionProp","shouldForward","loadExternalIsValidProp","isValidProp","filterProps","isDom","forwardMotionProps","filteredProps","createDOMMotionComponentProxy","componentFactory","componentCache","deprecatedFactoryFunction","args","_target","MotionContext","isAnimationControls","v","isVariantLabel","variantPriorityOrder","variantProps","isControllingVariants","isVariantNode","getCurrentTreeVariants","animate","useCreateMotionContext","variantLabelsAsDependency","prop","motionComponentSymbol","isRefObject","useMotionRef","visualState","visualElement","externalRef","instance","camelToDash","str","optimizedAppearDataId","optimizedAppearDataAttribute","SwitchLayoutGroupContext","microtask","useVisualElement","Component","createVisualElement","ProjectionNodeConstructor","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","initialLayoutGroupConfig","createProjectionNode","isMounted","optimisedAppearId","wantsHandoff","_a","_b","initialPromotionConfig","layoutId","layout","drag","dragConstraints","layoutScroll","layoutRoot","layoutCrossfade","getClosestProjectingNode","invariant","createRendererMotionComponent","preloadedFeatures","useRender","useVisualState","MotionComponent","MeasureLayout","configAndProps","useLayoutId","isStatic","useStrictMode","layoutProjection","getProjectionFunctionality","jsxs","ForwardRefMotionComponent","forwardRef","layoutGroupId","combined","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","scaleCorrectors","addScaleCorrector","correctors","transformPropOrder","transformProps","isForcedMotionValue","getValueAsType","type","clamp","min","max","number","alpha","scale","int","createUnitType","unit","degrees","percent","px","vh","vw","progressPercentage","transformValueTypes","numberValueTypes","translateAlias","numTransforms","buildTransform","latestValues","transform","transformTemplate","transformString","transformIsDefault","valueIsDefault","valueAsType","transformName","buildHTMLStyles","vars","transformOrigin","hasTransform","hasTransformOrigin","originX","originY","originZ","createHtmlRenderState","isMotionValue","copyRawValuesOnly","target","source","useInitialMotionValues","useStyle","styleProp","useHTMLProps","htmlProps","dashKeys","camelKeys","buildSVGPath","attrs","length","spacing","offset","useDashCase","keys","pathLength","pathSpacing","buildSVGAttrs","attrX","attrY","attrScale","pathOffset","latest","isSVGTag","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","lowercaseSVGElements","isSVGComponent","createUseRender","elementProps","createElement","getValueState","resolveVariantFromProps","definition","current","velocity","resolveMotionValue","makeState","scrapeMotionValuesFromProps","createRenderState","makeLatestValues","makeUseVisualState","config","make","scrapeMotionValues","values","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","list","resolved","transitionEnd","transition","valueTarget","index","newValues","htmlMotionConfig","scrapeMotionValuesFromProps$1","targetKey","svgMotionConfig","createMotionComponentFactory","resolveVariant","isKeyframesTarget","now","clearTime","time","newTime","addUniqueItem","arr","item","removeItem","SubscriptionManager","handler","a","b","c","numSubscriptions","velocityPerSecond","frameDuration","MAX_VELOCITY_DELTA","isFloat","MotionValue","options","currentTime","dependent","prevFrameValue","subscription","eventName","unsubscribe","eventManagers","passiveEffect","stopPassiveEffect","prev","delta","endAnimation","startAnimation","resolve","motionValue","setMotionValue","resolveFinalValueInKeyframes","setTarget","isWillChangeMotionValue","addValueToWillChange","willChange","newWillChange","getOptimisedAppearId","isNotNull","getFinalKeyframe","keyframes","repeat","repeatType","finalKeyframe","resolvedKeyframes","underDampedSpring","criticallyDampedSpring","keyframesTransition","ease","getDefaultTransition","valueKey","isTransitionDefined","when","_delay","delayChildren","staggerChildren","staggerDirection","repeatDelay","from","elapsed","getValueTransition","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","sanitize","floatRegex","isNullish","singleColorRegex","isColorString","testProp","splitColor","aName","bName","cName","clampRgbUnit","rgbUnit","rgba","red","green","blue","alpha$1","parseHex","r","g","hex","hsla","hue","saturation","lightness","color","colorRegex","test","NUMBER_TOKEN","COLOR_TOKEN","VAR_TOKEN","VAR_FUNCTION_TOKEN","SPLIT_TOKEN","complexRegex","analyseComplexValue","originalValue","indexes","types","split","parsedValue","parseComplexValue","createTransformer","numSections","output","convertNumbersToZero","getAnimatableNone","parsed","complex","hueToRgb","q","t","hslaToRgba","mixImmediate","mixNumber","to","progress","mixLinearColor","fromExpo","expo","colorTypes","getColorType","asRGBA","model","mixColor","fromRGBA","toRGBA","blended","invisibleValues","mixVisibility","origin","combineFunctions","pipe","transformers","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","matchOrder","orderedOrigin","pointers","originIndex","originValue","template","originStats","targetStats","mix","frameloopDriver","passTimestamp","generateLinearEasing","easing","duration","resolution","points","numPoints","maxGeneratorDuration","calcGeneratorDuration","generator","timeStep","createGeneratorEasing","createGenerator","velocitySampleDuration","calcGeneratorVelocity","resolveValue","prevT","springDefaults","safeMin","findSpring","bounce","mass","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","d","e","f","initialGuess","approximateRoot","stiffness","rootIterations","result","durationKeys","physicsKeys","isSpringType","getSpringOptions","springOptions","visualDuration","root","damping","derived","spring","optionsOrVisualDuration","restSpeed","restDelta","isResolvedFromDuration","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","dampedAngularFreq","freqForT","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","calculatedDuration","generatorOptions","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","isOutOfBounds","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","toFromDifference","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","isZeroDeltaRange","interpolator","progressInRange","fillOffset","remaining","offsetProgress","defaultOffset","convertOffsetToTimes","o","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","binarySubdivide","lowerBound","upperBound","mX1","mX2","currentX","currentT","cubicBezier","mY1","mY2","getTForX","aX","easeIn","easeOut","easeInOut","isEasingArray","mirrorEasing","reverseEasing","backOut","backIn","backInOut","anticipate","circIn","circOut","circInOut","isBezierDefinition","easingLookup","isValidEasing","easingDefinitionToFunction","x1","y1","x2","y2","defaultEasing","keyframeValues","times","easingFunctions","absoluteTimes","mapTimeToKeyframe","speed","transitionTypeMap","replaceTransitionType","WithPromise","onResolve","onReject","percentToProgress","JSAnimation","keyframes$1","generatorFactory","animationTime","sample","totalDuration","mixKeyframes","mirroredGenerator","resolvedDuration","delay","onUpdate","timeWithoutDelay","isInDelayPhase","frameGenerator","currentIteration","iterationProgress","done","isAnimationFinished","reject","newSpeed","hasChanged","driver","startTime","sampleTime","timeline","fillWildcards","radToDeg","rad","rotate","angle","rebaseAngle","matrix2dParsers","rotateZ","scaleX","scaleY","matrix3dParsers","defaultTransformValue","parseValueFromTransform","matrix3dMatch","parsers","match","matrix2dMatch","valueParser","convertTransformToNumber","readTransformValue","isNumOrPxType","transformKeys","nonTranslationalTransformKeys","removeNonTranslationalTransform","removedTransforms","positionalValues","paddingLeft","paddingRight","y","paddingTop","paddingBottom","_bbox","toResolve","isScheduled","anyNeedsMeasurement","isForced","measureAllKeyframes","resolversToMeasure","resolver","elementsToMeasure","transformsToRestore","restore","readAllKeyframes","flushKeyframeResolvers","KeyframeResolver","unresolvedKeyframes","onComplete","isAsync","currentValue","valueAsRead","isForcedComplete","isCSSVar","setStyle","memo","supportsScrollTimeline","supportsFlags","memoSupports","supportsFlag","memoized","supportsLinearEasing","cubicBezierAsString","supportedWaapiEasing","mapEasingToNativeEasing","segmentEasing","startWaapiAnimation","valueName","pseudoElement","keyframeOptions","isGenerator","applyGeneratorOptions","NativeAnimation","allowFlatten","keyframe","newStartTime","observe","unsupportedEasingFunctions","isUnsupportedEase","replaceStringEasing","sampleDelta","NativeAnimationExtended","sampleAnimation","isAnimatable","hasKeyframesChanged","canAnimate","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","acceleratedValues","supportsWaapi","supportsBrowserAnimation","MAX_RESOLVE_DELAY","AsyncMotionValueAnimation","autoplay","optionsWithDefaults","KeyframeResolver$1","forced","sync","isHandoff","resolvedOptions","animation","_onReject","animateMotionValue","valueTransition","shouldSkip","positionalKeys","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","animations","animationTypeState","appearId","animateVariant","variant","getAnimation","getChildAnimations","forwardDelay","animateChildren","first","last","maxStaggerDuration","generateStaggerDuration","sortByTreeOrder","animateVisualElement","resolvedDefinition","shallowCompare","next","prevLength","numVariantProps","getVariantContext","reversePriorityOrder","numAnimationTypes","animateList","createAnimationState","createState","buildResolvedTypeValues","setAnimateFunction","makeAnimator","animateChanges","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","valueHasChanged","fallbackAnimation","initialTransition","fallbackTarget","shouldAnimate","setActive","isActive","createTypeState","Feature","node","AnimationFeature","prevAnimate","ExitAnimationFeature","prevIsPresent","exitAnimation","addDomEvent","isPrimaryPointer","event","extractEventInfo","addPointerInfo","addPointerEvent","convertBoundingBoxToBox","bottom","convertBoxToBoundingBox","transformBoxPoints","point","transformPoint","topLeft","bottomRight","SCALE_PRECISION","SCALE_MIN","SCALE_MAX","TRANSLATE_PRECISION","TRANSLATE_MIN","TRANSLATE_MAX","calcLength","axis","isNear","maxDistance","calcAxisDelta","calcBoxDelta","calcRelativeAxis","relative","calcRelativeBox","calcRelativeAxisPosition","calcRelativePosition","createAxisDelta","createDelta","createAxis","createBox","eachAxis","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","originPoint","distanceFromOrigin","scaled","applyPointDelta","translate","boxScale","applyAxisDelta","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","applyTreeDeltas","treeScale","treePath","isSharedTransition","treeLength","transformBox","translateAxis","distance","transformAxis","axisTranslate","axisScale","axisOrigin","measureViewportBox","measurePageBox","rootProjectionNode","transformPagePoint","viewportBox","scroll","getContextWindow","distance2D","xDelta","yDelta","PanSession","handlers","contextWindow","dragSnapToOrigin","info","getPanInfo","isPanStarted","isDistancePastThreshold","onStart","onMove","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","subtractPoint","history","lastDevicePoint","startDevicePoint","getVelocity","timeDelta","timestampedPoint","lastPoint","applyConstraints","elastic","calcRelativeAxisConstraints","calcRelativeConstraints","layoutBox","calcViewportAxisConstraints","layoutAxis","constraintsAxis","calcViewportConstraints","constraintsBox","calcOrigin","sourceLength","targetLength","rebaseAxisConstraints","constraints","relativeConstraints","defaultElastic","resolveDragElastic","dragElastic","resolveAxisElastic","minLabel","maxLabel","resolvePointElastic","label","isDragging","isDragActive","setDragLock","elementDragControls","VisualElementDragControls","originEvent","snapToCursor","dragPropagation","onDragStart","projection","measuredAxis","animationState","dragDirectionLock","onDirectionLock","onDrag","getCurrentDirection","onDragEnd","_point","shouldDrag","axisValue","prevConstraints","onMeasureDragConstraints","constraintsElement","measuredConstraints","userConstraints","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","dragKey","externalMotionValue","boxProgress","stopPointerListener","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","direction","currentDirection","lockThreshold","DragGesture","dragControls","asyncHandler","PanGesture","pointerDownEvent","onPanSessionStart","onPanStart","onPan","onPanEnd","globalProjectionState","pixelsToPercent","pixels","correctBorderRadius","correctBoxShadow","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","layoutDependency","stack","promoteContext","animateSingleValue","motionValue$1","compareByDepth","FlatTree","timeout","start","checkElapsed","borders","numBorders","asNumber","isPx","mixValues","follow","lead","shouldCrossfadeOpacity","isOnlyMember","easeCrossfadeIn","easeCrossfadeOut","borderLabel","followRadius","getRadius","leadRadius","radiusName","compress","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisDelta","sourceAxis","removeAxisTransforms","transforms","scaleKey","originKey","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","boxEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","prevLead","indexOfNode","member","preserveFollowOpacity","crossfade","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","zTranslate","transformPerspective","rotateX","rotateY","skewX","skewY","elementScaleX","elementScaleY","isSVGElement","isSVGSVGElement","transformAxes","hiddenVisibility","animationTarget","resetDistortingTransform","sharedAnimationValues","cancelTreeOptimisedTransformAnimations","projectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","subscriptionManager","cancelDelay","resizeUnblockUpdate","finishAnimation","hasRelativeLayoutChanged","newLayout","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","hasTargetChanged","hasOnlyRelativeTargetChanged","animationOptions","resetSkewAndRotation","shouldNotifyListeners","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","updateLayout","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","prevLayout","phase","needsMeasurement","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","roundBox","checkNodeWasScrollRoot","boxWithoutScroll","transformOnly","withTransforms","boxWithoutTransform","nodeBox","forceRecalculation","isShared","relativeParent","canSkip","prevTreeScaleX","prevTreeScaleY","notifyAll","snapshot","snapshotLatestValues","mixedValues","targetDelta","relativeLayout","snapshotSource","layoutSource","isSharedLayoutAnimation","hasOpacityCrossfade","prevRelativeTarget","mixAxisDelta","mixBox","_c","targetWithTransforms","shouldAnimatePositionOnly","xLength","yLength","needsReset","hasDistortingTransform","resetValues","styles","emptyStyles","valuesToRender","correct","applyTo","isCSSVariable","corrected","num","measuredLayout","animationType","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","mixAxis","userAgentContains","string","roundPoint","roundAxis","DocumentProjectionNode","notify","HTMLProjectionNode","documentNode","resolveElements","elementOrSelector","scope","selectorCache","elements","setupGesture","gestureAbortController","eventOptions","isValidHover","hover","onHoverStart","cancel","onPointerEnter","enterEvent","onHoverEnd","onPointerLeave","leaveEvent","handleHoverEvent","lifecycle","HoverGesture","_element","startEvent","endEvent","FocusGesture","isFocusVisible","isNodeOrChild","focusableElements","isElementKeyboardAccessible","isPressing","filterEvents","firePointerEvent","enableKeyboardPress","focusEvent","handleKeydown","handleKeyup","handleBlur","isValidPressEvent","press","targetOrSelector","onPressStart","targets","cancelEvents","startPress","onPressEnd","onPointerEnd","success","onPointerUp","onPointerCancel","upEvent","cancelEvent","handlePressEvent","PressGesture","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","initIntersectionObserver","lookupRoot","rootObservers","observeIntersection","rootInteresectionObserver","thresholdNames","InViewFeature","viewport","rootMargin","amount","once","onIntersectionUpdate","isIntersecting","onViewportEnter","onViewportLeave","hasViewportOptionChanged","prevViewport","gestureAnimations","prefersReducedMotion","hasReducedMotionListener","initPrefersReducedMotion","motionMediaQuery","setReducedMotionPreferences","visualElementStore","updateMotionValuesFromProps","nextValue","prevValue","existingValue","latestValue","isNumericalString","isZeroValueString","auto","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","findValueType","maxDefaults","applyDefaultFilter","defaultValue","functionRegex","filter","functions","defaultValueTypes","getDefaultValueType","defaultValueType","propEventHandlers","VisualElement","_props","_prevProps","_visualElement","blockInitialAnimation","renderState","initialMotionValues","remove","feature","valueIsTransform","removeOnChange","removeOnRenderRequest","removeSyncCheck","other","featureDefinition","isEnabled","FeatureConstructor","listenerName","listener","closestVariantNode","valueFromInitial","splitCSSVariableRegex","parseCSSVariable","token1","token2","fallback","getVariableValue","depth","trimmed","isNone","invalidTemplates","makeNoneKeyframesAnimatable","noneKeyframeIndexes","animatableTemplate","noneIndex","DOMKeyframesResolver","originType","targetType","measureKeyframe","finalKeyframeIndex","unsetTransformName","unsetTransformValue","DOMVisualElement","renderHTML","getComputedStyle","HTMLVisualElement","computedStyle","camelCaseAttributes","renderSVG","_styleProp","SVGVisualElement","defaultType","createDomVisualElement","createMotionComponent","motion","ZoomableImage","React","src","alt","className","isZoomed","setIsZoomed","position","setPosition","isLoading","setIsLoading","imageRef","usePrefersReducedMotion","containerRef","closeButtonRef","handleClose","handleClick","prevIsZoomed","handleKeyDown","handleMouseMove","localHandleClickOutside","localHandleEscapeAndTab","timer","createPortal","X"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256]}