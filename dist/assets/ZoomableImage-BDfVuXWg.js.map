{"version":3,"file":"ZoomableImage-BDfVuXWg.js","sources":["../../src/components/ui/ZoomableImage.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect, useCallback } from 'react'; // Imported useCallback\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport { X } from 'lucide-react';\r\n\r\ninterface ZoomableImageProps {\r\n  src: string;\r\n  alt: string;\r\n  className?: string;\r\n}\r\n\r\nconst ZoomableImage: React.FC<ZoomableImageProps> = React.memo(({ src, alt, className = '' }) => { // Wrapped with React.memo\r\n  const [isZoomed, setIsZoomed] = useState(false);\r\n  const [position, setPosition] = useState({ x: 0, y: 0 });\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const imageRef = useRef<HTMLImageElement>(null);\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n  const closeButtonRef = useRef<HTMLButtonElement>(null);\r\n\r\n  const handleClose = useCallback(() => { // Wrapped handleClose with useCallback\r\n    setIsZoomed(false);\r\n    containerRef.current?.focus();\r\n  }, []); // No dependencies as setIsZoomed is stable and containerRef is a ref\r\n\r\n  const handleClick = useCallback(() => { // Wrapped handleClick with useCallback\r\n    if (!isLoading) {\r\n      setIsZoomed(prevIsZoomed => !prevIsZoomed); // Use functional update for setIsZoomed\r\n    }\r\n  }, [isLoading]); // Dependency: isLoading\r\n\r\n  const handleKeyDown = useCallback((e: React.KeyboardEvent) => { // Wrapped handleKeyDown with useCallback\r\n    if (e.key === 'Escape' && isZoomed) {\r\n      handleClose();\r\n    } else if ((e.key === 'Enter' || e.key === ' ') && !isLoading) {\r\n      e.preventDefault();\r\n      handleClick();\r\n    }\r\n  }, [isZoomed, isLoading, handleClose, handleClick]); // Dependencies: isZoomed, isLoading, handleClose, handleClick\r\n\r\n  const handleMouseMove = useCallback((e: React.MouseEvent<HTMLDivElement>) => { // Wrapped handleMouseMove with useCallback\r\n    if (!containerRef.current || !imageRef.current || !isZoomed) return;\r\n\r\n    const { left, top, width, height } = containerRef.current.getBoundingClientRect();\r\n    const x = ((e.clientX - left) / width) * 100;\r\n    const y = ((e.clientY - top) / height) * 100;\r\n    setPosition({ x, y });\r\n  }, [isZoomed]); // Dependency: isZoomed\r\n\r\n  useEffect(() => {\r\n    // Define event handlers within useEffect or ensure they are stable via useCallback if defined outside\r\n    // For this effect, handleClickOutside and handleEscapeAndTab are only relevant when isZoomed is true\r\n    // and are re-added/removed based on isZoomed.\r\n    // handleClose is already memoized with useCallback.\r\n\r\n    const localHandleClickOutside = (e: MouseEvent) => {\r\n      if (containerRef.current && !containerRef.current.contains(e.target as Node)) {\r\n        handleClose(); // handleClose is stable\r\n      }\r\n    };\r\n\r\n    const localHandleEscapeAndTab = (e: KeyboardEvent) => {\r\n      if (e.key === 'Escape') {\r\n        handleClose(); // handleClose is stable\r\n      } else if (e.key === 'Tab') {\r\n        if (closeButtonRef.current && document.activeElement === closeButtonRef.current) {\r\n          e.preventDefault(); \r\n        } else if (closeButtonRef.current) {\r\n          closeButtonRef.current.focus();\r\n          e.preventDefault();\r\n        }\r\n      }\r\n    };\r\n\r\n    if (isZoomed) {\r\n      document.addEventListener('mousedown', localHandleClickOutside);\r\n      document.addEventListener('keydown', localHandleEscapeAndTab);\r\n      const timer = setTimeout(() => {\r\n        closeButtonRef.current?.focus();\r\n      }, 100);\r\n      return () => {\r\n        clearTimeout(timer);\r\n        document.removeEventListener('mousedown', localHandleClickOutside);\r\n        document.removeEventListener('keydown', localHandleEscapeAndTab);\r\n      };\r\n    }\r\n    // No explicit cleanup needed for the 'else' case here if listeners are only added when isZoomed\r\n  }, [isZoomed, handleClose]); // Dependency: isZoomed and the stable handleClose\r\n\r\n  return (\r\n    <div\r\n      ref={containerRef}\r\n      className={`relative overflow-hidden ${!isLoading ? 'cursor-zoom-in' : 'cursor-wait'} ${className}`}\r\n      onClick={handleClick}\r\n      onMouseMove={handleMouseMove}\r\n      onKeyDown={handleKeyDown}\r\n      role=\"button\"\r\n      tabIndex={0}\r\n      aria-label={`${isZoomed ? 'Close' : 'Zoom'} image: ${alt}`}\r\n    >\r\n      {isLoading && (\r\n        <div className=\"absolute inset-0 flex items-center justify-center bg-accent-bg dark:bg-slate-800 rounded-lg\"> {/* Themed loading background, added rounded-lg to match image container */}\r\n          <div className=\"w-8 h-8 border-4 border-brand-primary border-t-transparent rounded-full animate-spin\"></div> {/* Ensured border-brand-primary */}\r\n        </div>\r\n      )}\r\n      <img\r\n        ref={imageRef}\r\n        src={src}\r\n        alt={alt}\r\n        className={`w-full h-full object-cover transition-transform duration-300 ${\r\n          isZoomed ? 'scale-150' : 'hover:scale-105'\r\n        } ${isLoading ? 'opacity-0' : 'opacity-100'}`}\r\n        style={\r\n          isZoomed\r\n            ? {\r\n                transformOrigin: `${position.x}% ${position.y}%`,\r\n              }\r\n            : {}\r\n        }\r\n        onLoad={() => setIsLoading(false)}\r\n        loading=\"lazy\"\r\n      />\r\n\r\n      <AnimatePresence>\r\n        {isZoomed && (\r\n          <motion.div\r\n            initial={{ opacity: 0 }}\r\n            animate={{ opacity: 1 }}\r\n            exit={{ opacity: 0 }}\r\n            className=\"fixed inset-0 bg-black/90 z-50 flex items-center justify-center p-4\"\r\n            onClick={(e) => e.stopPropagation()}\r\n            role=\"dialog\"\r\n            aria-modal=\"true\"\r\n            aria-label=\"Zoomed image view\"\r\n          >\r\n            <motion.img\r\n              initial={{ scale: 0.5 }}\r\n              animate={{ scale: 1 }}\r\n              exit={{ scale: 0.5 }}\r\n              src={src}\r\n              alt={alt}\r\n              className=\"max-w-full max-h-[90vh] object-contain\"\r\n            />\r\n            <button\r\n              ref={closeButtonRef} // Assign ref to close button\r\n              className=\"absolute top-4 right-4 text-white bg-black/50 rounded-full p-2 hover:bg-black/70 focus:outline-none focus:ring-2 focus:ring-white/50 transition-colors\"\r\n              onClick={handleClose} // Use centralized close handler\r\n              aria-label=\"Close zoomed view\"\r\n            >\r\n              <X className=\"w-6 h-6\" />\r\n            </button>\r\n          </motion.div>\r\n        )}\r\n      </AnimatePresence>\r\n    </div>\r\n  );\r\n});\r\nZoomableImage.displayName = \"ZoomableImage\"; // Optional: for better debugging\r\n\r\nexport default ZoomableImage; "],"names":["useState","useRef","useCallback","useEffect","jsxs","jsx"],"mappings":"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"}