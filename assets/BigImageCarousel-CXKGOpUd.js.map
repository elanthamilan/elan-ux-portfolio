{"version":3,"file":"BigImageCarousel-CXKGOpUd.js","sources":["../../node_modules/lucide-react/dist/esm/icons/arrow-left.js","../../node_modules/lucide-react/dist/esm/icons/chevron-left.js","../../node_modules/lucide-react/dist/esm/icons/chevron-right.js","../../node_modules/lucide-react/dist/esm/icons/maximize-2.js","../../node_modules/embla-carousel-reactive-utils/esm/embla-carousel-reactive-utils.esm.js","../../node_modules/embla-carousel/esm/embla-carousel.esm.js","../../node_modules/embla-carousel-react/esm/embla-carousel-react.esm.js","../../src/components/ui/BigImageCarousel.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.462.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst ArrowLeft = createLucideIcon(\"ArrowLeft\", [\n  [\"path\", { d: \"m12 19-7-7 7-7\", key: \"1l729n\" }],\n  [\"path\", { d: \"M19 12H5\", key: \"x3x0zl\" }]\n]);\n\nexport { ArrowLeft as default };\n//# sourceMappingURL=arrow-left.js.map\n","/**\n * @license lucide-react v0.462.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst ChevronLeft = createLucideIcon(\"ChevronLeft\", [\n  [\"path\", { d: \"m15 18-6-6 6-6\", key: \"1wnfg3\" }]\n]);\n\nexport { ChevronLeft as default };\n//# sourceMappingURL=chevron-left.js.map\n","/**\n * @license lucide-react v0.462.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst ChevronRight = createLucideIcon(\"ChevronRight\", [\n  [\"path\", { d: \"m9 18 6-6-6-6\", key: \"mthhwq\" }]\n]);\n\nexport { ChevronRight as default };\n//# sourceMappingURL=chevron-right.js.map\n","/**\n * @license lucide-react v0.462.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Maximize2 = createLucideIcon(\"Maximize2\", [\n  [\"polyline\", { points: \"15 3 21 3 21 9\", key: \"mznyad\" }],\n  [\"polyline\", { points: \"9 21 3 21 3 15\", key: \"1avn1i\" }],\n  [\"line\", { x1: \"21\", x2: \"14\", y1: \"3\", y2: \"10\", key: \"ota7mn\" }],\n  [\"line\", { x1: \"3\", x2: \"10\", y1: \"21\", y2: \"14\", key: \"1atl0r\" }]\n]);\n\nexport { Maximize2 as default };\n//# sourceMappingURL=maximize-2.js.map\n","function isObject(subject) {\n  return Object.prototype.toString.call(subject) === '[object Object]';\n}\nfunction isRecord(subject) {\n  return isObject(subject) || Array.isArray(subject);\n}\nfunction canUseDOM() {\n  return !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n}\nfunction areOptionsEqual(optionsA, optionsB) {\n  const optionsAKeys = Object.keys(optionsA);\n  const optionsBKeys = Object.keys(optionsB);\n  if (optionsAKeys.length !== optionsBKeys.length) return false;\n  const breakpointsA = JSON.stringify(Object.keys(optionsA.breakpoints || {}));\n  const breakpointsB = JSON.stringify(Object.keys(optionsB.breakpoints || {}));\n  if (breakpointsA !== breakpointsB) return false;\n  return optionsAKeys.every(key => {\n    const valueA = optionsA[key];\n    const valueB = optionsB[key];\n    if (typeof valueA === 'function') return `${valueA}` === `${valueB}`;\n    if (!isRecord(valueA) || !isRecord(valueB)) return valueA === valueB;\n    return areOptionsEqual(valueA, valueB);\n  });\n}\nfunction sortAndMapPluginToOptions(plugins) {\n  return plugins.concat().sort((a, b) => a.name > b.name ? 1 : -1).map(plugin => plugin.options);\n}\nfunction arePluginsEqual(pluginsA, pluginsB) {\n  if (pluginsA.length !== pluginsB.length) return false;\n  const optionsA = sortAndMapPluginToOptions(pluginsA);\n  const optionsB = sortAndMapPluginToOptions(pluginsB);\n  return optionsA.every((optionA, index) => {\n    const optionB = optionsB[index];\n    return areOptionsEqual(optionA, optionB);\n  });\n}\n\nexport { areOptionsEqual, arePluginsEqual, canUseDOM, sortAndMapPluginToOptions };\n//# sourceMappingURL=embla-carousel-reactive-utils.esm.js.map\n","function isNumber(subject) {\n  return typeof subject === 'number';\n}\nfunction isString(subject) {\n  return typeof subject === 'string';\n}\nfunction isBoolean(subject) {\n  return typeof subject === 'boolean';\n}\nfunction isObject(subject) {\n  return Object.prototype.toString.call(subject) === '[object Object]';\n}\nfunction mathAbs(n) {\n  return Math.abs(n);\n}\nfunction mathSign(n) {\n  return Math.sign(n);\n}\nfunction deltaAbs(valueB, valueA) {\n  return mathAbs(valueB - valueA);\n}\nfunction factorAbs(valueB, valueA) {\n  if (valueB === 0 || valueA === 0) return 0;\n  if (mathAbs(valueB) <= mathAbs(valueA)) return 0;\n  const diff = deltaAbs(mathAbs(valueB), mathAbs(valueA));\n  return mathAbs(diff / valueB);\n}\nfunction roundToTwoDecimals(num) {\n  return Math.round(num * 100) / 100;\n}\nfunction arrayKeys(array) {\n  return objectKeys(array).map(Number);\n}\nfunction arrayLast(array) {\n  return array[arrayLastIndex(array)];\n}\nfunction arrayLastIndex(array) {\n  return Math.max(0, array.length - 1);\n}\nfunction arrayIsLastIndex(array, index) {\n  return index === arrayLastIndex(array);\n}\nfunction arrayFromNumber(n, startAt = 0) {\n  return Array.from(Array(n), (_, i) => startAt + i);\n}\nfunction objectKeys(object) {\n  return Object.keys(object);\n}\nfunction objectsMergeDeep(objectA, objectB) {\n  return [objectA, objectB].reduce((mergedObjects, currentObject) => {\n    objectKeys(currentObject).forEach(key => {\n      const valueA = mergedObjects[key];\n      const valueB = currentObject[key];\n      const areObjects = isObject(valueA) && isObject(valueB);\n      mergedObjects[key] = areObjects ? objectsMergeDeep(valueA, valueB) : valueB;\n    });\n    return mergedObjects;\n  }, {});\n}\nfunction isMouseEvent(evt, ownerWindow) {\n  return typeof ownerWindow.MouseEvent !== 'undefined' && evt instanceof ownerWindow.MouseEvent;\n}\n\nfunction Alignment(align, viewSize) {\n  const predefined = {\n    start,\n    center,\n    end\n  };\n  function start() {\n    return 0;\n  }\n  function center(n) {\n    return end(n) / 2;\n  }\n  function end(n) {\n    return viewSize - n;\n  }\n  function measure(n, index) {\n    if (isString(align)) return predefined[align](n);\n    return align(viewSize, n, index);\n  }\n  const self = {\n    measure\n  };\n  return self;\n}\n\nfunction EventStore() {\n  let listeners = [];\n  function add(node, type, handler, options = {\n    passive: true\n  }) {\n    let removeListener;\n    if ('addEventListener' in node) {\n      node.addEventListener(type, handler, options);\n      removeListener = () => node.removeEventListener(type, handler, options);\n    } else {\n      const legacyMediaQueryList = node;\n      legacyMediaQueryList.addListener(handler);\n      removeListener = () => legacyMediaQueryList.removeListener(handler);\n    }\n    listeners.push(removeListener);\n    return self;\n  }\n  function clear() {\n    listeners = listeners.filter(remove => remove());\n  }\n  const self = {\n    add,\n    clear\n  };\n  return self;\n}\n\nfunction Animations(ownerDocument, ownerWindow, update, render) {\n  const documentVisibleHandler = EventStore();\n  const fixedTimeStep = 1000 / 60;\n  let lastTimeStamp = null;\n  let accumulatedTime = 0;\n  let animationId = 0;\n  function init() {\n    documentVisibleHandler.add(ownerDocument, 'visibilitychange', () => {\n      if (ownerDocument.hidden) reset();\n    });\n  }\n  function destroy() {\n    stop();\n    documentVisibleHandler.clear();\n  }\n  function animate(timeStamp) {\n    if (!animationId) return;\n    if (!lastTimeStamp) {\n      lastTimeStamp = timeStamp;\n      update();\n      update();\n    }\n    const timeElapsed = timeStamp - lastTimeStamp;\n    lastTimeStamp = timeStamp;\n    accumulatedTime += timeElapsed;\n    while (accumulatedTime >= fixedTimeStep) {\n      update();\n      accumulatedTime -= fixedTimeStep;\n    }\n    const alpha = accumulatedTime / fixedTimeStep;\n    render(alpha);\n    if (animationId) {\n      animationId = ownerWindow.requestAnimationFrame(animate);\n    }\n  }\n  function start() {\n    if (animationId) return;\n    animationId = ownerWindow.requestAnimationFrame(animate);\n  }\n  function stop() {\n    ownerWindow.cancelAnimationFrame(animationId);\n    lastTimeStamp = null;\n    accumulatedTime = 0;\n    animationId = 0;\n  }\n  function reset() {\n    lastTimeStamp = null;\n    accumulatedTime = 0;\n  }\n  const self = {\n    init,\n    destroy,\n    start,\n    stop,\n    update,\n    render\n  };\n  return self;\n}\n\nfunction Axis(axis, contentDirection) {\n  const isRightToLeft = contentDirection === 'rtl';\n  const isVertical = axis === 'y';\n  const scroll = isVertical ? 'y' : 'x';\n  const cross = isVertical ? 'x' : 'y';\n  const sign = !isVertical && isRightToLeft ? -1 : 1;\n  const startEdge = getStartEdge();\n  const endEdge = getEndEdge();\n  function measureSize(nodeRect) {\n    const {\n      height,\n      width\n    } = nodeRect;\n    return isVertical ? height : width;\n  }\n  function getStartEdge() {\n    if (isVertical) return 'top';\n    return isRightToLeft ? 'right' : 'left';\n  }\n  function getEndEdge() {\n    if (isVertical) return 'bottom';\n    return isRightToLeft ? 'left' : 'right';\n  }\n  function direction(n) {\n    return n * sign;\n  }\n  const self = {\n    scroll,\n    cross,\n    startEdge,\n    endEdge,\n    measureSize,\n    direction\n  };\n  return self;\n}\n\nfunction Limit(min = 0, max = 0) {\n  const length = mathAbs(min - max);\n  function reachedMin(n) {\n    return n < min;\n  }\n  function reachedMax(n) {\n    return n > max;\n  }\n  function reachedAny(n) {\n    return reachedMin(n) || reachedMax(n);\n  }\n  function constrain(n) {\n    if (!reachedAny(n)) return n;\n    return reachedMin(n) ? min : max;\n  }\n  function removeOffset(n) {\n    if (!length) return n;\n    return n - length * Math.ceil((n - max) / length);\n  }\n  const self = {\n    length,\n    max,\n    min,\n    constrain,\n    reachedAny,\n    reachedMax,\n    reachedMin,\n    removeOffset\n  };\n  return self;\n}\n\nfunction Counter(max, start, loop) {\n  const {\n    constrain\n  } = Limit(0, max);\n  const loopEnd = max + 1;\n  let counter = withinLimit(start);\n  function withinLimit(n) {\n    return !loop ? constrain(n) : mathAbs((loopEnd + n) % loopEnd);\n  }\n  function get() {\n    return counter;\n  }\n  function set(n) {\n    counter = withinLimit(n);\n    return self;\n  }\n  function add(n) {\n    return clone().set(get() + n);\n  }\n  function clone() {\n    return Counter(max, get(), loop);\n  }\n  const self = {\n    get,\n    set,\n    add,\n    clone\n  };\n  return self;\n}\n\nfunction DragHandler(axis, rootNode, ownerDocument, ownerWindow, target, dragTracker, location, animation, scrollTo, scrollBody, scrollTarget, index, eventHandler, percentOfView, dragFree, dragThreshold, skipSnaps, baseFriction, watchDrag) {\n  const {\n    cross: crossAxis,\n    direction\n  } = axis;\n  const focusNodes = ['INPUT', 'SELECT', 'TEXTAREA'];\n  const nonPassiveEvent = {\n    passive: false\n  };\n  const initEvents = EventStore();\n  const dragEvents = EventStore();\n  const goToNextThreshold = Limit(50, 225).constrain(percentOfView.measure(20));\n  const snapForceBoost = {\n    mouse: 300,\n    touch: 400\n  };\n  const freeForceBoost = {\n    mouse: 500,\n    touch: 600\n  };\n  const baseSpeed = dragFree ? 43 : 25;\n  let isMoving = false;\n  let startScroll = 0;\n  let startCross = 0;\n  let pointerIsDown = false;\n  let preventScroll = false;\n  let preventClick = false;\n  let isMouse = false;\n  function init(emblaApi) {\n    if (!watchDrag) return;\n    function downIfAllowed(evt) {\n      if (isBoolean(watchDrag) || watchDrag(emblaApi, evt)) down(evt);\n    }\n    const node = rootNode;\n    initEvents.add(node, 'dragstart', evt => evt.preventDefault(), nonPassiveEvent).add(node, 'touchmove', () => undefined, nonPassiveEvent).add(node, 'touchend', () => undefined).add(node, 'touchstart', downIfAllowed).add(node, 'mousedown', downIfAllowed).add(node, 'touchcancel', up).add(node, 'contextmenu', up).add(node, 'click', click, true);\n  }\n  function destroy() {\n    initEvents.clear();\n    dragEvents.clear();\n  }\n  function addDragEvents() {\n    const node = isMouse ? ownerDocument : rootNode;\n    dragEvents.add(node, 'touchmove', move, nonPassiveEvent).add(node, 'touchend', up).add(node, 'mousemove', move, nonPassiveEvent).add(node, 'mouseup', up);\n  }\n  function isFocusNode(node) {\n    const nodeName = node.nodeName || '';\n    return focusNodes.includes(nodeName);\n  }\n  function forceBoost() {\n    const boost = dragFree ? freeForceBoost : snapForceBoost;\n    const type = isMouse ? 'mouse' : 'touch';\n    return boost[type];\n  }\n  function allowedForce(force, targetChanged) {\n    const next = index.add(mathSign(force) * -1);\n    const baseForce = scrollTarget.byDistance(force, !dragFree).distance;\n    if (dragFree || mathAbs(force) < goToNextThreshold) return baseForce;\n    if (skipSnaps && targetChanged) return baseForce * 0.5;\n    return scrollTarget.byIndex(next.get(), 0).distance;\n  }\n  function down(evt) {\n    const isMouseEvt = isMouseEvent(evt, ownerWindow);\n    isMouse = isMouseEvt;\n    preventClick = dragFree && isMouseEvt && !evt.buttons && isMoving;\n    isMoving = deltaAbs(target.get(), location.get()) >= 2;\n    if (isMouseEvt && evt.button !== 0) return;\n    if (isFocusNode(evt.target)) return;\n    pointerIsDown = true;\n    dragTracker.pointerDown(evt);\n    scrollBody.useFriction(0).useDuration(0);\n    target.set(location);\n    addDragEvents();\n    startScroll = dragTracker.readPoint(evt);\n    startCross = dragTracker.readPoint(evt, crossAxis);\n    eventHandler.emit('pointerDown');\n  }\n  function move(evt) {\n    const isTouchEvt = !isMouseEvent(evt, ownerWindow);\n    if (isTouchEvt && evt.touches.length >= 2) return up(evt);\n    const lastScroll = dragTracker.readPoint(evt);\n    const lastCross = dragTracker.readPoint(evt, crossAxis);\n    const diffScroll = deltaAbs(lastScroll, startScroll);\n    const diffCross = deltaAbs(lastCross, startCross);\n    if (!preventScroll && !isMouse) {\n      if (!evt.cancelable) return up(evt);\n      preventScroll = diffScroll > diffCross;\n      if (!preventScroll) return up(evt);\n    }\n    const diff = dragTracker.pointerMove(evt);\n    if (diffScroll > dragThreshold) preventClick = true;\n    scrollBody.useFriction(0.3).useDuration(0.75);\n    animation.start();\n    target.add(direction(diff));\n    evt.preventDefault();\n  }\n  function up(evt) {\n    const currentLocation = scrollTarget.byDistance(0, false);\n    const targetChanged = currentLocation.index !== index.get();\n    const rawForce = dragTracker.pointerUp(evt) * forceBoost();\n    const force = allowedForce(direction(rawForce), targetChanged);\n    const forceFactor = factorAbs(rawForce, force);\n    const speed = baseSpeed - 10 * forceFactor;\n    const friction = baseFriction + forceFactor / 50;\n    preventScroll = false;\n    pointerIsDown = false;\n    dragEvents.clear();\n    scrollBody.useDuration(speed).useFriction(friction);\n    scrollTo.distance(force, !dragFree);\n    isMouse = false;\n    eventHandler.emit('pointerUp');\n  }\n  function click(evt) {\n    if (preventClick) {\n      evt.stopPropagation();\n      evt.preventDefault();\n      preventClick = false;\n    }\n  }\n  function pointerDown() {\n    return pointerIsDown;\n  }\n  const self = {\n    init,\n    destroy,\n    pointerDown\n  };\n  return self;\n}\n\nfunction DragTracker(axis, ownerWindow) {\n  const logInterval = 170;\n  let startEvent;\n  let lastEvent;\n  function readTime(evt) {\n    return evt.timeStamp;\n  }\n  function readPoint(evt, evtAxis) {\n    const property = evtAxis || axis.scroll;\n    const coord = `client${property === 'x' ? 'X' : 'Y'}`;\n    return (isMouseEvent(evt, ownerWindow) ? evt : evt.touches[0])[coord];\n  }\n  function pointerDown(evt) {\n    startEvent = evt;\n    lastEvent = evt;\n    return readPoint(evt);\n  }\n  function pointerMove(evt) {\n    const diff = readPoint(evt) - readPoint(lastEvent);\n    const expired = readTime(evt) - readTime(startEvent) > logInterval;\n    lastEvent = evt;\n    if (expired) startEvent = evt;\n    return diff;\n  }\n  function pointerUp(evt) {\n    if (!startEvent || !lastEvent) return 0;\n    const diffDrag = readPoint(lastEvent) - readPoint(startEvent);\n    const diffTime = readTime(evt) - readTime(startEvent);\n    const expired = readTime(evt) - readTime(lastEvent) > logInterval;\n    const force = diffDrag / diffTime;\n    const isFlick = diffTime && !expired && mathAbs(force) > 0.1;\n    return isFlick ? force : 0;\n  }\n  const self = {\n    pointerDown,\n    pointerMove,\n    pointerUp,\n    readPoint\n  };\n  return self;\n}\n\nfunction NodeRects() {\n  function measure(node) {\n    const {\n      offsetTop,\n      offsetLeft,\n      offsetWidth,\n      offsetHeight\n    } = node;\n    const offset = {\n      top: offsetTop,\n      right: offsetLeft + offsetWidth,\n      bottom: offsetTop + offsetHeight,\n      left: offsetLeft,\n      width: offsetWidth,\n      height: offsetHeight\n    };\n    return offset;\n  }\n  const self = {\n    measure\n  };\n  return self;\n}\n\nfunction PercentOfView(viewSize) {\n  function measure(n) {\n    return viewSize * (n / 100);\n  }\n  const self = {\n    measure\n  };\n  return self;\n}\n\nfunction ResizeHandler(container, eventHandler, ownerWindow, slides, axis, watchResize, nodeRects) {\n  const observeNodes = [container].concat(slides);\n  let resizeObserver;\n  let containerSize;\n  let slideSizes = [];\n  let destroyed = false;\n  function readSize(node) {\n    return axis.measureSize(nodeRects.measure(node));\n  }\n  function init(emblaApi) {\n    if (!watchResize) return;\n    containerSize = readSize(container);\n    slideSizes = slides.map(readSize);\n    function defaultCallback(entries) {\n      for (const entry of entries) {\n        if (destroyed) return;\n        const isContainer = entry.target === container;\n        const slideIndex = slides.indexOf(entry.target);\n        const lastSize = isContainer ? containerSize : slideSizes[slideIndex];\n        const newSize = readSize(isContainer ? container : slides[slideIndex]);\n        const diffSize = mathAbs(newSize - lastSize);\n        if (diffSize >= 0.5) {\n          emblaApi.reInit();\n          eventHandler.emit('resize');\n          break;\n        }\n      }\n    }\n    resizeObserver = new ResizeObserver(entries => {\n      if (isBoolean(watchResize) || watchResize(emblaApi, entries)) {\n        defaultCallback(entries);\n      }\n    });\n    ownerWindow.requestAnimationFrame(() => {\n      observeNodes.forEach(node => resizeObserver.observe(node));\n    });\n  }\n  function destroy() {\n    destroyed = true;\n    if (resizeObserver) resizeObserver.disconnect();\n  }\n  const self = {\n    init,\n    destroy\n  };\n  return self;\n}\n\nfunction ScrollBody(location, offsetLocation, previousLocation, target, baseDuration, baseFriction) {\n  let scrollVelocity = 0;\n  let scrollDirection = 0;\n  let scrollDuration = baseDuration;\n  let scrollFriction = baseFriction;\n  let rawLocation = location.get();\n  let rawLocationPrevious = 0;\n  function seek() {\n    const displacement = target.get() - location.get();\n    const isInstant = !scrollDuration;\n    let scrollDistance = 0;\n    if (isInstant) {\n      scrollVelocity = 0;\n      previousLocation.set(target);\n      location.set(target);\n      scrollDistance = displacement;\n    } else {\n      previousLocation.set(location);\n      scrollVelocity += displacement / scrollDuration;\n      scrollVelocity *= scrollFriction;\n      rawLocation += scrollVelocity;\n      location.add(scrollVelocity);\n      scrollDistance = rawLocation - rawLocationPrevious;\n    }\n    scrollDirection = mathSign(scrollDistance);\n    rawLocationPrevious = rawLocation;\n    return self;\n  }\n  function settled() {\n    const diff = target.get() - offsetLocation.get();\n    return mathAbs(diff) < 0.001;\n  }\n  function duration() {\n    return scrollDuration;\n  }\n  function direction() {\n    return scrollDirection;\n  }\n  function velocity() {\n    return scrollVelocity;\n  }\n  function useBaseDuration() {\n    return useDuration(baseDuration);\n  }\n  function useBaseFriction() {\n    return useFriction(baseFriction);\n  }\n  function useDuration(n) {\n    scrollDuration = n;\n    return self;\n  }\n  function useFriction(n) {\n    scrollFriction = n;\n    return self;\n  }\n  const self = {\n    direction,\n    duration,\n    velocity,\n    seek,\n    settled,\n    useBaseFriction,\n    useBaseDuration,\n    useFriction,\n    useDuration\n  };\n  return self;\n}\n\nfunction ScrollBounds(limit, location, target, scrollBody, percentOfView) {\n  const pullBackThreshold = percentOfView.measure(10);\n  const edgeOffsetTolerance = percentOfView.measure(50);\n  const frictionLimit = Limit(0.1, 0.99);\n  let disabled = false;\n  function shouldConstrain() {\n    if (disabled) return false;\n    if (!limit.reachedAny(target.get())) return false;\n    if (!limit.reachedAny(location.get())) return false;\n    return true;\n  }\n  function constrain(pointerDown) {\n    if (!shouldConstrain()) return;\n    const edge = limit.reachedMin(location.get()) ? 'min' : 'max';\n    const diffToEdge = mathAbs(limit[edge] - location.get());\n    const diffToTarget = target.get() - location.get();\n    const friction = frictionLimit.constrain(diffToEdge / edgeOffsetTolerance);\n    target.subtract(diffToTarget * friction);\n    if (!pointerDown && mathAbs(diffToTarget) < pullBackThreshold) {\n      target.set(limit.constrain(target.get()));\n      scrollBody.useDuration(25).useBaseFriction();\n    }\n  }\n  function toggleActive(active) {\n    disabled = !active;\n  }\n  const self = {\n    shouldConstrain,\n    constrain,\n    toggleActive\n  };\n  return self;\n}\n\nfunction ScrollContain(viewSize, contentSize, snapsAligned, containScroll, pixelTolerance) {\n  const scrollBounds = Limit(-contentSize + viewSize, 0);\n  const snapsBounded = measureBounded();\n  const scrollContainLimit = findScrollContainLimit();\n  const snapsContained = measureContained();\n  function usePixelTolerance(bound, snap) {\n    return deltaAbs(bound, snap) <= 1;\n  }\n  function findScrollContainLimit() {\n    const startSnap = snapsBounded[0];\n    const endSnap = arrayLast(snapsBounded);\n    const min = snapsBounded.lastIndexOf(startSnap);\n    const max = snapsBounded.indexOf(endSnap) + 1;\n    return Limit(min, max);\n  }\n  function measureBounded() {\n    return snapsAligned.map((snapAligned, index) => {\n      const {\n        min,\n        max\n      } = scrollBounds;\n      const snap = scrollBounds.constrain(snapAligned);\n      const isFirst = !index;\n      const isLast = arrayIsLastIndex(snapsAligned, index);\n      if (isFirst) return max;\n      if (isLast) return min;\n      if (usePixelTolerance(min, snap)) return min;\n      if (usePixelTolerance(max, snap)) return max;\n      return snap;\n    }).map(scrollBound => parseFloat(scrollBound.toFixed(3)));\n  }\n  function measureContained() {\n    if (contentSize <= viewSize + pixelTolerance) return [scrollBounds.max];\n    if (containScroll === 'keepSnaps') return snapsBounded;\n    const {\n      min,\n      max\n    } = scrollContainLimit;\n    return snapsBounded.slice(min, max);\n  }\n  const self = {\n    snapsContained,\n    scrollContainLimit\n  };\n  return self;\n}\n\nfunction ScrollLimit(contentSize, scrollSnaps, loop) {\n  const max = scrollSnaps[0];\n  const min = loop ? max - contentSize : arrayLast(scrollSnaps);\n  const limit = Limit(min, max);\n  const self = {\n    limit\n  };\n  return self;\n}\n\nfunction ScrollLooper(contentSize, limit, location, vectors) {\n  const jointSafety = 0.1;\n  const min = limit.min + jointSafety;\n  const max = limit.max + jointSafety;\n  const {\n    reachedMin,\n    reachedMax\n  } = Limit(min, max);\n  function shouldLoop(direction) {\n    if (direction === 1) return reachedMax(location.get());\n    if (direction === -1) return reachedMin(location.get());\n    return false;\n  }\n  function loop(direction) {\n    if (!shouldLoop(direction)) return;\n    const loopDistance = contentSize * (direction * -1);\n    vectors.forEach(v => v.add(loopDistance));\n  }\n  const self = {\n    loop\n  };\n  return self;\n}\n\nfunction ScrollProgress(limit) {\n  const {\n    max,\n    length\n  } = limit;\n  function get(n) {\n    const currentLocation = n - max;\n    return length ? currentLocation / -length : 0;\n  }\n  const self = {\n    get\n  };\n  return self;\n}\n\nfunction ScrollSnaps(axis, alignment, containerRect, slideRects, slidesToScroll) {\n  const {\n    startEdge,\n    endEdge\n  } = axis;\n  const {\n    groupSlides\n  } = slidesToScroll;\n  const alignments = measureSizes().map(alignment.measure);\n  const snaps = measureUnaligned();\n  const snapsAligned = measureAligned();\n  function measureSizes() {\n    return groupSlides(slideRects).map(rects => arrayLast(rects)[endEdge] - rects[0][startEdge]).map(mathAbs);\n  }\n  function measureUnaligned() {\n    return slideRects.map(rect => containerRect[startEdge] - rect[startEdge]).map(snap => -mathAbs(snap));\n  }\n  function measureAligned() {\n    return groupSlides(snaps).map(g => g[0]).map((snap, index) => snap + alignments[index]);\n  }\n  const self = {\n    snaps,\n    snapsAligned\n  };\n  return self;\n}\n\nfunction SlideRegistry(containSnaps, containScroll, scrollSnaps, scrollContainLimit, slidesToScroll, slideIndexes) {\n  const {\n    groupSlides\n  } = slidesToScroll;\n  const {\n    min,\n    max\n  } = scrollContainLimit;\n  const slideRegistry = createSlideRegistry();\n  function createSlideRegistry() {\n    const groupedSlideIndexes = groupSlides(slideIndexes);\n    const doNotContain = !containSnaps || containScroll === 'keepSnaps';\n    if (scrollSnaps.length === 1) return [slideIndexes];\n    if (doNotContain) return groupedSlideIndexes;\n    return groupedSlideIndexes.slice(min, max).map((group, index, groups) => {\n      const isFirst = !index;\n      const isLast = arrayIsLastIndex(groups, index);\n      if (isFirst) {\n        const range = arrayLast(groups[0]) + 1;\n        return arrayFromNumber(range);\n      }\n      if (isLast) {\n        const range = arrayLastIndex(slideIndexes) - arrayLast(groups)[0] + 1;\n        return arrayFromNumber(range, arrayLast(groups)[0]);\n      }\n      return group;\n    });\n  }\n  const self = {\n    slideRegistry\n  };\n  return self;\n}\n\nfunction ScrollTarget(loop, scrollSnaps, contentSize, limit, targetVector) {\n  const {\n    reachedAny,\n    removeOffset,\n    constrain\n  } = limit;\n  function minDistance(distances) {\n    return distances.concat().sort((a, b) => mathAbs(a) - mathAbs(b))[0];\n  }\n  function findTargetSnap(target) {\n    const distance = loop ? removeOffset(target) : constrain(target);\n    const ascDiffsToSnaps = scrollSnaps.map((snap, index) => ({\n      diff: shortcut(snap - distance, 0),\n      index\n    })).sort((d1, d2) => mathAbs(d1.diff) - mathAbs(d2.diff));\n    const {\n      index\n    } = ascDiffsToSnaps[0];\n    return {\n      index,\n      distance\n    };\n  }\n  function shortcut(target, direction) {\n    const targets = [target, target + contentSize, target - contentSize];\n    if (!loop) return target;\n    if (!direction) return minDistance(targets);\n    const matchingTargets = targets.filter(t => mathSign(t) === direction);\n    if (matchingTargets.length) return minDistance(matchingTargets);\n    return arrayLast(targets) - contentSize;\n  }\n  function byIndex(index, direction) {\n    const diffToSnap = scrollSnaps[index] - targetVector.get();\n    const distance = shortcut(diffToSnap, direction);\n    return {\n      index,\n      distance\n    };\n  }\n  function byDistance(distance, snap) {\n    const target = targetVector.get() + distance;\n    const {\n      index,\n      distance: targetSnapDistance\n    } = findTargetSnap(target);\n    const reachedBound = !loop && reachedAny(target);\n    if (!snap || reachedBound) return {\n      index,\n      distance\n    };\n    const diffToSnap = scrollSnaps[index] - targetSnapDistance;\n    const snapDistance = distance + shortcut(diffToSnap, 0);\n    return {\n      index,\n      distance: snapDistance\n    };\n  }\n  const self = {\n    byDistance,\n    byIndex,\n    shortcut\n  };\n  return self;\n}\n\nfunction ScrollTo(animation, indexCurrent, indexPrevious, scrollBody, scrollTarget, targetVector, eventHandler) {\n  function scrollTo(target) {\n    const distanceDiff = target.distance;\n    const indexDiff = target.index !== indexCurrent.get();\n    targetVector.add(distanceDiff);\n    if (distanceDiff) {\n      if (scrollBody.duration()) {\n        animation.start();\n      } else {\n        animation.update();\n        animation.render(1);\n        animation.update();\n      }\n    }\n    if (indexDiff) {\n      indexPrevious.set(indexCurrent.get());\n      indexCurrent.set(target.index);\n      eventHandler.emit('select');\n    }\n  }\n  function distance(n, snap) {\n    const target = scrollTarget.byDistance(n, snap);\n    scrollTo(target);\n  }\n  function index(n, direction) {\n    const targetIndex = indexCurrent.clone().set(n);\n    const target = scrollTarget.byIndex(targetIndex.get(), direction);\n    scrollTo(target);\n  }\n  const self = {\n    distance,\n    index\n  };\n  return self;\n}\n\nfunction SlideFocus(root, slides, slideRegistry, scrollTo, scrollBody, eventStore, eventHandler, watchFocus) {\n  const focusListenerOptions = {\n    passive: true,\n    capture: true\n  };\n  let lastTabPressTime = 0;\n  function init(emblaApi) {\n    if (!watchFocus) return;\n    function defaultCallback(index) {\n      const nowTime = new Date().getTime();\n      const diffTime = nowTime - lastTabPressTime;\n      if (diffTime > 10) return;\n      eventHandler.emit('slideFocusStart');\n      root.scrollLeft = 0;\n      const group = slideRegistry.findIndex(group => group.includes(index));\n      if (!isNumber(group)) return;\n      scrollBody.useDuration(0);\n      scrollTo.index(group, 0);\n      eventHandler.emit('slideFocus');\n    }\n    eventStore.add(document, 'keydown', registerTabPress, false);\n    slides.forEach((slide, slideIndex) => {\n      eventStore.add(slide, 'focus', evt => {\n        if (isBoolean(watchFocus) || watchFocus(emblaApi, evt)) {\n          defaultCallback(slideIndex);\n        }\n      }, focusListenerOptions);\n    });\n  }\n  function registerTabPress(event) {\n    if (event.code === 'Tab') lastTabPressTime = new Date().getTime();\n  }\n  const self = {\n    init\n  };\n  return self;\n}\n\nfunction Vector1D(initialValue) {\n  let value = initialValue;\n  function get() {\n    return value;\n  }\n  function set(n) {\n    value = normalizeInput(n);\n  }\n  function add(n) {\n    value += normalizeInput(n);\n  }\n  function subtract(n) {\n    value -= normalizeInput(n);\n  }\n  function normalizeInput(n) {\n    return isNumber(n) ? n : n.get();\n  }\n  const self = {\n    get,\n    set,\n    add,\n    subtract\n  };\n  return self;\n}\n\nfunction Translate(axis, container) {\n  const translate = axis.scroll === 'x' ? x : y;\n  const containerStyle = container.style;\n  let previousTarget = null;\n  let disabled = false;\n  function x(n) {\n    return `translate3d(${n}px,0px,0px)`;\n  }\n  function y(n) {\n    return `translate3d(0px,${n}px,0px)`;\n  }\n  function to(target) {\n    if (disabled) return;\n    const newTarget = roundToTwoDecimals(axis.direction(target));\n    if (newTarget === previousTarget) return;\n    containerStyle.transform = translate(newTarget);\n    previousTarget = newTarget;\n  }\n  function toggleActive(active) {\n    disabled = !active;\n  }\n  function clear() {\n    if (disabled) return;\n    containerStyle.transform = '';\n    if (!container.getAttribute('style')) container.removeAttribute('style');\n  }\n  const self = {\n    clear,\n    to,\n    toggleActive\n  };\n  return self;\n}\n\nfunction SlideLooper(axis, viewSize, contentSize, slideSizes, slideSizesWithGaps, snaps, scrollSnaps, location, slides) {\n  const roundingSafety = 0.5;\n  const ascItems = arrayKeys(slideSizesWithGaps);\n  const descItems = arrayKeys(slideSizesWithGaps).reverse();\n  const loopPoints = startPoints().concat(endPoints());\n  function removeSlideSizes(indexes, from) {\n    return indexes.reduce((a, i) => {\n      return a - slideSizesWithGaps[i];\n    }, from);\n  }\n  function slidesInGap(indexes, gap) {\n    return indexes.reduce((a, i) => {\n      const remainingGap = removeSlideSizes(a, gap);\n      return remainingGap > 0 ? a.concat([i]) : a;\n    }, []);\n  }\n  function findSlideBounds(offset) {\n    return snaps.map((snap, index) => ({\n      start: snap - slideSizes[index] + roundingSafety + offset,\n      end: snap + viewSize - roundingSafety + offset\n    }));\n  }\n  function findLoopPoints(indexes, offset, isEndEdge) {\n    const slideBounds = findSlideBounds(offset);\n    return indexes.map(index => {\n      const initial = isEndEdge ? 0 : -contentSize;\n      const altered = isEndEdge ? contentSize : 0;\n      const boundEdge = isEndEdge ? 'end' : 'start';\n      const loopPoint = slideBounds[index][boundEdge];\n      return {\n        index,\n        loopPoint,\n        slideLocation: Vector1D(-1),\n        translate: Translate(axis, slides[index]),\n        target: () => location.get() > loopPoint ? initial : altered\n      };\n    });\n  }\n  function startPoints() {\n    const gap = scrollSnaps[0];\n    const indexes = slidesInGap(descItems, gap);\n    return findLoopPoints(indexes, contentSize, false);\n  }\n  function endPoints() {\n    const gap = viewSize - scrollSnaps[0] - 1;\n    const indexes = slidesInGap(ascItems, gap);\n    return findLoopPoints(indexes, -contentSize, true);\n  }\n  function canLoop() {\n    return loopPoints.every(({\n      index\n    }) => {\n      const otherIndexes = ascItems.filter(i => i !== index);\n      return removeSlideSizes(otherIndexes, viewSize) <= 0.1;\n    });\n  }\n  function loop() {\n    loopPoints.forEach(loopPoint => {\n      const {\n        target,\n        translate,\n        slideLocation\n      } = loopPoint;\n      const shiftLocation = target();\n      if (shiftLocation === slideLocation.get()) return;\n      translate.to(shiftLocation);\n      slideLocation.set(shiftLocation);\n    });\n  }\n  function clear() {\n    loopPoints.forEach(loopPoint => loopPoint.translate.clear());\n  }\n  const self = {\n    canLoop,\n    clear,\n    loop,\n    loopPoints\n  };\n  return self;\n}\n\nfunction SlidesHandler(container, eventHandler, watchSlides) {\n  let mutationObserver;\n  let destroyed = false;\n  function init(emblaApi) {\n    if (!watchSlides) return;\n    function defaultCallback(mutations) {\n      for (const mutation of mutations) {\n        if (mutation.type === 'childList') {\n          emblaApi.reInit();\n          eventHandler.emit('slidesChanged');\n          break;\n        }\n      }\n    }\n    mutationObserver = new MutationObserver(mutations => {\n      if (destroyed) return;\n      if (isBoolean(watchSlides) || watchSlides(emblaApi, mutations)) {\n        defaultCallback(mutations);\n      }\n    });\n    mutationObserver.observe(container, {\n      childList: true\n    });\n  }\n  function destroy() {\n    if (mutationObserver) mutationObserver.disconnect();\n    destroyed = true;\n  }\n  const self = {\n    init,\n    destroy\n  };\n  return self;\n}\n\nfunction SlidesInView(container, slides, eventHandler, threshold) {\n  const intersectionEntryMap = {};\n  let inViewCache = null;\n  let notInViewCache = null;\n  let intersectionObserver;\n  let destroyed = false;\n  function init() {\n    intersectionObserver = new IntersectionObserver(entries => {\n      if (destroyed) return;\n      entries.forEach(entry => {\n        const index = slides.indexOf(entry.target);\n        intersectionEntryMap[index] = entry;\n      });\n      inViewCache = null;\n      notInViewCache = null;\n      eventHandler.emit('slidesInView');\n    }, {\n      root: container.parentElement,\n      threshold\n    });\n    slides.forEach(slide => intersectionObserver.observe(slide));\n  }\n  function destroy() {\n    if (intersectionObserver) intersectionObserver.disconnect();\n    destroyed = true;\n  }\n  function createInViewList(inView) {\n    return objectKeys(intersectionEntryMap).reduce((list, slideIndex) => {\n      const index = parseInt(slideIndex);\n      const {\n        isIntersecting\n      } = intersectionEntryMap[index];\n      const inViewMatch = inView && isIntersecting;\n      const notInViewMatch = !inView && !isIntersecting;\n      if (inViewMatch || notInViewMatch) list.push(index);\n      return list;\n    }, []);\n  }\n  function get(inView = true) {\n    if (inView && inViewCache) return inViewCache;\n    if (!inView && notInViewCache) return notInViewCache;\n    const slideIndexes = createInViewList(inView);\n    if (inView) inViewCache = slideIndexes;\n    if (!inView) notInViewCache = slideIndexes;\n    return slideIndexes;\n  }\n  const self = {\n    init,\n    destroy,\n    get\n  };\n  return self;\n}\n\nfunction SlideSizes(axis, containerRect, slideRects, slides, readEdgeGap, ownerWindow) {\n  const {\n    measureSize,\n    startEdge,\n    endEdge\n  } = axis;\n  const withEdgeGap = slideRects[0] && readEdgeGap;\n  const startGap = measureStartGap();\n  const endGap = measureEndGap();\n  const slideSizes = slideRects.map(measureSize);\n  const slideSizesWithGaps = measureWithGaps();\n  function measureStartGap() {\n    if (!withEdgeGap) return 0;\n    const slideRect = slideRects[0];\n    return mathAbs(containerRect[startEdge] - slideRect[startEdge]);\n  }\n  function measureEndGap() {\n    if (!withEdgeGap) return 0;\n    const style = ownerWindow.getComputedStyle(arrayLast(slides));\n    return parseFloat(style.getPropertyValue(`margin-${endEdge}`));\n  }\n  function measureWithGaps() {\n    return slideRects.map((rect, index, rects) => {\n      const isFirst = !index;\n      const isLast = arrayIsLastIndex(rects, index);\n      if (isFirst) return slideSizes[index] + startGap;\n      if (isLast) return slideSizes[index] + endGap;\n      return rects[index + 1][startEdge] - rect[startEdge];\n    }).map(mathAbs);\n  }\n  const self = {\n    slideSizes,\n    slideSizesWithGaps,\n    startGap,\n    endGap\n  };\n  return self;\n}\n\nfunction SlidesToScroll(axis, viewSize, slidesToScroll, loop, containerRect, slideRects, startGap, endGap, pixelTolerance) {\n  const {\n    startEdge,\n    endEdge,\n    direction\n  } = axis;\n  const groupByNumber = isNumber(slidesToScroll);\n  function byNumber(array, groupSize) {\n    return arrayKeys(array).filter(i => i % groupSize === 0).map(i => array.slice(i, i + groupSize));\n  }\n  function bySize(array) {\n    if (!array.length) return [];\n    return arrayKeys(array).reduce((groups, rectB, index) => {\n      const rectA = arrayLast(groups) || 0;\n      const isFirst = rectA === 0;\n      const isLast = rectB === arrayLastIndex(array);\n      const edgeA = containerRect[startEdge] - slideRects[rectA][startEdge];\n      const edgeB = containerRect[startEdge] - slideRects[rectB][endEdge];\n      const gapA = !loop && isFirst ? direction(startGap) : 0;\n      const gapB = !loop && isLast ? direction(endGap) : 0;\n      const chunkSize = mathAbs(edgeB - gapB - (edgeA + gapA));\n      if (index && chunkSize > viewSize + pixelTolerance) groups.push(rectB);\n      if (isLast) groups.push(array.length);\n      return groups;\n    }, []).map((currentSize, index, groups) => {\n      const previousSize = Math.max(groups[index - 1] || 0);\n      return array.slice(previousSize, currentSize);\n    });\n  }\n  function groupSlides(array) {\n    return groupByNumber ? byNumber(array, slidesToScroll) : bySize(array);\n  }\n  const self = {\n    groupSlides\n  };\n  return self;\n}\n\nfunction Engine(root, container, slides, ownerDocument, ownerWindow, options, eventHandler) {\n  // Options\n  const {\n    align,\n    axis: scrollAxis,\n    direction,\n    startIndex,\n    loop,\n    duration,\n    dragFree,\n    dragThreshold,\n    inViewThreshold,\n    slidesToScroll: groupSlides,\n    skipSnaps,\n    containScroll,\n    watchResize,\n    watchSlides,\n    watchDrag,\n    watchFocus\n  } = options;\n  // Measurements\n  const pixelTolerance = 2;\n  const nodeRects = NodeRects();\n  const containerRect = nodeRects.measure(container);\n  const slideRects = slides.map(nodeRects.measure);\n  const axis = Axis(scrollAxis, direction);\n  const viewSize = axis.measureSize(containerRect);\n  const percentOfView = PercentOfView(viewSize);\n  const alignment = Alignment(align, viewSize);\n  const containSnaps = !loop && !!containScroll;\n  const readEdgeGap = loop || !!containScroll;\n  const {\n    slideSizes,\n    slideSizesWithGaps,\n    startGap,\n    endGap\n  } = SlideSizes(axis, containerRect, slideRects, slides, readEdgeGap, ownerWindow);\n  const slidesToScroll = SlidesToScroll(axis, viewSize, groupSlides, loop, containerRect, slideRects, startGap, endGap, pixelTolerance);\n  const {\n    snaps,\n    snapsAligned\n  } = ScrollSnaps(axis, alignment, containerRect, slideRects, slidesToScroll);\n  const contentSize = -arrayLast(snaps) + arrayLast(slideSizesWithGaps);\n  const {\n    snapsContained,\n    scrollContainLimit\n  } = ScrollContain(viewSize, contentSize, snapsAligned, containScroll, pixelTolerance);\n  const scrollSnaps = containSnaps ? snapsContained : snapsAligned;\n  const {\n    limit\n  } = ScrollLimit(contentSize, scrollSnaps, loop);\n  // Indexes\n  const index = Counter(arrayLastIndex(scrollSnaps), startIndex, loop);\n  const indexPrevious = index.clone();\n  const slideIndexes = arrayKeys(slides);\n  // Animation\n  const update = ({\n    dragHandler,\n    scrollBody,\n    scrollBounds,\n    options: {\n      loop\n    }\n  }) => {\n    if (!loop) scrollBounds.constrain(dragHandler.pointerDown());\n    scrollBody.seek();\n  };\n  const render = ({\n    scrollBody,\n    translate,\n    location,\n    offsetLocation,\n    previousLocation,\n    scrollLooper,\n    slideLooper,\n    dragHandler,\n    animation,\n    eventHandler,\n    scrollBounds,\n    options: {\n      loop\n    }\n  }, alpha) => {\n    const shouldSettle = scrollBody.settled();\n    const withinBounds = !scrollBounds.shouldConstrain();\n    const hasSettled = loop ? shouldSettle : shouldSettle && withinBounds;\n    const hasSettledAndIdle = hasSettled && !dragHandler.pointerDown();\n    if (hasSettledAndIdle) animation.stop();\n    const interpolatedLocation = location.get() * alpha + previousLocation.get() * (1 - alpha);\n    offsetLocation.set(interpolatedLocation);\n    if (loop) {\n      scrollLooper.loop(scrollBody.direction());\n      slideLooper.loop();\n    }\n    translate.to(offsetLocation.get());\n    if (hasSettledAndIdle) eventHandler.emit('settle');\n    if (!hasSettled) eventHandler.emit('scroll');\n  };\n  const animation = Animations(ownerDocument, ownerWindow, () => update(engine), alpha => render(engine, alpha));\n  // Shared\n  const friction = 0.68;\n  const startLocation = scrollSnaps[index.get()];\n  const location = Vector1D(startLocation);\n  const previousLocation = Vector1D(startLocation);\n  const offsetLocation = Vector1D(startLocation);\n  const target = Vector1D(startLocation);\n  const scrollBody = ScrollBody(location, offsetLocation, previousLocation, target, duration, friction);\n  const scrollTarget = ScrollTarget(loop, scrollSnaps, contentSize, limit, target);\n  const scrollTo = ScrollTo(animation, index, indexPrevious, scrollBody, scrollTarget, target, eventHandler);\n  const scrollProgress = ScrollProgress(limit);\n  const eventStore = EventStore();\n  const slidesInView = SlidesInView(container, slides, eventHandler, inViewThreshold);\n  const {\n    slideRegistry\n  } = SlideRegistry(containSnaps, containScroll, scrollSnaps, scrollContainLimit, slidesToScroll, slideIndexes);\n  const slideFocus = SlideFocus(root, slides, slideRegistry, scrollTo, scrollBody, eventStore, eventHandler, watchFocus);\n  // Engine\n  const engine = {\n    ownerDocument,\n    ownerWindow,\n    eventHandler,\n    containerRect,\n    slideRects,\n    animation,\n    axis,\n    dragHandler: DragHandler(axis, root, ownerDocument, ownerWindow, target, DragTracker(axis, ownerWindow), location, animation, scrollTo, scrollBody, scrollTarget, index, eventHandler, percentOfView, dragFree, dragThreshold, skipSnaps, friction, watchDrag),\n    eventStore,\n    percentOfView,\n    index,\n    indexPrevious,\n    limit,\n    location,\n    offsetLocation,\n    previousLocation,\n    options,\n    resizeHandler: ResizeHandler(container, eventHandler, ownerWindow, slides, axis, watchResize, nodeRects),\n    scrollBody,\n    scrollBounds: ScrollBounds(limit, offsetLocation, target, scrollBody, percentOfView),\n    scrollLooper: ScrollLooper(contentSize, limit, offsetLocation, [location, offsetLocation, previousLocation, target]),\n    scrollProgress,\n    scrollSnapList: scrollSnaps.map(scrollProgress.get),\n    scrollSnaps,\n    scrollTarget,\n    scrollTo,\n    slideLooper: SlideLooper(axis, viewSize, contentSize, slideSizes, slideSizesWithGaps, snaps, scrollSnaps, offsetLocation, slides),\n    slideFocus,\n    slidesHandler: SlidesHandler(container, eventHandler, watchSlides),\n    slidesInView,\n    slideIndexes,\n    slideRegistry,\n    slidesToScroll,\n    target,\n    translate: Translate(axis, container)\n  };\n  return engine;\n}\n\nfunction EventHandler() {\n  let listeners = {};\n  let api;\n  function init(emblaApi) {\n    api = emblaApi;\n  }\n  function getListeners(evt) {\n    return listeners[evt] || [];\n  }\n  function emit(evt) {\n    getListeners(evt).forEach(e => e(api, evt));\n    return self;\n  }\n  function on(evt, cb) {\n    listeners[evt] = getListeners(evt).concat([cb]);\n    return self;\n  }\n  function off(evt, cb) {\n    listeners[evt] = getListeners(evt).filter(e => e !== cb);\n    return self;\n  }\n  function clear() {\n    listeners = {};\n  }\n  const self = {\n    init,\n    emit,\n    off,\n    on,\n    clear\n  };\n  return self;\n}\n\nconst defaultOptions = {\n  align: 'center',\n  axis: 'x',\n  container: null,\n  slides: null,\n  containScroll: 'trimSnaps',\n  direction: 'ltr',\n  slidesToScroll: 1,\n  inViewThreshold: 0,\n  breakpoints: {},\n  dragFree: false,\n  dragThreshold: 10,\n  loop: false,\n  skipSnaps: false,\n  duration: 25,\n  startIndex: 0,\n  active: true,\n  watchDrag: true,\n  watchResize: true,\n  watchSlides: true,\n  watchFocus: true\n};\n\nfunction OptionsHandler(ownerWindow) {\n  function mergeOptions(optionsA, optionsB) {\n    return objectsMergeDeep(optionsA, optionsB || {});\n  }\n  function optionsAtMedia(options) {\n    const optionsAtMedia = options.breakpoints || {};\n    const matchedMediaOptions = objectKeys(optionsAtMedia).filter(media => ownerWindow.matchMedia(media).matches).map(media => optionsAtMedia[media]).reduce((a, mediaOption) => mergeOptions(a, mediaOption), {});\n    return mergeOptions(options, matchedMediaOptions);\n  }\n  function optionsMediaQueries(optionsList) {\n    return optionsList.map(options => objectKeys(options.breakpoints || {})).reduce((acc, mediaQueries) => acc.concat(mediaQueries), []).map(ownerWindow.matchMedia);\n  }\n  const self = {\n    mergeOptions,\n    optionsAtMedia,\n    optionsMediaQueries\n  };\n  return self;\n}\n\nfunction PluginsHandler(optionsHandler) {\n  let activePlugins = [];\n  function init(emblaApi, plugins) {\n    activePlugins = plugins.filter(({\n      options\n    }) => optionsHandler.optionsAtMedia(options).active !== false);\n    activePlugins.forEach(plugin => plugin.init(emblaApi, optionsHandler));\n    return plugins.reduce((map, plugin) => Object.assign(map, {\n      [plugin.name]: plugin\n    }), {});\n  }\n  function destroy() {\n    activePlugins = activePlugins.filter(plugin => plugin.destroy());\n  }\n  const self = {\n    init,\n    destroy\n  };\n  return self;\n}\n\nfunction EmblaCarousel(root, userOptions, userPlugins) {\n  const ownerDocument = root.ownerDocument;\n  const ownerWindow = ownerDocument.defaultView;\n  const optionsHandler = OptionsHandler(ownerWindow);\n  const pluginsHandler = PluginsHandler(optionsHandler);\n  const mediaHandlers = EventStore();\n  const eventHandler = EventHandler();\n  const {\n    mergeOptions,\n    optionsAtMedia,\n    optionsMediaQueries\n  } = optionsHandler;\n  const {\n    on,\n    off,\n    emit\n  } = eventHandler;\n  const reInit = reActivate;\n  let destroyed = false;\n  let engine;\n  let optionsBase = mergeOptions(defaultOptions, EmblaCarousel.globalOptions);\n  let options = mergeOptions(optionsBase);\n  let pluginList = [];\n  let pluginApis;\n  let container;\n  let slides;\n  function storeElements() {\n    const {\n      container: userContainer,\n      slides: userSlides\n    } = options;\n    const customContainer = isString(userContainer) ? root.querySelector(userContainer) : userContainer;\n    container = customContainer || root.children[0];\n    const customSlides = isString(userSlides) ? container.querySelectorAll(userSlides) : userSlides;\n    slides = [].slice.call(customSlides || container.children);\n  }\n  function createEngine(options) {\n    const engine = Engine(root, container, slides, ownerDocument, ownerWindow, options, eventHandler);\n    if (options.loop && !engine.slideLooper.canLoop()) {\n      const optionsWithoutLoop = Object.assign({}, options, {\n        loop: false\n      });\n      return createEngine(optionsWithoutLoop);\n    }\n    return engine;\n  }\n  function activate(withOptions, withPlugins) {\n    if (destroyed) return;\n    optionsBase = mergeOptions(optionsBase, withOptions);\n    options = optionsAtMedia(optionsBase);\n    pluginList = withPlugins || pluginList;\n    storeElements();\n    engine = createEngine(options);\n    optionsMediaQueries([optionsBase, ...pluginList.map(({\n      options\n    }) => options)]).forEach(query => mediaHandlers.add(query, 'change', reActivate));\n    if (!options.active) return;\n    engine.translate.to(engine.location.get());\n    engine.animation.init();\n    engine.slidesInView.init();\n    engine.slideFocus.init(self);\n    engine.eventHandler.init(self);\n    engine.resizeHandler.init(self);\n    engine.slidesHandler.init(self);\n    if (engine.options.loop) engine.slideLooper.loop();\n    if (container.offsetParent && slides.length) engine.dragHandler.init(self);\n    pluginApis = pluginsHandler.init(self, pluginList);\n  }\n  function reActivate(withOptions, withPlugins) {\n    const startIndex = selectedScrollSnap();\n    deActivate();\n    activate(mergeOptions({\n      startIndex\n    }, withOptions), withPlugins);\n    eventHandler.emit('reInit');\n  }\n  function deActivate() {\n    engine.dragHandler.destroy();\n    engine.eventStore.clear();\n    engine.translate.clear();\n    engine.slideLooper.clear();\n    engine.resizeHandler.destroy();\n    engine.slidesHandler.destroy();\n    engine.slidesInView.destroy();\n    engine.animation.destroy();\n    pluginsHandler.destroy();\n    mediaHandlers.clear();\n  }\n  function destroy() {\n    if (destroyed) return;\n    destroyed = true;\n    mediaHandlers.clear();\n    deActivate();\n    eventHandler.emit('destroy');\n    eventHandler.clear();\n  }\n  function scrollTo(index, jump, direction) {\n    if (!options.active || destroyed) return;\n    engine.scrollBody.useBaseFriction().useDuration(jump === true ? 0 : options.duration);\n    engine.scrollTo.index(index, direction || 0);\n  }\n  function scrollNext(jump) {\n    const next = engine.index.add(1).get();\n    scrollTo(next, jump, -1);\n  }\n  function scrollPrev(jump) {\n    const prev = engine.index.add(-1).get();\n    scrollTo(prev, jump, 1);\n  }\n  function canScrollNext() {\n    const next = engine.index.add(1).get();\n    return next !== selectedScrollSnap();\n  }\n  function canScrollPrev() {\n    const prev = engine.index.add(-1).get();\n    return prev !== selectedScrollSnap();\n  }\n  function scrollSnapList() {\n    return engine.scrollSnapList;\n  }\n  function scrollProgress() {\n    return engine.scrollProgress.get(engine.offsetLocation.get());\n  }\n  function selectedScrollSnap() {\n    return engine.index.get();\n  }\n  function previousScrollSnap() {\n    return engine.indexPrevious.get();\n  }\n  function slidesInView() {\n    return engine.slidesInView.get();\n  }\n  function slidesNotInView() {\n    return engine.slidesInView.get(false);\n  }\n  function plugins() {\n    return pluginApis;\n  }\n  function internalEngine() {\n    return engine;\n  }\n  function rootNode() {\n    return root;\n  }\n  function containerNode() {\n    return container;\n  }\n  function slideNodes() {\n    return slides;\n  }\n  const self = {\n    canScrollNext,\n    canScrollPrev,\n    containerNode,\n    internalEngine,\n    destroy,\n    off,\n    on,\n    emit,\n    plugins,\n    previousScrollSnap,\n    reInit,\n    rootNode,\n    scrollNext,\n    scrollPrev,\n    scrollProgress,\n    scrollSnapList,\n    scrollTo,\n    selectedScrollSnap,\n    slideNodes,\n    slidesInView,\n    slidesNotInView\n  };\n  activate(userOptions, userPlugins);\n  setTimeout(() => eventHandler.emit('init'), 0);\n  return self;\n}\nEmblaCarousel.globalOptions = undefined;\n\nexport { EmblaCarousel as default };\n//# sourceMappingURL=embla-carousel.esm.js.map\n","import { useRef, useState, useCallback, useEffect } from 'react';\nimport { areOptionsEqual, arePluginsEqual, canUseDOM } from 'embla-carousel-reactive-utils';\nimport EmblaCarousel from 'embla-carousel';\n\nfunction useEmblaCarousel(options = {}, plugins = []) {\n  const storedOptions = useRef(options);\n  const storedPlugins = useRef(plugins);\n  const [emblaApi, setEmblaApi] = useState();\n  const [viewport, setViewport] = useState();\n  const reInit = useCallback(() => {\n    if (emblaApi) emblaApi.reInit(storedOptions.current, storedPlugins.current);\n  }, [emblaApi]);\n  useEffect(() => {\n    if (areOptionsEqual(storedOptions.current, options)) return;\n    storedOptions.current = options;\n    reInit();\n  }, [options, reInit]);\n  useEffect(() => {\n    if (arePluginsEqual(storedPlugins.current, plugins)) return;\n    storedPlugins.current = plugins;\n    reInit();\n  }, [plugins, reInit]);\n  useEffect(() => {\n    if (canUseDOM() && viewport) {\n      EmblaCarousel.globalOptions = useEmblaCarousel.globalOptions;\n      const newEmblaApi = EmblaCarousel(viewport, storedOptions.current, storedPlugins.current);\n      setEmblaApi(newEmblaApi);\n      return () => newEmblaApi.destroy();\n    } else {\n      setEmblaApi(undefined);\n    }\n  }, [viewport, setEmblaApi]);\n  return [setViewport, emblaApi];\n}\nuseEmblaCarousel.globalOptions = undefined;\n\nexport { useEmblaCarousel as default };\n//# sourceMappingURL=embla-carousel-react.esm.js.map\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport useEmblaCarousel from 'embla-carousel-react';\nimport { ChevronLeft, ChevronRight, Maximize2, X } from 'lucide-react';\n\n// UX-related SVG placeholder generator\nconst PlaceholderSVG = ({ width = 800, height = 450, text = 'UX Design Mockup' }) => (\n  <svg width={width} height={height} viewBox={`0 0 ${width} ${height}`} fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <rect width={width} height={height} rx=\"32\" fill=\"#F2F8F7\" />\n    <rect x=\"40\" y=\"40\" width={width-80} height=\"60\" rx=\"8\" fill=\"#3E8385\" />\n    <rect x=\"40\" y=\"120\" width={(width-80)*0.7} height=\"20\" rx=\"4\" fill=\"#B0B7C3\" />\n    <rect x=\"40\" y=\"150\" width={(width-80)*0.5} height=\"20\" rx=\"4\" fill=\"#D1D9E6\" />\n    <rect x=\"40\" y=\"200\" width={width-80} height=\"200\" rx=\"12\" fill=\"#FBF9F8\" stroke=\"#E0E7EF\" strokeWidth=\"2\" />\n    <circle cx={width/2} cy={300} r=\"40\" fill=\"#385681\" />\n    <text x=\"50%\" y=\"50%\" textAnchor=\"middle\" dy=\".3em\" fontSize=\"24\" fill=\"#385681\" fontWeight=\"600\">{text}</text>\n  </svg>\n);\n\ninterface BigImageCarouselProps {\n  images: Array<{ src?: string; alt?: string; svgPlaceholder?: boolean }>;\n}\n\nconst BigImageCarousel: React.FC<BigImageCarouselProps> = ({ images }) => {\n  const [emblaRef, emblaApi] = useEmblaCarousel({ loop: images.length > 1, align: 'center' });\n  const [selectedIndex, setSelectedIndex] = useState(0);\n  const [isFullscreen, setIsFullscreen] = useState(false);\n\n  const scrollPrev = useCallback(() => emblaApi && emblaApi.scrollPrev(), [emblaApi]);\n  const scrollNext = useCallback(() => emblaApi && emblaApi.scrollNext(), [emblaApi]);\n\n  useEffect(() => {\n    if (!emblaApi) return;\n    const onSelect = () => setSelectedIndex(emblaApi.selectedScrollSnap());\n    emblaApi.on('select', onSelect);\n    emblaApi.on('reInit', onSelect);\n    return () => {};\n  }, [emblaApi]);\n\n  const handleImageClick = () => {\n    setIsFullscreen(true);\n    document.body.style.overflow = 'hidden';\n  };\n\n  const handleCloseFullscreen = () => {\n    setIsFullscreen(false);\n    document.body.style.overflow = 'unset';\n  };\n\n  useEffect(() => {\n    const handleEscape = (e: KeyboardEvent) => {\n      if (e.key === 'Escape' && isFullscreen) {\n        handleCloseFullscreen();\n      }\n    };\n\n    if (isFullscreen) {\n      document.addEventListener('keydown', handleEscape);\n      return () => {\n        document.removeEventListener('keydown', handleEscape);\n        document.body.style.overflow = 'unset';\n      };\n    }\n  }, [isFullscreen]);\n\n  return (\n    <div className=\"relative w-full\">\n      <div className=\"overflow-hidden rounded-xl\" ref={emblaRef}>\n        <div className=\"flex\">\n          {images.map((img, idx) => (\n            <div key={idx} className=\"min-w-0 flex-[0_0_100%] flex justify-center items-center relative\">\n              <div className=\"w-full cursor-pointer\" onClick={handleImageClick}>\n                {img.svgPlaceholder ? (\n                  <PlaceholderSVG />\n                ) : (\n                  <img src={img.src} alt={img.alt || `Image ${idx+1}`} className=\"w-full h-auto object-contain aspect-video rounded-xl shadow-md\" loading=\"lazy\" />\n                )}\n              </div>\n              <button\n                className=\"absolute top-2 right-2 bg-white/80 hover:bg-white rounded-full p-1.5 shadow-md hover:shadow-lg transition-all z-10\"\n                onClick={(e) => { e.stopPropagation(); handleImageClick(); }}\n                aria-label=\"Full screen view\"\n              >\n                <Maximize2 className=\"w-4 h-4 text-brand-primary\" />\n              </button>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* Navigation buttons */}\n      {images.length > 1 && (\n        <>\n          <button onClick={scrollPrev} className=\"absolute left-2 top-1/2 transform -translate-y-1/2 bg-white/80 hover:bg-white text-brand-primary p-2 rounded-full shadow-md hover:shadow-lg transition-all z-10\" aria-label=\"Previous image\">\n            <ChevronLeft className=\"w-5 h-5\" />\n          </button>\n          <button onClick={scrollNext} className=\"absolute right-2 top-1/2 transform -translate-y-1/2 bg-white/80 hover:bg-white text-brand-primary p-2 rounded-full shadow-md hover:shadow-lg transition-all z-10\" aria-label=\"Next image\">\n            <ChevronRight className=\"w-5 h-5\" />\n          </button>\n        </>\n      )}\n\n      {/* Fullscreen Modal */}\n      {isFullscreen && createPortal(\n        <div\n          className=\"fixed inset-0 bg-black/95 flex items-center justify-center p-4 backdrop-blur-sm z-[10000]\"\n          style={{ position: 'fixed', top: 0, left: 0, width: '100vw', height: '100vh' }}\n          onClick={handleCloseFullscreen}\n        >\n          <button\n            className=\"absolute top-4 right-4 z-[10001] text-white hover:text-gray-300 transition-colors bg-black/50 rounded-full p-3 backdrop-blur-sm\"\n            onClick={handleCloseFullscreen}\n            aria-label=\"Close full screen (Press Escape)\"\n          >\n            <X className=\"w-6 h-6\" />\n          </button>\n\n          {/* Navigation in fullscreen */}\n          {images.length > 1 && (\n            <>\n              <button\n                onClick={(e) => { e.stopPropagation(); scrollPrev(); }}\n                className=\"absolute left-4 top-1/2 transform -translate-y-1/2 bg-black/50 hover:bg-black/70 text-white p-3 rounded-full transition-colors backdrop-blur-sm z-[10001]\"\n                aria-label=\"Previous image\"\n              >\n                <ChevronLeft className=\"w-6 h-6\" />\n              </button>\n              <button\n                onClick={(e) => { e.stopPropagation(); scrollNext(); }}\n                className=\"absolute right-4 top-1/2 transform -translate-y-1/2 bg-black/50 hover:bg-black/70 text-white p-3 rounded-full transition-colors backdrop-blur-sm z-[10001]\"\n                aria-label=\"Next image\"\n              >\n                <ChevronRight className=\"w-6 h-6\" />\n              </button>\n            </>\n          )}\n\n          <div className=\"relative max-w-[95vw] max-h-[95vh] flex items-center justify-center\">\n            {images[selectedIndex].svgPlaceholder ? (\n              <PlaceholderSVG width={1200} height={700} text=\"Full Page Design Mockup\" />\n            ) : (\n              <img\n                src={images[selectedIndex].src}\n                alt={images[selectedIndex].alt || `Image ${selectedIndex+1}`}\n                className=\"max-w-full max-h-full object-contain shadow-2xl\"\n                onClick={(e) => e.stopPropagation()}\n                style={{ maxWidth: '95vw', maxHeight: '95vh' }}\n              />\n            )}\n          </div>\n\n          <div className=\"absolute bottom-4 left-1/2 transform -translate-x-1/2 text-white text-sm bg-black/50 px-4 py-2 rounded-full backdrop-blur-sm flex items-center space-x-4\">\n            {images.length > 1 && (\n              <span>{selectedIndex + 1} / {images.length}</span>\n            )}\n            <span>Click outside or press Escape to close</span>\n          </div>\n        </div>,\n        document.body\n      )}\n    </div>\n  );\n};\n\nexport default BigImageCarousel;\n"],"names":["isObject","index","group","scrollBody","loop","location","offsetLocation","previousLocation","animation","eventHandler","optionsAtMedia","options","engine","useRef","useState","useCallback","useEffect","jsxs","jsx","Fragment","createPortal"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6]}