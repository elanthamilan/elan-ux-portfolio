import{r as n}from"./vendor-C59emRhC.js";function b(){const[s,i]=n.useState(null),[m,l]=n.useState(!1),[h,d]=n.useState(!1),[I,p]=n.useState(navigator.onLine),[E,u]=n.useState(!1),[S,a]=n.useState(!1);return n.useEffect(()=>{(()=>{const t=window.matchMedia("(display-mode: standalone)").matches,c=window.navigator.standalone===!0;d(t||c)})();const w=t=>{t.preventDefault(),i(t),l(!0)},g=()=>{d(!0),l(!1),i(null)},v=()=>p(!0),f=()=>p(!1);if(window.addEventListener("beforeinstallprompt",w),window.addEventListener("appinstalled",g),window.addEventListener("online",v),window.addEventListener("offline",f),"serviceWorker"in navigator){let t=!1;navigator.serviceWorker.addEventListener("controllerchange",()=>{t||(console.log("Service worker controller changed, reloading page"),t=!0,window.location.reload())}),(async()=>{try{const o=await navigator.serviceWorker.getRegistration();if(o){console.log("Service worker registration found"),o.waiting&&(console.log("Service worker waiting found"),a(!0)),o.addEventListener("updatefound",()=>{console.log("Service worker update found");const r=o.installing;r&&r.addEventListener("statechange",()=>{console.log("New service worker state:",r.state),r.state==="installed"&&navigator.serviceWorker.controller&&(console.log("New service worker installed, update available"),a(!0),u(!0))})});const k=async()=>{try{console.log("Checking for service worker updates..."),await o.update()}catch(r){console.log("Service worker update check failed:",r)}},y=setInterval(k,5*60*1e3);return setTimeout(k,1e4),()=>{clearInterval(y)}}}catch(o){console.log("Service worker setup failed:",o)}})()}return()=>{window.removeEventListener("beforeinstallprompt",w),window.removeEventListener("appinstalled",g),window.removeEventListener("online",v),window.removeEventListener("offline",f)}},[]),{isInstallable:m,isInstalled:h,isOnline:I,needsUpdate:E,isUpdateAvailable:S,installApp:async()=>{if(s)try{await s.prompt(),(await s.userChoice).outcome==="accepted"?console.log("User accepted the install prompt"):console.log("User dismissed the install prompt"),i(null),l(!1)}catch(e){console.error("Error during app installation:",e)}},updateApp:async()=>{try{console.log("Attempting to update app...");const e=await navigator.serviceWorker.getRegistration();e?.waiting?(console.log("Activating waiting service worker"),e.waiting.postMessage({type:"SKIP_WAITING"}),u(!1),a(!1)):e?(console.log("No waiting service worker, checking for updates"),await e.update(),setTimeout(()=>{e.waiting||(console.log("No updates found, reloading anyway"),window.location.reload())},1e3)):(console.log("No service worker registration found, reloading"),window.location.reload())}catch(e){console.error("Error during app update:",e),window.location.reload()}},dismissUpdate:()=>{a(!1)}}}export{b as u};
