{
  "version": 3,
  "sources": ["../../gsap/Flip.js"],
  "sourcesContent": ["/*!\r\n * Flip 3.13.0\r\n * https://gsap.com\r\n *\r\n * @license Copyright 2008-2025, GreenSock. All rights reserved.\r\n * Subject to the terms at https://gsap.com/standard-license\r\n * @author: Jack Doyle, jack@greensock.com\r\n*/\r\n\r\n/* eslint-disable */\r\nimport { getGlobalMatrix, _getDocScrollTop, _getDocScrollLeft, Matrix2D, _setDoc, _getCTM } from \"./utils/matrix.js\";\r\n\r\nvar _id = 1,\r\n    _toArray,\r\n    gsap,\r\n    _batch,\r\n    _batchAction,\r\n    _body,\r\n    _closestTenth,\r\n    _getStyleSaver,\r\n    _forEachBatch = function _forEachBatch(batch, name) {\r\n  return batch.actions.forEach(function (a) {\r\n    return a.vars[name] && a.vars[name](a);\r\n  });\r\n},\r\n    _batchLookup = {},\r\n    _RAD2DEG = 180 / Math.PI,\r\n    _DEG2RAD = Math.PI / 180,\r\n    _emptyObj = {},\r\n    _dashedNameLookup = {},\r\n    _memoizedRemoveProps = {},\r\n    _listToArray = function _listToArray(list) {\r\n  return typeof list === \"string\" ? list.split(\" \").join(\"\").split(\",\") : list;\r\n},\r\n    // removes extra spaces contaminating the names, returns an Array.\r\n_callbacks = _listToArray(\"onStart,onUpdate,onComplete,onReverseComplete,onInterrupt\"),\r\n    _removeProps = _listToArray(\"transform,transformOrigin,width,height,position,top,left,opacity,zIndex,maxWidth,maxHeight,minWidth,minHeight\"),\r\n    _getEl = function _getEl(target) {\r\n  return _toArray(target)[0] || console.warn(\"Element not found:\", target);\r\n},\r\n    _round = function _round(value) {\r\n  return Math.round(value * 10000) / 10000 || 0;\r\n},\r\n    _toggleClass = function _toggleClass(targets, className, action) {\r\n  return targets.forEach(function (el) {\r\n    return el.classList[action](className);\r\n  });\r\n},\r\n    _reserved = {\r\n  zIndex: 1,\r\n  kill: 1,\r\n  simple: 1,\r\n  spin: 1,\r\n  clearProps: 1,\r\n  targets: 1,\r\n  toggleClass: 1,\r\n  onComplete: 1,\r\n  onUpdate: 1,\r\n  onInterrupt: 1,\r\n  onStart: 1,\r\n  delay: 1,\r\n  repeat: 1,\r\n  repeatDelay: 1,\r\n  yoyo: 1,\r\n  scale: 1,\r\n  fade: 1,\r\n  absolute: 1,\r\n  props: 1,\r\n  onEnter: 1,\r\n  onLeave: 1,\r\n  custom: 1,\r\n  paused: 1,\r\n  nested: 1,\r\n  prune: 1,\r\n  absoluteOnLeave: 1\r\n},\r\n    _fitReserved = {\r\n  zIndex: 1,\r\n  simple: 1,\r\n  clearProps: 1,\r\n  scale: 1,\r\n  absolute: 1,\r\n  fitChild: 1,\r\n  getVars: 1,\r\n  props: 1\r\n},\r\n    _camelToDashed = function _camelToDashed(p) {\r\n  return p.replace(/([A-Z])/g, \"-$1\").toLowerCase();\r\n},\r\n    _copy = function _copy(obj, exclude) {\r\n  var result = {},\r\n      p;\r\n\r\n  for (p in obj) {\r\n    exclude[p] || (result[p] = obj[p]);\r\n  }\r\n\r\n  return result;\r\n},\r\n    _memoizedProps = {},\r\n    _memoizeProps = function _memoizeProps(props) {\r\n  var p = _memoizedProps[props] = _listToArray(props);\r\n\r\n  _memoizedRemoveProps[props] = p.concat(_removeProps);\r\n  return p;\r\n},\r\n    _getInverseGlobalMatrix = function _getInverseGlobalMatrix(el) {\r\n  // integrates caching for improved performance\r\n  var cache = el._gsap || gsap.core.getCache(el);\r\n\r\n  if (cache.gmCache === gsap.ticker.frame) {\r\n    return cache.gMatrix;\r\n  }\r\n\r\n  cache.gmCache = gsap.ticker.frame;\r\n  return cache.gMatrix = getGlobalMatrix(el, true, false, true);\r\n},\r\n    _getDOMDepth = function _getDOMDepth(el, invert, level) {\r\n  if (level === void 0) {\r\n    level = 0;\r\n  }\r\n\r\n  // In invert is true, the sibling depth is increments of 1, and parent/nesting depth is increments of 1000. This lets us order elements in an Array to reflect document flow.\r\n  var parent = el.parentNode,\r\n      inc = 1000 * Math.pow(10, level) * (invert ? -1 : 1),\r\n      l = invert ? -inc * 900 : 0;\r\n\r\n  while (el) {\r\n    l += inc;\r\n    el = el.previousSibling;\r\n  }\r\n\r\n  return parent ? l + _getDOMDepth(parent, invert, level + 1) : l;\r\n},\r\n    _orderByDOMDepth = function _orderByDOMDepth(comps, invert, isElStates) {\r\n  comps.forEach(function (comp) {\r\n    return comp.d = _getDOMDepth(isElStates ? comp.element : comp.t, invert);\r\n  });\r\n  comps.sort(function (c1, c2) {\r\n    return c1.d - c2.d;\r\n  });\r\n  return comps;\r\n},\r\n    _recordInlineStyles = function _recordInlineStyles(elState, props) {\r\n  // records the current inline CSS properties into an Array in alternating name/value pairs that's stored in a \"css\" property on the state object so that we can revert later.\r\n  var style = elState.element.style,\r\n      a = elState.css = elState.css || [],\r\n      i = props.length,\r\n      p,\r\n      v;\r\n\r\n  while (i--) {\r\n    p = props[i];\r\n    v = style[p] || style.getPropertyValue(p);\r\n    a.push(v ? p : _dashedNameLookup[p] || (_dashedNameLookup[p] = _camelToDashed(p)), v);\r\n  }\r\n\r\n  return style;\r\n},\r\n    _applyInlineStyles = function _applyInlineStyles(state) {\r\n  var css = state.css,\r\n      style = state.element.style,\r\n      i = 0;\r\n  state.cache.uncache = 1;\r\n\r\n  for (; i < css.length; i += 2) {\r\n    css[i + 1] ? style[css[i]] = css[i + 1] : style.removeProperty(css[i]);\r\n  }\r\n\r\n  if (!css[css.indexOf(\"transform\") + 1] && style.translate) {\r\n    // CSSPlugin adds scale, translate, and rotate inline CSS as \"none\" in order to keep CSS rules from contaminating transforms.\r\n    style.removeProperty(\"translate\");\r\n    style.removeProperty(\"scale\");\r\n    style.removeProperty(\"rotate\");\r\n  }\r\n},\r\n    _setFinalStates = function _setFinalStates(comps, onlyTransforms) {\r\n  comps.forEach(function (c) {\r\n    return c.a.cache.uncache = 1;\r\n  });\r\n  onlyTransforms || comps.finalStates.forEach(_applyInlineStyles);\r\n},\r\n    _absoluteProps = \"paddingTop,paddingRight,paddingBottom,paddingLeft,gridArea,transition\".split(\",\"),\r\n    // properties that we must record just\r\n_makeAbsolute = function _makeAbsolute(elState, fallbackNode, ignoreBatch) {\r\n  var element = elState.element,\r\n      width = elState.width,\r\n      height = elState.height,\r\n      uncache = elState.uncache,\r\n      getProp = elState.getProp,\r\n      style = element.style,\r\n      i = 4,\r\n      result,\r\n      displayIsNone,\r\n      cs;\r\n  typeof fallbackNode !== \"object\" && (fallbackNode = elState);\r\n\r\n  if (_batch && ignoreBatch !== 1) {\r\n    _batch._abs.push({\r\n      t: element,\r\n      b: elState,\r\n      a: elState,\r\n      sd: 0\r\n    });\r\n\r\n    _batch._final.push(function () {\r\n      return (elState.cache.uncache = 1) && _applyInlineStyles(elState);\r\n    });\r\n\r\n    return element;\r\n  }\r\n\r\n  displayIsNone = getProp(\"display\") === \"none\";\r\n\r\n  if (!elState.isVisible || displayIsNone) {\r\n    displayIsNone && (_recordInlineStyles(elState, [\"display\"]).display = fallbackNode.display);\r\n    elState.matrix = fallbackNode.matrix;\r\n    elState.width = width = elState.width || fallbackNode.width;\r\n    elState.height = height = elState.height || fallbackNode.height;\r\n  }\r\n\r\n  _recordInlineStyles(elState, _absoluteProps);\r\n\r\n  cs = window.getComputedStyle(element);\r\n\r\n  while (i--) {\r\n    style[_absoluteProps[i]] = cs[_absoluteProps[i]]; // record paddings as px-based because if removed from grid, percentage-based ones could be altered.\r\n  }\r\n\r\n  style.gridArea = \"1 / 1 / 1 / 1\";\r\n  style.transition = \"none\";\r\n  style.position = \"absolute\";\r\n  style.width = width + \"px\";\r\n  style.height = height + \"px\";\r\n  style.top || (style.top = \"0px\");\r\n  style.left || (style.left = \"0px\");\r\n\r\n  if (uncache) {\r\n    result = new ElementState(element);\r\n  } else {\r\n    // better performance\r\n    result = _copy(elState, _emptyObj);\r\n    result.position = \"absolute\";\r\n\r\n    if (elState.simple) {\r\n      var bounds = element.getBoundingClientRect();\r\n      result.matrix = new Matrix2D(1, 0, 0, 1, bounds.left + _getDocScrollLeft(), bounds.top + _getDocScrollTop());\r\n    } else {\r\n      result.matrix = getGlobalMatrix(element, false, false, true);\r\n    }\r\n  }\r\n\r\n  result = _fit(result, elState, true);\r\n  elState.x = _closestTenth(result.x, 0.01);\r\n  elState.y = _closestTenth(result.y, 0.01);\r\n  return element;\r\n},\r\n    _filterComps = function _filterComps(comps, targets) {\r\n  if (targets !== true) {\r\n    targets = _toArray(targets);\r\n    comps = comps.filter(function (c) {\r\n      if (targets.indexOf((c.sd < 0 ? c.b : c.a).element) !== -1) {\r\n        return true;\r\n      } else {\r\n        c.t._gsap.renderTransform(1); // we must force transforms to render on anything that isn't being made position: absolute, otherwise the absolute position happens and then when animation begins it applies transforms which can create a new stacking context, throwing off positioning!\r\n\r\n\r\n        if (c.b.isVisible) {\r\n          c.t.style.width = c.b.width + \"px\"; // otherwise things can collapse when contents are made position: absolute.\r\n\r\n          c.t.style.height = c.b.height + \"px\";\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  return comps;\r\n},\r\n    _makeCompsAbsolute = function _makeCompsAbsolute(comps) {\r\n  return _orderByDOMDepth(comps, true).forEach(function (c) {\r\n    return (c.a.isVisible || c.b.isVisible) && _makeAbsolute(c.sd < 0 ? c.b : c.a, c.b, 1);\r\n  });\r\n},\r\n    _findElStateInState = function _findElStateInState(state, other) {\r\n  return other && state.idLookup[_parseElementState(other).id] || state.elementStates[0];\r\n},\r\n    _parseElementState = function _parseElementState(elOrNode, props, simple, other) {\r\n  return elOrNode instanceof ElementState ? elOrNode : elOrNode instanceof FlipState ? _findElStateInState(elOrNode, other) : new ElementState(typeof elOrNode === \"string\" ? _getEl(elOrNode) || console.warn(elOrNode + \" not found\") : elOrNode, props, simple);\r\n},\r\n    _recordProps = function _recordProps(elState, props) {\r\n  var getProp = gsap.getProperty(elState.element, null, \"native\"),\r\n      obj = elState.props = {},\r\n      i = props.length;\r\n\r\n  while (i--) {\r\n    obj[props[i]] = (getProp(props[i]) + \"\").trim();\r\n  }\r\n\r\n  obj.zIndex && (obj.zIndex = parseFloat(obj.zIndex) || 0);\r\n  return elState;\r\n},\r\n    _applyProps = function _applyProps(element, props) {\r\n  var style = element.style || element,\r\n      // could pass in a vars object.\r\n  p;\r\n\r\n  for (p in props) {\r\n    style[p] = props[p];\r\n  }\r\n},\r\n    _getID = function _getID(el) {\r\n  var id = el.getAttribute(\"data-flip-id\");\r\n  id || el.setAttribute(\"data-flip-id\", id = \"auto-\" + _id++);\r\n  return id;\r\n},\r\n    _elementsFromElementStates = function _elementsFromElementStates(elStates) {\r\n  return elStates.map(function (elState) {\r\n    return elState.element;\r\n  });\r\n},\r\n    _handleCallback = function _handleCallback(callback, elStates, tl) {\r\n  return callback && elStates.length && tl.add(callback(_elementsFromElementStates(elStates), tl, new FlipState(elStates, 0, true)), 0);\r\n},\r\n    _fit = function _fit(fromState, toState, scale, applyProps, fitChild, vars) {\r\n  var element = fromState.element,\r\n      cache = fromState.cache,\r\n      parent = fromState.parent,\r\n      x = fromState.x,\r\n      y = fromState.y,\r\n      width = toState.width,\r\n      height = toState.height,\r\n      scaleX = toState.scaleX,\r\n      scaleY = toState.scaleY,\r\n      rotation = toState.rotation,\r\n      bounds = toState.bounds,\r\n      styles = vars && _getStyleSaver && _getStyleSaver(element, \"transform,width,height\"),\r\n      dimensionState = fromState,\r\n      _toState$matrix = toState.matrix,\r\n      e = _toState$matrix.e,\r\n      f = _toState$matrix.f,\r\n      deep = fromState.bounds.width !== bounds.width || fromState.bounds.height !== bounds.height || fromState.scaleX !== scaleX || fromState.scaleY !== scaleY || fromState.rotation !== rotation,\r\n      simple = !deep && fromState.simple && toState.simple && !fitChild,\r\n      skewX,\r\n      fromPoint,\r\n      toPoint,\r\n      getProp,\r\n      parentMatrix,\r\n      matrix,\r\n      bbox;\r\n\r\n  if (simple || !parent) {\r\n    scaleX = scaleY = 1;\r\n    rotation = skewX = 0;\r\n  } else {\r\n    parentMatrix = _getInverseGlobalMatrix(parent);\r\n    matrix = parentMatrix.clone().multiply(toState.ctm ? toState.matrix.clone().multiply(toState.ctm) : toState.matrix); // root SVG elements have a ctm that we must factor out (for example, viewBox:\"0 0 94 94\" with a width of 200px would scale the internals by 2.127 but when we're matching the size of the root <svg> element itself, that scaling shouldn't factor in!)\r\n\r\n    rotation = _round(Math.atan2(matrix.b, matrix.a) * _RAD2DEG);\r\n    skewX = _round(Math.atan2(matrix.c, matrix.d) * _RAD2DEG + rotation) % 360; // in very rare cases, minor rounding might end up with 360 which should be 0.\r\n\r\n    scaleX = Math.sqrt(Math.pow(matrix.a, 2) + Math.pow(matrix.b, 2));\r\n    scaleY = Math.sqrt(Math.pow(matrix.c, 2) + Math.pow(matrix.d, 2)) * Math.cos(skewX * _DEG2RAD);\r\n\r\n    if (fitChild) {\r\n      fitChild = _toArray(fitChild)[0];\r\n      getProp = gsap.getProperty(fitChild);\r\n      bbox = fitChild.getBBox && typeof fitChild.getBBox === \"function\" && fitChild.getBBox();\r\n      dimensionState = {\r\n        scaleX: getProp(\"scaleX\"),\r\n        scaleY: getProp(\"scaleY\"),\r\n        width: bbox ? bbox.width : Math.ceil(parseFloat(getProp(\"width\", \"px\"))),\r\n        height: bbox ? bbox.height : parseFloat(getProp(\"height\", \"px\"))\r\n      };\r\n    }\r\n\r\n    cache.rotation = rotation + \"deg\";\r\n    cache.skewX = skewX + \"deg\";\r\n  }\r\n\r\n  if (scale) {\r\n    scaleX *= width === dimensionState.width || !dimensionState.width ? 1 : width / dimensionState.width; // note if widths are both 0, we should make scaleX 1 - some elements have box-sizing that incorporates padding, etc. and we don't want it to collapse in that case.\r\n\r\n    scaleY *= height === dimensionState.height || !dimensionState.height ? 1 : height / dimensionState.height;\r\n    cache.scaleX = scaleX;\r\n    cache.scaleY = scaleY;\r\n  } else {\r\n    width = _closestTenth(width * scaleX / dimensionState.scaleX, 0);\r\n    height = _closestTenth(height * scaleY / dimensionState.scaleY, 0);\r\n    element.style.width = width + \"px\";\r\n    element.style.height = height + \"px\";\r\n  } // if (fromState.isFixed) { // commented out because it's now taken care of in getGlobalMatrix() with a flag at the end.\r\n  // \te -= _getDocScrollLeft();\r\n  // \tf -= _getDocScrollTop();\r\n  // }\r\n\r\n\r\n  applyProps && _applyProps(element, toState.props);\r\n\r\n  if (simple || !parent) {\r\n    x += e - fromState.matrix.e;\r\n    y += f - fromState.matrix.f;\r\n  } else if (deep || parent !== toState.parent) {\r\n    cache.renderTransform(1, cache);\r\n    matrix = getGlobalMatrix(fitChild || element, false, false, true);\r\n    fromPoint = parentMatrix.apply({\r\n      x: matrix.e,\r\n      y: matrix.f\r\n    });\r\n    toPoint = parentMatrix.apply({\r\n      x: e,\r\n      y: f\r\n    });\r\n    x += toPoint.x - fromPoint.x;\r\n    y += toPoint.y - fromPoint.y;\r\n  } else {\r\n    // use a faster/cheaper algorithm if we're just moving x/y\r\n    parentMatrix.e = parentMatrix.f = 0;\r\n    toPoint = parentMatrix.apply({\r\n      x: e - fromState.matrix.e,\r\n      y: f - fromState.matrix.f\r\n    });\r\n    x += toPoint.x;\r\n    y += toPoint.y;\r\n  }\r\n\r\n  x = _closestTenth(x, 0.02);\r\n  y = _closestTenth(y, 0.02);\r\n\r\n  if (vars && !(vars instanceof ElementState)) {\r\n    // revert\r\n    styles && styles.revert();\r\n  } else {\r\n    // or apply the transform immediately\r\n    cache.x = x + \"px\";\r\n    cache.y = y + \"px\";\r\n    cache.renderTransform(1, cache);\r\n  }\r\n\r\n  if (vars) {\r\n    vars.x = x;\r\n    vars.y = y;\r\n    vars.rotation = rotation;\r\n    vars.skewX = skewX;\r\n\r\n    if (scale) {\r\n      vars.scaleX = scaleX;\r\n      vars.scaleY = scaleY;\r\n    } else {\r\n      vars.width = width;\r\n      vars.height = height;\r\n    }\r\n  }\r\n\r\n  return vars || cache;\r\n},\r\n    _parseState = function _parseState(targetsOrState, vars) {\r\n  return targetsOrState instanceof FlipState ? targetsOrState : new FlipState(targetsOrState, vars);\r\n},\r\n    _getChangingElState = function _getChangingElState(toState, fromState, id) {\r\n  var to1 = toState.idLookup[id],\r\n      to2 = toState.alt[id];\r\n  return to2.isVisible && (!(fromState.getElementState(to2.element) || to2).isVisible || !to1.isVisible) ? to2 : to1;\r\n},\r\n    _bodyMetrics = [],\r\n    _bodyProps = \"width,height,overflowX,overflowY\".split(\",\"),\r\n    _bodyLocked,\r\n    _lockBodyScroll = function _lockBodyScroll(lock) {\r\n  // if there's no scrollbar, we should lock that so that measurements don't get affected by temporary repositioning, like if something is centered in the window.\r\n  if (lock !== _bodyLocked) {\r\n    var s = _body.style,\r\n        w = _body.clientWidth === window.outerWidth,\r\n        h = _body.clientHeight === window.outerHeight,\r\n        i = 4;\r\n\r\n    if (lock && (w || h)) {\r\n      while (i--) {\r\n        _bodyMetrics[i] = s[_bodyProps[i]];\r\n      }\r\n\r\n      if (w) {\r\n        s.width = _body.clientWidth + \"px\";\r\n        s.overflowY = \"hidden\";\r\n      }\r\n\r\n      if (h) {\r\n        s.height = _body.clientHeight + \"px\";\r\n        s.overflowX = \"hidden\";\r\n      }\r\n\r\n      _bodyLocked = lock;\r\n    } else if (_bodyLocked) {\r\n      while (i--) {\r\n        _bodyMetrics[i] ? s[_bodyProps[i]] = _bodyMetrics[i] : s.removeProperty(_camelToDashed(_bodyProps[i]));\r\n      }\r\n\r\n      _bodyLocked = lock;\r\n    }\r\n  }\r\n},\r\n    _fromTo = function _fromTo(fromState, toState, vars, relative) {\r\n  // relative is -1 if \"from()\", and 1 if \"to()\"\r\n  fromState instanceof FlipState && toState instanceof FlipState || console.warn(\"Not a valid state object.\");\r\n  vars = vars || {};\r\n\r\n  var _vars = vars,\r\n      clearProps = _vars.clearProps,\r\n      onEnter = _vars.onEnter,\r\n      onLeave = _vars.onLeave,\r\n      absolute = _vars.absolute,\r\n      absoluteOnLeave = _vars.absoluteOnLeave,\r\n      custom = _vars.custom,\r\n      delay = _vars.delay,\r\n      paused = _vars.paused,\r\n      repeat = _vars.repeat,\r\n      repeatDelay = _vars.repeatDelay,\r\n      yoyo = _vars.yoyo,\r\n      toggleClass = _vars.toggleClass,\r\n      nested = _vars.nested,\r\n      _zIndex = _vars.zIndex,\r\n      scale = _vars.scale,\r\n      fade = _vars.fade,\r\n      stagger = _vars.stagger,\r\n      spin = _vars.spin,\r\n      prune = _vars.prune,\r\n      props = (\"props\" in vars ? vars : fromState).props,\r\n      tweenVars = _copy(vars, _reserved),\r\n      animation = gsap.timeline({\r\n    delay: delay,\r\n    paused: paused,\r\n    repeat: repeat,\r\n    repeatDelay: repeatDelay,\r\n    yoyo: yoyo,\r\n    data: \"isFlip\"\r\n  }),\r\n      remainingProps = tweenVars,\r\n      entering = [],\r\n      leaving = [],\r\n      comps = [],\r\n      swapOutTargets = [],\r\n      spinNum = spin === true ? 1 : spin || 0,\r\n      spinFunc = typeof spin === \"function\" ? spin : function () {\r\n    return spinNum;\r\n  },\r\n      interrupted = fromState.interrupted || toState.interrupted,\r\n      addFunc = animation[relative !== 1 ? \"to\" : \"from\"],\r\n      v,\r\n      p,\r\n      endTime,\r\n      i,\r\n      el,\r\n      comp,\r\n      state,\r\n      targets,\r\n      finalStates,\r\n      fromNode,\r\n      toNode,\r\n      run,\r\n      a,\r\n      b; //relative || (toState = (new FlipState(toState.targets, {props: props})).fit(toState, scale));\r\n\r\n\r\n  for (p in toState.idLookup) {\r\n    toNode = !toState.alt[p] ? toState.idLookup[p] : _getChangingElState(toState, fromState, p);\r\n    el = toNode.element;\r\n    fromNode = fromState.idLookup[p];\r\n    fromState.alt[p] && el === fromNode.element && (fromState.alt[p].isVisible || !toNode.isVisible) && (fromNode = fromState.alt[p]);\r\n\r\n    if (fromNode) {\r\n      comp = {\r\n        t: el,\r\n        b: fromNode,\r\n        a: toNode,\r\n        sd: fromNode.element === el ? 0 : toNode.isVisible ? 1 : -1\r\n      };\r\n      comps.push(comp);\r\n\r\n      if (comp.sd) {\r\n        if (comp.sd < 0) {\r\n          comp.b = toNode;\r\n          comp.a = fromNode;\r\n        } // for swapping elements that got interrupted, we must re-record the inline styles to ensure they're not tainted. Remember, .batch() permits getState() not to force in-progress flips to their end state.\r\n\r\n\r\n        interrupted && _recordInlineStyles(comp.b, props ? _memoizedRemoveProps[props] : _removeProps);\r\n        fade && comps.push(comp.swap = {\r\n          t: fromNode.element,\r\n          b: comp.b,\r\n          a: comp.a,\r\n          sd: -comp.sd,\r\n          swap: comp\r\n        });\r\n      }\r\n\r\n      el._flip = fromNode.element._flip = _batch ? _batch.timeline : animation;\r\n    } else if (toNode.isVisible) {\r\n      comps.push({\r\n        t: el,\r\n        b: _copy(toNode, {\r\n          isVisible: 1\r\n        }),\r\n        a: toNode,\r\n        sd: 0,\r\n        entering: 1\r\n      }); // to include it in the \"entering\" Array and do absolute positioning if necessary\r\n\r\n      el._flip = _batch ? _batch.timeline : animation;\r\n    }\r\n  }\r\n\r\n  props && (_memoizedProps[props] || _memoizeProps(props)).forEach(function (p) {\r\n    return tweenVars[p] = function (i) {\r\n      return comps[i].a.props[p];\r\n    };\r\n  });\r\n  comps.finalStates = finalStates = [];\r\n\r\n  run = function run() {\r\n    _orderByDOMDepth(comps);\r\n\r\n    _lockBodyScroll(true); // otherwise, measurements may get thrown off when things get fit.\r\n    // TODO: cache the matrix, especially for parent because it'll probably get reused quite a bit, but lock it to a particular cycle(?).\r\n\r\n\r\n    for (i = 0; i < comps.length; i++) {\r\n      comp = comps[i];\r\n      a = comp.a;\r\n      b = comp.b;\r\n\r\n      if (prune && !a.isDifferent(b) && !comp.entering) {\r\n        // only flip if things changed! Don't omit it from comps initially because that'd prevent the element from being positioned absolutely (if necessary)\r\n        comps.splice(i--, 1);\r\n      } else {\r\n        el = comp.t;\r\n        nested && !(comp.sd < 0) && i && (a.matrix = getGlobalMatrix(el, false, false, true)); // moving a parent affects the position of children\r\n\r\n        if (b.isVisible && a.isVisible) {\r\n          if (comp.sd < 0) {\r\n            // swapping OUT (swap direction of -1 is out)\r\n            state = new ElementState(el, props, fromState.simple);\r\n\r\n            _fit(state, a, scale, 0, 0, state);\r\n\r\n            state.matrix = getGlobalMatrix(el, false, false, true);\r\n            state.css = comp.b.css;\r\n            comp.a = a = state;\r\n            fade && (el.style.opacity = interrupted ? b.opacity : a.opacity);\r\n            stagger && swapOutTargets.push(el);\r\n          } else if (comp.sd > 0 && fade) {\r\n            // swapping IN (swap direction of 1 is in)\r\n            el.style.opacity = interrupted ? a.opacity - b.opacity : \"0\";\r\n          }\r\n\r\n          _fit(a, b, scale, props);\r\n        } else if (b.isVisible !== a.isVisible) {\r\n          // either entering or leaving (one side is invisible)\r\n          if (!b.isVisible) {\r\n            // entering\r\n            a.isVisible && entering.push(a);\r\n            comps.splice(i--, 1);\r\n          } else if (!a.isVisible) {\r\n            // leaving\r\n            b.css = a.css;\r\n            leaving.push(b);\r\n            comps.splice(i--, 1);\r\n            absolute && nested && _fit(a, b, scale, props);\r\n          }\r\n        }\r\n\r\n        if (!scale) {\r\n          el.style.maxWidth = Math.max(a.width, b.width) + \"px\";\r\n          el.style.maxHeight = Math.max(a.height, b.height) + \"px\";\r\n          el.style.minWidth = Math.min(a.width, b.width) + \"px\";\r\n          el.style.minHeight = Math.min(a.height, b.height) + \"px\";\r\n        }\r\n\r\n        nested && toggleClass && el.classList.add(toggleClass);\r\n      }\r\n\r\n      finalStates.push(a);\r\n    }\r\n\r\n    var classTargets;\r\n\r\n    if (toggleClass) {\r\n      classTargets = finalStates.map(function (s) {\r\n        return s.element;\r\n      });\r\n      nested && classTargets.forEach(function (e) {\r\n        return e.classList.remove(toggleClass);\r\n      }); // there could be a delay, so don't leave the classes applied (we'll do it in a timeline callback)\r\n    }\r\n\r\n    _lockBodyScroll(false);\r\n\r\n    if (scale) {\r\n      tweenVars.scaleX = function (i) {\r\n        return comps[i].a.scaleX;\r\n      };\r\n\r\n      tweenVars.scaleY = function (i) {\r\n        return comps[i].a.scaleY;\r\n      };\r\n    } else {\r\n      tweenVars.width = function (i) {\r\n        return comps[i].a.width + \"px\";\r\n      };\r\n\r\n      tweenVars.height = function (i) {\r\n        return comps[i].a.height + \"px\";\r\n      };\r\n\r\n      tweenVars.autoRound = vars.autoRound || false;\r\n    }\r\n\r\n    tweenVars.x = function (i) {\r\n      return comps[i].a.x + \"px\";\r\n    };\r\n\r\n    tweenVars.y = function (i) {\r\n      return comps[i].a.y + \"px\";\r\n    };\r\n\r\n    tweenVars.rotation = function (i) {\r\n      return comps[i].a.rotation + (spin ? spinFunc(i, targets[i], targets) * 360 : 0);\r\n    };\r\n\r\n    tweenVars.skewX = function (i) {\r\n      return comps[i].a.skewX;\r\n    };\r\n\r\n    targets = comps.map(function (c) {\r\n      return c.t;\r\n    });\r\n\r\n    if (_zIndex || _zIndex === 0) {\r\n      tweenVars.modifiers = {\r\n        zIndex: function zIndex() {\r\n          return _zIndex;\r\n        }\r\n      };\r\n      tweenVars.zIndex = _zIndex;\r\n      tweenVars.immediateRender = vars.immediateRender !== false;\r\n    }\r\n\r\n    fade && (tweenVars.opacity = function (i) {\r\n      return comps[i].sd < 0 ? 0 : comps[i].sd > 0 ? comps[i].a.opacity : \"+=0\";\r\n    });\r\n\r\n    if (swapOutTargets.length) {\r\n      stagger = gsap.utils.distribute(stagger);\r\n      var dummyArray = targets.slice(swapOutTargets.length);\r\n\r\n      tweenVars.stagger = function (i, el) {\r\n        return stagger(~swapOutTargets.indexOf(el) ? targets.indexOf(comps[i].swap.t) : i, el, dummyArray);\r\n      };\r\n    } // // for testing...\r\n    // gsap.delayedCall(vars.data ? 50 : 1, function() {\r\n    // \tanimation.eventCallback(\"onComplete\", () => _setFinalStates(comps, !clearProps));\r\n    // \taddFunc.call(animation, targets, tweenVars, 0).play();\r\n    // });\r\n    // return;\r\n\r\n\r\n    _callbacks.forEach(function (name) {\r\n      return vars[name] && animation.eventCallback(name, vars[name], vars[name + \"Params\"]);\r\n    }); // apply callbacks to the timeline, not tweens (because \"custom\" timing can make multiple tweens)\r\n\r\n\r\n    if (custom && targets.length) {\r\n      // bust out the custom properties as their own tweens so they can use different eases, durations, etc.\r\n      remainingProps = _copy(tweenVars, _reserved);\r\n\r\n      if (\"scale\" in custom) {\r\n        custom.scaleX = custom.scaleY = custom.scale;\r\n        delete custom.scale;\r\n      }\r\n\r\n      for (p in custom) {\r\n        v = _copy(custom[p], _fitReserved);\r\n        v[p] = tweenVars[p];\r\n        !(\"duration\" in v) && \"duration\" in tweenVars && (v.duration = tweenVars.duration);\r\n        v.stagger = tweenVars.stagger;\r\n        addFunc.call(animation, targets, v, 0);\r\n        delete remainingProps[p];\r\n      }\r\n    }\r\n\r\n    if (targets.length || leaving.length || entering.length) {\r\n      toggleClass && animation.add(function () {\r\n        return _toggleClass(classTargets, toggleClass, animation._zTime < 0 ? \"remove\" : \"add\");\r\n      }, 0) && !paused && _toggleClass(classTargets, toggleClass, \"add\");\r\n      targets.length && addFunc.call(animation, targets, remainingProps, 0);\r\n    }\r\n\r\n    _handleCallback(onEnter, entering, animation);\r\n\r\n    _handleCallback(onLeave, leaving, animation);\r\n\r\n    var batchTl = _batch && _batch.timeline;\r\n\r\n    if (batchTl) {\r\n      batchTl.add(animation, 0);\r\n\r\n      _batch._final.push(function () {\r\n        return _setFinalStates(comps, !clearProps);\r\n      });\r\n    }\r\n\r\n    endTime = animation.duration();\r\n    animation.call(function () {\r\n      var forward = animation.time() >= endTime;\r\n      forward && !batchTl && _setFinalStates(comps, !clearProps);\r\n      toggleClass && _toggleClass(classTargets, toggleClass, forward ? \"remove\" : \"add\");\r\n    });\r\n  };\r\n\r\n  absoluteOnLeave && (absolute = comps.filter(function (comp) {\r\n    return !comp.sd && !comp.a.isVisible && comp.b.isVisible;\r\n  }).map(function (comp) {\r\n    return comp.a.element;\r\n  }));\r\n\r\n  if (_batch) {\r\n    var _batch$_abs;\r\n\r\n    absolute && (_batch$_abs = _batch._abs).push.apply(_batch$_abs, _filterComps(comps, absolute));\r\n\r\n    _batch._run.push(run);\r\n  } else {\r\n    absolute && _makeCompsAbsolute(_filterComps(comps, absolute)); // when making absolute, we must go in a very particular order so that document flow changes don't affect things. Don't make it visible if both the before and after states are invisible! There's no point, and it could make things appear visible during the flip that shouldn't be.\r\n\r\n    run();\r\n  }\r\n\r\n  var anim = _batch ? _batch.timeline : animation;\r\n\r\n  anim.revert = function () {\r\n    return _killFlip(anim, 1, 1);\r\n  }; // a Flip timeline should behave very different when reverting - it should actually jump to the end so that styles get cleared out.\r\n\r\n\r\n  return anim;\r\n},\r\n    _interrupt = function _interrupt(tl) {\r\n  tl.vars.onInterrupt && tl.vars.onInterrupt.apply(tl, tl.vars.onInterruptParams || []);\r\n  tl.getChildren(true, false, true).forEach(_interrupt);\r\n},\r\n    _killFlip = function _killFlip(tl, action, force) {\r\n  // action: 0 = nothing, 1 = complete, 2 = only kill (don't complete)\r\n  if (tl && tl.progress() < 1 && (!tl.paused() || force)) {\r\n    if (action) {\r\n      _interrupt(tl);\r\n\r\n      action < 2 && tl.progress(1); // we should also kill it in case it was added to a parent timeline.\r\n\r\n      tl.kill();\r\n    }\r\n\r\n    return true;\r\n  }\r\n},\r\n    _createLookup = function _createLookup(state) {\r\n  var lookup = state.idLookup = {},\r\n      alt = state.alt = {},\r\n      elStates = state.elementStates,\r\n      i = elStates.length,\r\n      elState;\r\n\r\n  while (i--) {\r\n    elState = elStates[i];\r\n    lookup[elState.id] ? alt[elState.id] = elState : lookup[elState.id] = elState;\r\n  }\r\n};\r\n\r\nvar FlipState = /*#__PURE__*/function () {\r\n  function FlipState(targets, vars, targetsAreElementStates) {\r\n    this.props = vars && vars.props;\r\n    this.simple = !!(vars && vars.simple);\r\n\r\n    if (targetsAreElementStates) {\r\n      this.targets = _elementsFromElementStates(targets);\r\n      this.elementStates = targets;\r\n\r\n      _createLookup(this);\r\n    } else {\r\n      this.targets = _toArray(targets);\r\n      var soft = vars && (vars.kill === false || vars.batch && !vars.kill);\r\n      _batch && !soft && _batch._kill.push(this);\r\n      this.update(soft || !!_batch); // when batching, don't force in-progress flips to their end; we need to do that AFTER all getStates() are called.\r\n    }\r\n  }\r\n\r\n  var _proto = FlipState.prototype;\r\n\r\n  _proto.update = function update(soft) {\r\n    var _this = this;\r\n\r\n    this.elementStates = this.targets.map(function (el) {\r\n      return new ElementState(el, _this.props, _this.simple);\r\n    });\r\n\r\n    _createLookup(this);\r\n\r\n    this.interrupt(soft);\r\n    this.recordInlineStyles();\r\n    return this;\r\n  };\r\n\r\n  _proto.clear = function clear() {\r\n    this.targets.length = this.elementStates.length = 0;\r\n\r\n    _createLookup(this);\r\n\r\n    return this;\r\n  };\r\n\r\n  _proto.fit = function fit(state, scale, nested) {\r\n    var elStatesInOrder = _orderByDOMDepth(this.elementStates.slice(0), false, true),\r\n        toElStates = (state || this).idLookup,\r\n        i = 0,\r\n        fromNode,\r\n        toNode;\r\n\r\n    for (; i < elStatesInOrder.length; i++) {\r\n      fromNode = elStatesInOrder[i];\r\n      nested && (fromNode.matrix = getGlobalMatrix(fromNode.element, false, false, true)); // moving a parent affects the position of children\r\n\r\n      toNode = toElStates[fromNode.id];\r\n      toNode && _fit(fromNode, toNode, scale, true, 0, fromNode);\r\n      fromNode.matrix = getGlobalMatrix(fromNode.element, false, false, true);\r\n    }\r\n\r\n    return this;\r\n  };\r\n\r\n  _proto.getProperty = function getProperty(element, property) {\r\n    var es = this.getElementState(element) || _emptyObj;\r\n\r\n    return (property in es ? es : es.props || _emptyObj)[property];\r\n  };\r\n\r\n  _proto.add = function add(state) {\r\n    var i = state.targets.length,\r\n        lookup = this.idLookup,\r\n        alt = this.alt,\r\n        index,\r\n        es,\r\n        es2;\r\n\r\n    while (i--) {\r\n      es = state.elementStates[i];\r\n      es2 = lookup[es.id];\r\n\r\n      if (es2 && (es.element === es2.element || alt[es.id] && alt[es.id].element === es.element)) {\r\n        // if the flip id is already in this FlipState, replace it!\r\n        index = this.elementStates.indexOf(es.element === es2.element ? es2 : alt[es.id]);\r\n        this.targets.splice(index, 1, state.targets[i]);\r\n        this.elementStates.splice(index, 1, es);\r\n      } else {\r\n        this.targets.push(state.targets[i]);\r\n        this.elementStates.push(es);\r\n      }\r\n    }\r\n\r\n    state.interrupted && (this.interrupted = true);\r\n    state.simple || (this.simple = false);\r\n\r\n    _createLookup(this);\r\n\r\n    return this;\r\n  };\r\n\r\n  _proto.compare = function compare(state) {\r\n    var l1 = state.idLookup,\r\n        l2 = this.idLookup,\r\n        unchanged = [],\r\n        changed = [],\r\n        enter = [],\r\n        leave = [],\r\n        targets = [],\r\n        a1 = state.alt,\r\n        a2 = this.alt,\r\n        place = function place(s1, s2, el) {\r\n      return (s1.isVisible !== s2.isVisible ? s1.isVisible ? enter : leave : s1.isVisible ? changed : unchanged).push(el) && targets.push(el);\r\n    },\r\n        placeIfDoesNotExist = function placeIfDoesNotExist(s1, s2, el) {\r\n      return targets.indexOf(el) < 0 && place(s1, s2, el);\r\n    },\r\n        s1,\r\n        s2,\r\n        p,\r\n        el,\r\n        s1Alt,\r\n        s2Alt,\r\n        c1,\r\n        c2;\r\n\r\n    for (p in l1) {\r\n      s1Alt = a1[p];\r\n      s2Alt = a2[p];\r\n      s1 = !s1Alt ? l1[p] : _getChangingElState(state, this, p);\r\n      el = s1.element;\r\n      s2 = l2[p];\r\n\r\n      if (s2Alt) {\r\n        c2 = s2.isVisible || !s2Alt.isVisible && el === s2.element ? s2 : s2Alt;\r\n        c1 = s1Alt && !s1.isVisible && !s1Alt.isVisible && c2.element === s1Alt.element ? s1Alt : s1; //c1.element !== c2.element && c1.element === s2.element && (c2 = s2);\r\n\r\n        if (c1.isVisible && c2.isVisible && c1.element !== c2.element) {\r\n          // swapping, so force into \"changed\" array\r\n          (c1.isDifferent(c2) ? changed : unchanged).push(c1.element, c2.element);\r\n          targets.push(c1.element, c2.element);\r\n        } else {\r\n          place(c1, c2, c1.element);\r\n        }\r\n\r\n        s1Alt && c1.element === s1Alt.element && (s1Alt = l1[p]);\r\n        placeIfDoesNotExist(c1.element !== s2.element && s1Alt ? s1Alt : c1, s2, s2.element);\r\n        placeIfDoesNotExist(s1Alt && s1Alt.element === s2Alt.element ? s1Alt : c1, s2Alt, s2Alt.element);\r\n        s1Alt && placeIfDoesNotExist(s1Alt, s2Alt.element === s1Alt.element ? s2Alt : s2, s1Alt.element);\r\n      } else {\r\n        !s2 ? enter.push(el) : !s2.isDifferent(s1) ? unchanged.push(el) : place(s1, s2, el);\r\n        s1Alt && placeIfDoesNotExist(s1Alt, s2, s1Alt.element);\r\n      }\r\n    }\r\n\r\n    for (p in l2) {\r\n      if (!l1[p]) {\r\n        leave.push(l2[p].element);\r\n        a2[p] && leave.push(a2[p].element);\r\n      }\r\n    }\r\n\r\n    return {\r\n      changed: changed,\r\n      unchanged: unchanged,\r\n      enter: enter,\r\n      leave: leave\r\n    };\r\n  };\r\n\r\n  _proto.recordInlineStyles = function recordInlineStyles() {\r\n    var props = _memoizedRemoveProps[this.props] || _removeProps,\r\n        i = this.elementStates.length;\r\n\r\n    while (i--) {\r\n      _recordInlineStyles(this.elementStates[i], props);\r\n    }\r\n  };\r\n\r\n  _proto.interrupt = function interrupt(soft) {\r\n    var _this2 = this;\r\n\r\n    // soft = DON'T force in-progress flip animations to completion (like when running a batch, we can't immediately kill flips when getting states because it could contaminate positioning and other .getState() calls that will run in the batch (we kill AFTER all the .getState() calls complete).\r\n    var timelines = [];\r\n    this.targets.forEach(function (t) {\r\n      var tl = t._flip,\r\n          foundInProgress = _killFlip(tl, soft ? 0 : 1);\r\n\r\n      soft && foundInProgress && timelines.indexOf(tl) < 0 && tl.add(function () {\r\n        return _this2.updateVisibility();\r\n      });\r\n      foundInProgress && timelines.push(tl);\r\n    });\r\n    !soft && timelines.length && this.updateVisibility(); // if we found an in-progress Flip animation, we must record all the values in their current state at that point BUT we should update the isVisible value AFTER pushing that flip to completion so that elements that are entering or leaving will populate those Arrays properly.\r\n\r\n    this.interrupted || (this.interrupted = !!timelines.length);\r\n  };\r\n\r\n  _proto.updateVisibility = function updateVisibility() {\r\n    this.elementStates.forEach(function (es) {\r\n      var b = es.element.getBoundingClientRect();\r\n      es.isVisible = !!(b.width || b.height || b.top || b.left);\r\n      es.uncache = 1;\r\n    });\r\n  };\r\n\r\n  _proto.getElementState = function getElementState(element) {\r\n    return this.elementStates[this.targets.indexOf(_getEl(element))];\r\n  };\r\n\r\n  _proto.makeAbsolute = function makeAbsolute() {\r\n    return _orderByDOMDepth(this.elementStates.slice(0), true, true).map(_makeAbsolute);\r\n  };\r\n\r\n  return FlipState;\r\n}();\r\n\r\nvar ElementState = /*#__PURE__*/function () {\r\n  function ElementState(element, props, simple) {\r\n    this.element = element;\r\n    this.update(props, simple);\r\n  }\r\n\r\n  var _proto2 = ElementState.prototype;\r\n\r\n  _proto2.isDifferent = function isDifferent(state) {\r\n    var b1 = this.bounds,\r\n        b2 = state.bounds;\r\n    return b1.top !== b2.top || b1.left !== b2.left || b1.width !== b2.width || b1.height !== b2.height || !this.matrix.equals(state.matrix) || this.opacity !== state.opacity || this.props && state.props && JSON.stringify(this.props) !== JSON.stringify(state.props);\r\n  };\r\n\r\n  _proto2.update = function update(props, simple) {\r\n    var self = this,\r\n        element = self.element,\r\n        getProp = gsap.getProperty(element),\r\n        cache = gsap.core.getCache(element),\r\n        bounds = element.getBoundingClientRect(),\r\n        bbox = element.getBBox && typeof element.getBBox === \"function\" && element.nodeName.toLowerCase() !== \"svg\" && element.getBBox(),\r\n        m = simple ? new Matrix2D(1, 0, 0, 1, bounds.left + _getDocScrollLeft(), bounds.top + _getDocScrollTop()) : getGlobalMatrix(element, false, false, true);\r\n    cache.uncache = 1; // in case there are CSS rules that affect the element. Example: https://gsap.com/community/forums/topic/44321-bug-on-fixed-position-using-flip/\r\n\r\n    self.getProp = getProp;\r\n    self.element = element;\r\n    self.id = _getID(element);\r\n    self.matrix = m;\r\n    self.cache = cache;\r\n    self.bounds = bounds;\r\n    self.isVisible = !!(bounds.width || bounds.height || bounds.left || bounds.top);\r\n    self.display = getProp(\"display\");\r\n    self.position = getProp(\"position\");\r\n    self.parent = element.parentNode;\r\n    self.x = getProp(\"x\");\r\n    self.y = getProp(\"y\");\r\n    self.scaleX = cache.scaleX;\r\n    self.scaleY = cache.scaleY;\r\n    self.rotation = getProp(\"rotation\");\r\n    self.skewX = getProp(\"skewX\");\r\n    self.opacity = getProp(\"opacity\");\r\n    self.width = bbox ? bbox.width : _closestTenth(getProp(\"width\", \"px\"), 0.04); // round up to the closest 0.1 so that text doesn't wrap.\r\n\r\n    self.height = bbox ? bbox.height : _closestTenth(getProp(\"height\", \"px\"), 0.04);\r\n    props && _recordProps(self, _memoizedProps[props] || _memoizeProps(props));\r\n    self.ctm = element.getCTM && element.nodeName.toLowerCase() === \"svg\" && _getCTM(element).inverse();\r\n    self.simple = simple || _round(m.a) === 1 && !_round(m.b) && !_round(m.c) && _round(m.d) === 1; // allows us to speed through some other tasks if it's not scale/rotated\r\n\r\n    self.uncache = 0;\r\n  };\r\n\r\n  return ElementState;\r\n}();\r\n\r\nvar FlipAction = /*#__PURE__*/function () {\r\n  function FlipAction(vars, batch) {\r\n    this.vars = vars;\r\n    this.batch = batch;\r\n    this.states = [];\r\n    this.timeline = batch.timeline;\r\n  }\r\n\r\n  var _proto3 = FlipAction.prototype;\r\n\r\n  _proto3.getStateById = function getStateById(id) {\r\n    var i = this.states.length;\r\n\r\n    while (i--) {\r\n      if (this.states[i].idLookup[id]) {\r\n        return this.states[i];\r\n      }\r\n    }\r\n  };\r\n\r\n  _proto3.kill = function kill() {\r\n    this.batch.remove(this);\r\n  };\r\n\r\n  return FlipAction;\r\n}();\r\n\r\nvar FlipBatch = /*#__PURE__*/function () {\r\n  function FlipBatch(id) {\r\n    this.id = id;\r\n    this.actions = [];\r\n    this._kill = [];\r\n    this._final = [];\r\n    this._abs = [];\r\n    this._run = [];\r\n    this.data = {};\r\n    this.state = new FlipState();\r\n    this.timeline = gsap.timeline();\r\n  }\r\n\r\n  var _proto4 = FlipBatch.prototype;\r\n\r\n  _proto4.add = function add(config) {\r\n    var result = this.actions.filter(function (action) {\r\n      return action.vars === config;\r\n    });\r\n\r\n    if (result.length) {\r\n      return result[0];\r\n    }\r\n\r\n    result = new FlipAction(typeof config === \"function\" ? {\r\n      animate: config\r\n    } : config, this);\r\n    this.actions.push(result);\r\n    return result;\r\n  };\r\n\r\n  _proto4.remove = function remove(action) {\r\n    var i = this.actions.indexOf(action);\r\n    i >= 0 && this.actions.splice(i, 1);\r\n    return this;\r\n  };\r\n\r\n  _proto4.getState = function getState(merge) {\r\n    var _this3 = this;\r\n\r\n    var prevBatch = _batch,\r\n        prevAction = _batchAction;\r\n    _batch = this;\r\n    this.state.clear();\r\n    this._kill.length = 0;\r\n    this.actions.forEach(function (action) {\r\n      if (action.vars.getState) {\r\n        action.states.length = 0;\r\n        _batchAction = action;\r\n        action.state = action.vars.getState(action);\r\n      }\r\n\r\n      merge && action.states.forEach(function (s) {\r\n        return _this3.state.add(s);\r\n      });\r\n    });\r\n    _batchAction = prevAction;\r\n    _batch = prevBatch;\r\n    this.killConflicts();\r\n    return this;\r\n  };\r\n\r\n  _proto4.animate = function animate() {\r\n    var _this4 = this;\r\n\r\n    var prevBatch = _batch,\r\n        tl = this.timeline,\r\n        i = this.actions.length,\r\n        finalStates,\r\n        endTime;\r\n    _batch = this;\r\n    tl.clear();\r\n    this._abs.length = this._final.length = this._run.length = 0;\r\n    this.actions.forEach(function (a) {\r\n      a.vars.animate && a.vars.animate(a);\r\n      var onEnter = a.vars.onEnter,\r\n          onLeave = a.vars.onLeave,\r\n          targets = a.targets,\r\n          s,\r\n          result;\r\n\r\n      if (targets && targets.length && (onEnter || onLeave)) {\r\n        s = new FlipState();\r\n        a.states.forEach(function (state) {\r\n          return s.add(state);\r\n        });\r\n        result = s.compare(Flip.getState(targets));\r\n        result.enter.length && onEnter && onEnter(result.enter);\r\n        result.leave.length && onLeave && onLeave(result.leave);\r\n      }\r\n    });\r\n\r\n    _makeCompsAbsolute(this._abs);\r\n\r\n    this._run.forEach(function (f) {\r\n      return f();\r\n    });\r\n\r\n    endTime = tl.duration();\r\n    finalStates = this._final.slice(0);\r\n    tl.add(function () {\r\n      if (endTime <= tl.time()) {\r\n        // only call if moving forward in the timeline (in case it's nested in a timeline that gets reversed)\r\n        finalStates.forEach(function (f) {\r\n          return f();\r\n        });\r\n\r\n        _forEachBatch(_this4, \"onComplete\");\r\n      }\r\n    });\r\n    _batch = prevBatch;\r\n\r\n    while (i--) {\r\n      this.actions[i].vars.once && this.actions[i].kill();\r\n    }\r\n\r\n    _forEachBatch(this, \"onStart\");\r\n\r\n    tl.restart();\r\n    return this;\r\n  };\r\n\r\n  _proto4.loadState = function loadState(done) {\r\n    done || (done = function done() {\r\n      return 0;\r\n    });\r\n    var queue = [];\r\n    this.actions.forEach(function (c) {\r\n      if (c.vars.loadState) {\r\n        var i,\r\n            f = function f(targets) {\r\n          targets && (c.targets = targets);\r\n          i = queue.indexOf(f);\r\n\r\n          if (~i) {\r\n            queue.splice(i, 1);\r\n            queue.length || done();\r\n          }\r\n        };\r\n\r\n        queue.push(f);\r\n        c.vars.loadState(f);\r\n      }\r\n    });\r\n    queue.length || done();\r\n    return this;\r\n  };\r\n\r\n  _proto4.setState = function setState() {\r\n    this.actions.forEach(function (c) {\r\n      return c.targets = c.vars.setState && c.vars.setState(c);\r\n    });\r\n    return this;\r\n  };\r\n\r\n  _proto4.killConflicts = function killConflicts(soft) {\r\n    this.state.interrupt(soft);\r\n\r\n    this._kill.forEach(function (state) {\r\n      return state.interrupt(soft);\r\n    });\r\n\r\n    return this;\r\n  };\r\n\r\n  _proto4.run = function run(skipGetState, merge) {\r\n    var _this5 = this;\r\n\r\n    if (this !== _batch) {\r\n      skipGetState || this.getState(merge);\r\n      this.loadState(function () {\r\n        if (!_this5._killed) {\r\n          _this5.setState();\r\n\r\n          _this5.animate();\r\n        }\r\n      });\r\n    }\r\n\r\n    return this;\r\n  };\r\n\r\n  _proto4.clear = function clear(stateOnly) {\r\n    this.state.clear();\r\n    stateOnly || (this.actions.length = 0);\r\n  };\r\n\r\n  _proto4.getStateById = function getStateById(id) {\r\n    var i = this.actions.length,\r\n        s;\r\n\r\n    while (i--) {\r\n      s = this.actions[i].getStateById(id);\r\n\r\n      if (s) {\r\n        return s;\r\n      }\r\n    }\r\n\r\n    return this.state.idLookup[id] && this.state;\r\n  };\r\n\r\n  _proto4.kill = function kill() {\r\n    this._killed = 1;\r\n    this.clear();\r\n    delete _batchLookup[this.id];\r\n  };\r\n\r\n  return FlipBatch;\r\n}();\r\n\r\nexport var Flip = /*#__PURE__*/function () {\r\n  function Flip() {}\r\n\r\n  Flip.getState = function getState(targets, vars) {\r\n    var state = _parseState(targets, vars);\r\n\r\n    _batchAction && _batchAction.states.push(state);\r\n    vars && vars.batch && Flip.batch(vars.batch).state.add(state);\r\n    return state;\r\n  };\r\n\r\n  Flip.from = function from(state, vars) {\r\n    vars = vars || {};\r\n    \"clearProps\" in vars || (vars.clearProps = true);\r\n    return _fromTo(state, _parseState(vars.targets || state.targets, {\r\n      props: vars.props || state.props,\r\n      simple: vars.simple,\r\n      kill: !!vars.kill\r\n    }), vars, -1);\r\n  };\r\n\r\n  Flip.to = function to(state, vars) {\r\n    return _fromTo(state, _parseState(vars.targets || state.targets, {\r\n      props: vars.props || state.props,\r\n      simple: vars.simple,\r\n      kill: !!vars.kill\r\n    }), vars, 1);\r\n  };\r\n\r\n  Flip.fromTo = function fromTo(fromState, toState, vars) {\r\n    return _fromTo(fromState, toState, vars);\r\n  };\r\n\r\n  Flip.fit = function fit(fromEl, toEl, vars) {\r\n    var v = vars ? _copy(vars, _fitReserved) : {},\r\n        _ref = vars || v,\r\n        absolute = _ref.absolute,\r\n        scale = _ref.scale,\r\n        getVars = _ref.getVars,\r\n        props = _ref.props,\r\n        runBackwards = _ref.runBackwards,\r\n        onComplete = _ref.onComplete,\r\n        simple = _ref.simple,\r\n        fitChild = vars && vars.fitChild && _getEl(vars.fitChild),\r\n        before = _parseElementState(toEl, props, simple, fromEl),\r\n        after = _parseElementState(fromEl, 0, simple, before),\r\n        inlineProps = props ? _memoizedRemoveProps[props] : _removeProps,\r\n        ctx = gsap.context();\r\n\r\n    props && _applyProps(v, before.props);\r\n\r\n    _recordInlineStyles(after, inlineProps);\r\n\r\n    if (runBackwards) {\r\n      \"immediateRender\" in v || (v.immediateRender = true);\r\n\r\n      v.onComplete = function () {\r\n        _applyInlineStyles(after);\r\n\r\n        onComplete && onComplete.apply(this, arguments);\r\n      };\r\n    }\r\n\r\n    absolute && _makeAbsolute(after, before);\r\n    v = _fit(after, before, scale || fitChild, !v.duration && props, fitChild, v.duration || getVars ? v : 0);\r\n    typeof vars === \"object\" && \"zIndex\" in vars && (v.zIndex = vars.zIndex);\r\n    ctx && !getVars && ctx.add(function () {\r\n      return function () {\r\n        return _applyInlineStyles(after);\r\n      };\r\n    });\r\n    return getVars ? v : v.duration ? gsap.to(after.element, v) : null;\r\n  };\r\n\r\n  Flip.makeAbsolute = function makeAbsolute(targetsOrStates, vars) {\r\n    return (targetsOrStates instanceof FlipState ? targetsOrStates : new FlipState(targetsOrStates, vars)).makeAbsolute();\r\n  };\r\n\r\n  Flip.batch = function batch(id) {\r\n    id || (id = \"default\");\r\n    return _batchLookup[id] || (_batchLookup[id] = new FlipBatch(id));\r\n  };\r\n\r\n  Flip.killFlipsOf = function killFlipsOf(targets, complete) {\r\n    (targets instanceof FlipState ? targets.targets : _toArray(targets)).forEach(function (t) {\r\n      return t && _killFlip(t._flip, complete !== false ? 1 : 2);\r\n    });\r\n  };\r\n\r\n  Flip.isFlipping = function isFlipping(target) {\r\n    var f = Flip.getByTarget(target);\r\n    return !!f && f.isActive();\r\n  };\r\n\r\n  Flip.getByTarget = function getByTarget(target) {\r\n    return (_getEl(target) || _emptyObj)._flip;\r\n  };\r\n\r\n  Flip.getElementState = function getElementState(target, props) {\r\n    return new ElementState(_getEl(target), props);\r\n  };\r\n\r\n  Flip.convertCoordinates = function convertCoordinates(fromElement, toElement, point) {\r\n    var m = getGlobalMatrix(toElement, true, true).multiply(getGlobalMatrix(fromElement));\r\n    return point ? m.apply(point) : m;\r\n  };\r\n\r\n  Flip.register = function register(core) {\r\n    _body = typeof document !== \"undefined\" && document.body;\r\n\r\n    if (_body) {\r\n      gsap = core;\r\n\r\n      _setDoc(_body);\r\n\r\n      _toArray = gsap.utils.toArray;\r\n      _getStyleSaver = gsap.core.getStyleSaver;\r\n      var snap = gsap.utils.snap(0.1);\r\n\r\n      _closestTenth = function _closestTenth(value, add) {\r\n        return snap(parseFloat(value) + add);\r\n      };\r\n    }\r\n  };\r\n\r\n  return Flip;\r\n}();\r\nFlip.version = \"3.13.0\"; // function whenImagesLoad(el, func) {\r\n// \tlet pending = [],\r\n// \t\tonLoad = e => {\r\n// \t\t\tpending.splice(pending.indexOf(e.target), 1);\r\n// \t\t\te.target.removeEventListener(\"load\", onLoad);\r\n// \t\t\tpending.length || func();\r\n// \t\t};\r\n// \tgsap.utils.toArray(el.tagName.toLowerCase() === \"img\" ? el : el.querySelectorAll(\"img\")).forEach(img => img.complete || img.addEventListener(\"load\", onLoad) || pending.push(img));\r\n// \tpending.length || func();\r\n// }\r\n\r\ntypeof window !== \"undefined\" && window.gsap && window.gsap.registerPlugin(Flip);\r\nexport { Flip as default };"],
  "mappings": "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",
  "names": ["_forEachBatch", "_listToArray", "_getEl", "_round", "_toggleClass", "_camelToDashed", "_copy", "_memoizeProps", "_getInverseGlobalMatrix", "_getDOMDepth", "_orderByDOMDepth", "_recordInlineStyles", "_applyInlineStyles", "_setFinalStates", "_makeAbsolute", "_filterComps", "_makeCompsAbsolute", "_findElStateInState", "_parseElementState", "_recordProps", "_applyProps", "_getID", "_elementsFromElementStates", "_handleCallback", "_fit", "_parseState", "_getChangingElState", "_lockBodyScroll", "_fromTo", "p", "i", "run", "el", "comp", "_interrupt", "_killFlip", "_createLookup", "FlipState", "place", "s1", "s2", "placeIfDoesNotExist", "ElementState", "FlipAction", "FlipBatch", "done", "f", "Flip", "_closestTenth"]
}
